diff --git a/src/posix/enumerate.rs b/src/posix/enumerate.rs
index 65c42bb..ee50f55 100644
--- a/src/posix/enumerate.rs
+++ b/src/posix/enumerate.rs
@@ -62,6 +62,30 @@ fn udev_hex_property_as_u16(d: &libudev::Device, key: &str) -> Result<u16> {
     }
 }
 
+/// Attempts to interpret a PCI device as a USB device. This is a workaround for a bug where USB
+/// devices are incorrectly reported with ID_BUS=pci. Luckily, the USB attributes are available in
+/// "ID_USB_*" properties. See <https://github.com/lowRISC/opentitan/issues/18491>.
+///
+/// The buggy behavior has been observed on Debian 11 Bullseye with udev 247.3-7+deb11u2 and systemd
+/// 247.3-7+deb11u2. It seems likely that this has the same root cause as the following Debian bug:
+/// <https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1035094>. That discussion indicates that the
+/// bug is fixed upstream in systemd, but it has not yet been released as a package for Debian 11.
+/// We should delete this workaround once the systemd package is patched.
+#[cfg(all(target_os = "linux", not(target_env = "musl"), feature = "libudev"))]
+fn try_interpret_pci_as_usb(d: &libudev::Device) -> Result<SerialPortType> {
+    assert_eq!(
+        d.property_value("ID_BUS").and_then(OsStr::to_str),
+        Some("pci")
+    );
+    Ok(SerialPortType::UsbPort(UsbPortInfo {
+        vid: udev_hex_property_as_u16(d, "ID_USB_VENDOR_ID")?,
+        pid: udev_hex_property_as_u16(d, "ID_USB_MODEL_ID")?,
+        serial_number: udev_property_as_string(d, "ID_USB_SERIAL_SHORT"),
+        manufacturer: udev_property_as_string(d, "ID_USB_VENDOR"),
+        product: udev_property_as_string(d, "ID_USB_MODEL"),
+    }))
+}
+
 #[cfg(all(target_os = "linux", not(target_env = "musl"), feature = "libudev"))]
 fn port_type(d: &libudev::Device) -> Result<SerialPortType> {
     match d.property_value("ID_BUS").and_then(OsStr::to_str) {
@@ -77,7 +101,7 @@ fn port_type(d: &libudev::Device) -> Result<SerialPortType> {
                     .or_else(|| udev_property_as_string(d, "ID_MODEL")),
             }))
         }
-        Some("pci") => Ok(SerialPortType::PciPort),
+        Some("pci") => try_interpret_pci_as_usb(d).or(Ok(SerialPortType::PciPort)),
         _ => Ok(SerialPortType::Unknown),
     }
 }
