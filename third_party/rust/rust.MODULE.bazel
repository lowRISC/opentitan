# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Dependencies:
bazel_dep(name = "rules_rust", version = "0.59.2")
bazel_dep(name = "rules_rust_bindgen", version = "0.59.2")
bazel_dep(name = "toolchains_llvm", version = "1.1.2")

# Overrides and patches:
single_version_override(
    module_name = "rules_rust",
    patches = [
        "//third_party/rust/patches:rules_rust.extra_rustc_toolchain_dirs.patch",
    ],
    patch_strip = 1,
    version = "0.59.2",
)

single_version_override(
    module_name = "rules_rust_bindgen",
    patches = [
        "//third_party/rust/patches:rules_rust.bindgen_static_lib.patch",
    ],
    patch_strip = 3,
    version = "0.59.2",
)

# Rust toolchain:
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.repository_set(
    name = "rust_host",
    edition = "2024",
    exec_triple = "x86_64-unknown-linux-gnu",
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_triple = "x86_64-unknown-linux-gnu",
    sha256s = {
        "2025-01-03/rustc-nightly-x86_64-unknown-linux-gnu.tar.xz": "a7e713b2c38d2c16a2025d228480909a2281c91ad8fd225b1dacc3eda933724c",
        "2025-01-03/clippy-nightly-x86_64-unknown-linux-gnu.tar.xz": "5d04b1e1a23c054cbb1775a32ece3d09f7bb158601b82a038f51bb998fce8ee8",
        "2025-01-03/cargo-nightly-x86_64-unknown-linux-gnu.tar.xz": "e28f21e048490c2cc212169799b5ac3a01651e6946aca2f120adf0be6f3a70d9",
        "2025-01-03/llvm-tools-nightly-x86_64-unknown-linux-gnu.tar.xz": "67e9e52780680c3a4b0dadc138864a9da0fb99a4af882d3477b90c8b2efe474c",
        "2025-01-03/rust-std-nightly-x86_64-unknown-linux-gnu.tar.xz": "a5f96b464ace329963eef9e358303a17b5544cbd49b450474f4bc16cae0cc191",
    },
    # Use nightly that Rust 1.85 branches from.
    versions = ["nightly/2025-01-03"],
)
rust.repository_set(
    name = "rust_tock",
    edition = "2021",
    exec_triple = "x86_64-unknown-linux-gnu",
    target_compatible_with = [
        "@platforms//cpu:riscv32",
    ],
    sha256s = {
        "2023-07-30/rustc-nightly-x86_64-unknown-linux-gnu.tar.xz": "ecdee8821a57efbb699b7e3aa4cbfbd60b7970bce89a8cfb9bc7d65b9058ee42",
        "2023-07-30/clippy-nightly-x86_64-unknown-linux-gnu.tar.xz": "76ee5aac81d1348bfebd3d94d5fb65c3f4ea0cf5fc2de834926f93772547380c",
        "2023-07-30/cargo-nightly-x86_64-unknown-linux-gnu.tar.xz": "4ddb3ed2dd2acedf9097f4a1fe17b8cd571fdd7c9a49b1e31c228a284ec95049",
        "2023-07-30/llvm-tools-nightly-x86_64-unknown-linux-gnu.tar.xz": "dc71b9ae6a4a4b9fa259724b29f4ad19467197ced89a8aad675f5af112c4fb77",
        "2023-07-30/rust-std-nightly-riscv32imc-unknown-none-elf.tar.xz": "9790d50d4510443bbf4c13b68227a273345d28b84d29372bc5f5ea2d14d05f2d",
        "2023-07-30/rust-std-nightly-x86_64-unknown-linux-gnu.tar.xz": "b5a589a243923c5fa2a1f08e7b902bb0a64ae08010067b9074501a6e1fb8b042",
    },
    target_triple = "riscv32imc-unknown-none-elf",
    # For RISC-V toolchain, we currently don't support LLVM 16+ due to old binutils version.
    # Rust updated its LLVM 17 on 2023-08-08.
    versions = ["nightly/2023-07-30"],
)
use_repo(rust, "rust_toolchains")
register_toolchains("@rust_toolchains//:all")

# Rust crates:
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.from_cargo(
    name = "crate_index",
    cargo_lockfile = "//third_party/rust:Cargo.lock",
    manifests = ["//third_party/rust:Cargo.toml"],
    # By default rules_rust will analyze dependencies for all supported target triples, which is very slow.
    # Restrict to ones that we're interested in. See https://github.com/bazelbuild/rules_rust/issues/2876
    supported_platform_triples = [
        "x86_64-unknown-linux-gnu",
    ],
)
crate.annotation(
    crate = "libudev-sys",
    patch_args = ["-p1"],
    patches = ["@//third_party/rust/patches:libudev-sys-0.1.4.patch"],
    repositories = ["crate_index"],
)
crate.annotation(
    crate = "cryptoki",
    patch_args = ["-p2"],
    patches = [
        "@lowrisc_opentitan//third_party/rust/patches:cryptoki-vendor-defined-mechanism-type.patch",
        "@lowrisc_opentitan//third_party/rust/patches:cryptoki-profile.patch",
    ],
    repositories = ["crate_index"],
)
crate.annotation(
    additive_build_file_content = """
        filegroup(
            name = "binding_srcs",
            srcs = [
                "src/lib.rs",
                "src/bindings/x86_64-unknown-linux-gnu.rs",
            ],
        )
    """,
    crate = "cryptoki-sys",
    extra_aliased_targets = {
        "cryptoki-sys-binding-srcs": "binding_srcs",
    },
    repositories = ["crate_index"],
)
crate.annotation(
    build_script_env = {
        "PKG_CONFIG_PATH": "$(OPENSSL_PKG_CONFIG_PATH)",
        "OPENSSL_STATIC": "1",
    },
    build_script_toolchains = ["@lowrisc_opentitan//third_party/rust:openssl_pkg_config_path"],
    crate = "openssl-sys",
    repositories = ["crate_index"],
)
use_repo(crate, "crate_index")

# mdbook (separate because it has a lot of dependencies):
crate.from_cargo(
    name = "mdbook_index",
    cargo_lockfile = "//third_party/mdbook:Cargo.lock",
    manifests = ["//third_party/mdbook:Cargo.toml"],
    supported_platform_triples = [
        "x86_64-unknown-linux-gnu",
    ],
)
crate.annotation(
    crate = "mdbook",
    deps = [
        "@mdbook_index//:ignore",
    ],
    gen_binaries = ["mdbook"],
    patch_args = ["-p1"],
    patches = [
        "@//third_party/mdbook/patches:mdbook-landing-page-links.patch",
        "@//third_party/mdbook/patches:mdbook-mdignore.patch",
    ],
    repositories = ["mdbook_index"],
)
use_repo(crate, "mdbook_index")

# Rust bindgen toolchain:
register_toolchains("//third_party/rust:bindgen_toolchain")

# LLVM toolchain used by bindgen for `libclang` (not for device software):
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    name = "llvm_toolchain",
    llvm_versions = {"": "10.0.0"},
    sha256 = {"": "b25f592a0c00686f03e3b7db68ca6dc87418f681f4ead4df4745a01d9be63843"},
    strip_prefix = {"": "clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04"},
    urls = {"": ["https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz"]},
)
use_repo(llvm, "llvm_toolchain_llvm")
