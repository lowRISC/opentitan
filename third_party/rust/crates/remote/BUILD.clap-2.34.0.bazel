"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/rust/crates", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT"
])

# Generated Targets

rust_library(
    name = "clap",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "ansi_term",
        "atty",
        "color",
        "default",
        "strsim",
        "suggestions",
        "vec_map",
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=clap",
        "manual",
    ],
    version = "2.34.0",
    # buildifier: leave-alone
    deps = [
        "@raze__atty__0_2_14//:atty",
        "@raze__bitflags__1_3_2//:bitflags",
        "@raze__strsim__0_8_0//:strsim",
        "@raze__textwrap__0_11_0//:textwrap",
        "@raze__unicode_width__0_1_10//:unicode_width",
        "@raze__vec_map__0_8_2//:vec_map",
    ] + selects.with_or({
        # cfg(not(windows))
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__ansi_term__0_12_1//:ansi_term",
        ],
        "//conditions:default": [],
    }),
)
