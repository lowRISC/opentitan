# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

name: CI
on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  quick_lint:
    name: Lint (quick)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required so we can lint commit messages.
      - name: Install dependencies
        uses: ./.github/actions/install-deps
      - name: Environment
        run: ./ci/scripts/show-env.sh
      - name: Commit metadata
        run: ./ci/scripts/lint-commits.sh "$GITHUB_BASE_REF"
      - name: License headers
        run: ./ci/scripts/check-licence-headers.sh "$GITHUB_BASE_REF"
      - name: Executable bits
        run: ./ci/scripts/exec-check.sh
      - name: Non-ASCII characters
        run: ./ci/scripts/check-ascii.sh
      - name: Python (flake8)
        run: ./ci/scripts/python-lint.sh "$GITHUB_BASE_REF"
      - name: Python (mypy)
        run: ./ci/scripts/mypy.sh
      - name: C/C++ formatting
        run: ./ci/scripts/clang-format.sh "$GITHUB_BASE_REF"
      - name: Rust formatting
        run: ./ci/scripts/rust-format.sh "$GITHUB_BASE_REF"
      - name: Shellcheck
        run: ./ci/bazelisk.sh test //quality:shellcheck_check
      - name: Header guards
        run: ./ci/scripts/include-guard.sh "$GITHUB_BASE_REF"
      - name: Trailing whitespace
        run: ./ci/scripts/whitespace.sh "$GITHUB_BASE_REF"
      - name: Broken links
        run: ./ci/scripts/check-links.sh
      - name: Generated documentation
        run: ./ci/scripts/check-cmdgen.sh

  airgapped_build:
    name: Airgapped build
    runs-on: ubuntu-20.04
    needs: quick_lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Bitstream cache requires all commits.
      - name: Install dependencies
        uses: ./.github/actions/install-deps
      - name: Prepare airgapped environment
        run: ./util/prep-bazel-airgapped-build.sh
      - name: Build in the airgapped environment
        run: ./ci/scripts/test-airgapped-build.sh

  verible-lint:
    name: Verible lint
    runs-on: ubuntu-24.04
    needs: quick_lint
    env:
      verible_config: hw/lint/tools/veriblelint/lowrisc-styleguide.rules.verible_lint
      verible_version: v0.0-3430-g060bde0f
    steps:
      - uses: actions/checkout@v4
      - name: Prepare Verible config
        run: |
          echo "Concatenating Verible waivers"
          find . -type f -name '*.vbl' -exec cat {} \; >> verible_waiver

          echo "::group::Verible config"
          cat "$verible_config"
          echo "::endgroup::"

          echo "::group::Verible waiver"
          cat "verible_waiver"
          echo "::endgroup::"
      - name: Run Verible linter action
        uses: chipsalliance/verible-linter-action@v2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          verible_version: ${{ env.verible_version }}
          reviewdog_reporter: 'github-pr-check'
          suggest_fixes: 'false'
          config_file: ${{ env.verible_config }}
          extra_args: "--waiver_files=verible_waiver"
