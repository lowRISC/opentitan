# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# GitHub Action to run Verible linting on pull requests and add review comments.
#
# See https://github.com/chipsalliance/verible-linter-action.

name: pr-lint-review

# Triggers when there is any activity on a pull request, e.g. opened, updated.
#
# The action runs in the context of the _base_ of the pull request, but later we
# checkout the repository at the pull request's HEAD to run linting.
on:
  pull_request_target:

jobs:
  verible-lint:
    runs-on: ubuntu-latest
    # Grant only write permissions for setting checks and adding review comments
    # to pull requests.
    permissions:
      checks: write
      contents: read
      pull-requests: write
    env:
      verible_config: hw/lint/tools/veriblelint/lowrisc-styleguide.rules.verible_lint
    steps:
      # Downgrade curl as a bug workaround. Remove when the bug is fixed.
      # https://github.com/curl/curl/issues/11475
      # https://bugs.launchpad.net/ubuntu/+source/curl/+bug/2028170
      - name: Workaround curl bug
        run: |
          # Mark broken packages to have a lower priority than the currently installed
          printf "Package: curl\nPin: version 7.81.0-1ubuntu1.11\nPin-Priority: 99\n\n" | sudo tee -a /etc/apt/preferences.d/curl-workaround.pref
          printf "Package: libcurl4\nPin: version 7.81.0-1ubuntu1.11\nPin-Priority: 99\n\n" | sudo tee -a /etc/apt/preferences.d/curl-workaround.pref
          sudo apt-get install --allow-downgrades -y curl=7.81.0-1 libcurl4=7.81.0-1
      - uses: actions/checkout@v3
        with:
          # Because `pull_request_target` runs at the PR's base, we need to
          # checkout the head of the PR before running the lint.
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Prepare Verible config
        run: |
          echo "Concatenating Verible waivers"
          find . -type f -name '*.vbl' -exec cat {} \; >> verible_waiver

          echo "::group::Verible config"
          cat "$verible_config"
          echo "::endgroup::"

          echo "::group::Verible waiver"
          cat "verible_waiver"
          echo "::endgroup::"
      - name: Run Verible linter action
        uses: chipsalliance/verible-linter-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          suggest_fixes: 'false'
          config_file: ${{ env.verible_config }}
          extra_args: "--waiver_files=verible_waiver"
