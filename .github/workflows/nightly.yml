# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

name: Nightly
on:
  schedule:
    - cron: "00 04 * * *"

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the nightly (for SiVal job only)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  VIVADO_VERSION: "2021.1"

jobs:
  chip_earlgrey_cw310:
    name: Earl Grey for CW310
    uses: ./.github/workflows/bitstream.yml
    secrets: inherit
    with:
      top_name: earlgrey
      design_suffix: cw310

  chip_earlgrey_cw310_hyperdebug:
    name: Earl Grey for CW310 Hyperdebug
    uses: ./.github/workflows/bitstream.yml
    secrets: inherit
    with:
      top_name: earlgrey
      design_suffix: cw310_hyperdebug

  chip_earlgrey_cw340:
    name: Earl Grey for CW340
    uses: ./.github/workflows/bitstream.yml
    secrets: inherit
    with:
      top_name: earlgrey
      design_suffix: cw340

  execute_fpga_cw310_test_rom_tests:
    name: CW310 Test ROM Tests
    needs: chip_earlgrey_cw310
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw310_test_rom_tests
      bitstream: chip_earlgrey_cw310
      board: cw310
      interface: cw310
      tag_filters: cw310_test_rom,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw310_rom_tests:
    name: CW310 ROM Tests
    needs: chip_earlgrey_cw310
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw310_rom_tests
      bitstream: chip_earlgrey_cw310
      board: cw310
      interface: cw310
      tag_filters: cw310_rom_with_fake_keys,-broken,-manual
      add_default_filters: false
      cache_test_results: false
      timeout: 240

  execute_fpga_cw310_rom_ext_tests:
    name: CW310 ROM_EXT Tests
    needs: chip_earlgrey_cw310
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw310_rom_ext_tests
      bitstream: chip_earlgrey_cw310
      board: cw310
      interface: cw310
      tag_filters: cw310_rom_ext,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw310_sival_tests:
    name: CW310 SiVal Tests
    needs: chip_earlgrey_cw310_hyperdebug
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw310_sival_tests
      bitstream: chip_earlgrey_cw310_hyperdebug
      board: cw310
      interface: hyper310
      tag_filters: cw310_sival,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw310_sival_rom_ext_tests:
    name: CW310 SiVal ROM_EXT Tests
    needs: chip_earlgrey_cw310_hyperdebug
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw310_sival_rom_ext_tests
      bitstream: chip_earlgrey_cw310_hyperdebug
      board: cw310
      interface: hyper310
      tag_filters: cw310_sival_rom_ext,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw310_bob_tests:
    name: CW310 BoB (SPI and I2C) Tests
    needs: chip_earlgrey_cw310
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_bob_fpga_tests_cw310
      bitstream: chip_earlgrey_cw310
      board: cw310
      interface: cw310
      targets: "//sw/device/tests/pmod/..."
      tag_filters: cw310_sival_rom_ext_no_hyper,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw340_test_rom_tests:
    name: CW340 SiVal Test ROM Tests
    needs: chip_earlgrey_cw340
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw340_test_rom_tests
      bitstream: chip_earlgrey_cw340
      board: cw340
      interface: cw340
      tag_filters: cw340_test_rom,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw340_rom_tests:
    name: CW340 SiVal ROM Tests
    needs: chip_earlgrey_cw340
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw340_rom_tests
      bitstream: chip_earlgrey_cw340
      board: cw340
      interface: cw340
      tag_filters: cw340_rom_with_fake_keys,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw340_rom_ext_tests:
    name: CW340 SiVal ROM_EXT Tests
    needs: chip_earlgrey_cw340
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw340_rom_ext_tests
      bitstream: chip_earlgrey_cw340
      board: cw340
      interface: cw340
      tag_filters: cw340_rom_ext,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw340_sival_tests:
    name: CW340 SiVal Tests
    needs: chip_earlgrey_cw340
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw340_sival_tests
      bitstream: chip_earlgrey_cw340
      board: cw340
      interface: cw340
      tag_filters: cw340_sival,-broken,-manual
      add_default_filters: false
      cache_test_results: false

  execute_fpga_cw340_sival_rom_ext_tests:
    name: CW340 SiVal ROM_EXT Tests
    needs: chip_earlgrey_cw340
    uses: ./.github/workflows/fpga.yml
    secrets: inherit
    with:
      job_name: execute_fpga_cw340_sival_rom_ext_tests
      bitstream: chip_earlgrey_cw340
      board: cw340
      interface: cw340
      tag_filters: cw340_sival_rom_ext,-broken,-manual
      add_default_filters: false
      cache_test_results: false
      timeout: 90

  slow_otbn_crypto_tests:
    name: Slow OTBN Crypto Tests
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for the bitstream cache to work.
      - name: Prepare environment
        uses: ./.github/actions/prepare-env
        with:
          service_account_json: '${{ secrets.BAZEL_CACHE_CREDS }}'
      - name: Run the tests
        run: |
          ./bazelisk.sh test \
            --cache_test_results=no \
            --test_tag_filters=nightly \
            //sw/otbn/crypto/...
      - name: Publish Bazel test results
        uses: ./.github/actions/publish-bazel-test-results
        if: ${{ !cancelled() }}
        with:
          artifact-name: slow_otbn_crypto_tests-test-results
