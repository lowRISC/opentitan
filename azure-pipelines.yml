# Azure Pipelines CI build configuration
# Documentation at https://aka.ms/yaml

variables:
  VERILATOR_VERSION: 4.010
  VERILATOR_PATH: /opt/buildcache/verilator/$(VERILATOR_VERSION)
  TOOLCHAIN_PATH: /opt/buildcache/riscv
  # Release tag from https://github.com/lowRISC/lowrisc-toolchains/releases
  TOOLCHAIN_VERSION: 20191010-1
  # This controls where builds happen, and gets picked up by build_consts.sh.
  BUILD_ROOT: $(Build.ArtifactStagingDirectory)

trigger:
  tags:
    include:
    - '*'
  # Combine builds on master as long as another build is running
  batch: true
  branches:
    include:
    - master

jobs:
- job: "sw_build"
  displayName: "Build Software"
  pool:
    vmImage: "ubuntu-16.04"
  steps:
  - template: 'ci/install-package-dependencies.yml'
  - bash: |
      set -x
      sudo util/get-toolchain.py \
        --target-dir="${TOOLCHAIN_PATH}" \
        --release-version="${TOOLCHAIN_VERSION}" \
        --update
    displayName: 'Install toolchain'
  - bash: |
      . util/build_consts.sh
      ./meson_init.sh -A
      ninja -C "$(sw_obj_dir sim-verilator)" all
      ninja -C "$(sw_obj_dir fpga)" all
    displayName: 'Build embedded targets'
  - template: 'ci/upload-artifacts-template.yml'
    parameters:
      artifact: sw_build

- job: "top_earlgrey_nexysvideo"
  displayName: "Build NexysVideo variant of the Earl Grey toplevel design using Vivado"
  dependsOn:
    # The bootrom is built into the FPGA image at synthesis time.
    - sw_build
  pool: Default
  timeoutInMinutes: 120 # 2 hours
  steps:
  - template: 'ci/install-package-dependencies.yml'
  - template: 'ci/download-artifacts-template.yml'
  - bash: |
      set -e
      . util/build_consts.sh
      mkdir -p "$OBJ_DIR/hw"
      mkdir -p "$BIN_DIR/hw/top_earlgrey"

      BOOTROM_VMEM="$BIN_DIR/sw/device/fpga/boot_rom/boot_rom.vmem"
      test -f "$BOOTROM_VMEM"

      . /opt/xilinx/Vivado/2018.3/settings64.sh
      fusesoc --cores-root=. \
        run --target=synth --setup --build \
        --build-root="$OBJ_DIR/hw" \
        lowrisc:systems:top_earlgrey_nexysvideo  \
        --PRIM_DEFAULT_IMPL="prim_pkg::ImplXilinx"  \
        --ROM_INIT_FILE="$BOOTROM_VMEM"

      cp "$OBJ_DIR/hw/synth-vivado/lowrisc_systems_top_earlgrey_nexysvideo_0.1.bit" \
        "$BIN_DIR/hw/top_earlgrey"
    displayName: 'Build bitstream with Vivado'
  - publish: "$(Build.ArtifactStagingDirectory)/build-out"
    artifact: vivado-outputs
    displayName: 'Debug: Upload all vivado outputs'
    condition: always()
  - template: 'ci/upload-artifacts-template.yml'
    parameters:
      artifact: top_earlgrey_nexysvideo

- job: "deploy_releaseartifacts"
  displayName: "Package and deploy release distribution"
  pool:
    vmImage: "ubuntu-latest"
  dependsOn:
    - sw_build
    - top_earlgrey_nexysvideo
  steps:
  - template: 'ci/install-package-dependencies.yml'
  - template: 'ci/download-artifacts-template.yml'
  - bash: |
      . util/build_consts.sh

      util/make_distribution.sh

      tar --list -f $BIN_DIR/opentitan-*.tar.xz
      # Put the resulting tar file into a directory the |publish| step below can reference.
      mkdir "$BUILD_ROOT/dist-final"
      mv $BIN_DIR/opentitan-*.tar.xz "$BUILD_ROOT/dist-final"
    displayName: 'Create final dist directory out of partial ones'
  - publish: $(Build.ArtifactStagingDirectory)/dist-final
    artifact: opentitan-dist
    displayName: "Upload release artifacts as Azure artifact"
  - task: GithubRelease@0
    displayName: 'Upload to GitHub releases (only tags)'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: opentitan-release-upload
      repositoryName: lowrisc/opentitan
      addChangeLog: false
      assets: |
          $(Build.ArtifactStagingDirectory)/dist-final/*
