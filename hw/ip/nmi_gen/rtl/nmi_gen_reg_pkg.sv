// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package nmi_gen_reg_pkg;

///////////////////////////////////////
// Register to internal design logic //
///////////////////////////////////////

typedef struct packed {
  struct packed {
    struct packed {
      logic q; // [15]
    } esc0;
    struct packed {
      logic q; // [14]
    } esc1;
    struct packed {
      logic q; // [13]
    } esc2;
    struct packed {
      logic q; // [12]
    } esc3;
  } intr_state;
  struct packed {
    struct packed {
      logic q; // [11]
    } esc0;
    struct packed {
      logic q; // [10]
    } esc1;
    struct packed {
      logic q; // [9]
    } esc2;
    struct packed {
      logic q; // [8]
    } esc3;
  } intr_enable;
  struct packed {
    struct packed {
      logic q; // [7]
      logic qe; // [6]
    } esc0;
    struct packed {
      logic q; // [5]
      logic qe; // [4]
    } esc1;
    struct packed {
      logic q; // [3]
      logic qe; // [2]
    } esc2;
    struct packed {
      logic q; // [1]
      logic qe; // [0]
    } esc3;
  } intr_test;
} nmi_gen_reg2hw_t;

///////////////////////////////////////
// Internal design logic to register //
///////////////////////////////////////

typedef struct packed {
  struct packed {
    struct packed {
      logic d; // [7]
      logic de; // [6]
    } esc0;
    struct packed {
      logic d; // [5]
      logic de; // [4]
    } esc1;
    struct packed {
      logic d; // [3]
      logic de; // [2]
    } esc2;
    struct packed {
      logic d; // [1]
      logic de; // [0]
    } esc3;
  } intr_state;
} nmi_gen_hw2reg_t;

  // Register Address
  parameter NMI_GEN_INTR_STATE_OFFSET = 4'h 0;
  parameter NMI_GEN_INTR_ENABLE_OFFSET = 4'h 4;
  parameter NMI_GEN_INTR_TEST_OFFSET = 4'h 8;


  // Register Index
  typedef enum int {
    NMI_GEN_INTR_STATE,
    NMI_GEN_INTR_ENABLE,
    NMI_GEN_INTR_TEST
  } nmi_gen_id_e;

  // Register width information to check illegal writes
  localparam logic [3:0] NMI_GEN_PERMIT [3] = '{
    4'b 0001, // index[0] NMI_GEN_INTR_STATE
    4'b 0001, // index[1] NMI_GEN_INTR_ENABLE
    4'b 0001  // index[2] NMI_GEN_INTR_TEST
  };
endpackage

