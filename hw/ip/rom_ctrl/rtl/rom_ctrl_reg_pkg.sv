// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package rom_ctrl_reg_pkg;

  // Param list
  parameter int NumAlerts = 1;

  // Address widths within the block
  parameter int RegsAw = 3;
  parameter int RomAw = 14;

  ///////////////////////////////////////////////
  // Typedefs for registers for regs interface //
  ///////////////////////////////////////////////

  typedef struct packed {
    logic        q;
    logic        qe;
  } rom_ctrl_reg2hw_alert_test_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } integrity_error;
    struct packed {
      logic        d;
      logic        de;
    } dummy;
  } rom_ctrl_hw2reg_fatal_alert_cause_reg_t;

  // Register -> HW type for regs interface
  typedef struct packed {
    rom_ctrl_reg2hw_alert_test_reg_t alert_test; // [1:0]
  } rom_ctrl_regs_reg2hw_t;

  // HW -> register type for regs interface
  typedef struct packed {
    rom_ctrl_hw2reg_fatal_alert_cause_reg_t fatal_alert_cause; // [3:0]
  } rom_ctrl_regs_hw2reg_t;

  // Register offsets for regs interface
  parameter logic [RegsAw-1:0] ROM_CTRL_ALERT_TEST_OFFSET = 3'h 0;
  parameter logic [RegsAw-1:0] ROM_CTRL_FATAL_ALERT_CAUSE_OFFSET = 3'h 4;

  // Reset values for hwext registers and their fields for regs interface
  parameter logic [0:0] ROM_CTRL_ALERT_TEST_RESVAL = 1'h 0;
  parameter logic [0:0] ROM_CTRL_ALERT_TEST_FATAL_RESVAL = 1'h 0;

  // Register index for regs interface
  typedef enum int {
    ROM_CTRL_ALERT_TEST,
    ROM_CTRL_FATAL_ALERT_CAUSE
  } rom_ctrl_regs_id_e;

  // Register width information to check illegal writes for regs interface
  parameter logic [3:0] ROM_CTRL_REGS_PERMIT [2] = '{
    4'b 0001, // index[0] ROM_CTRL_ALERT_TEST
    4'b 0001  // index[1] ROM_CTRL_FATAL_ALERT_CAUSE
  };

  // Window parameters for rom interface
  parameter logic [RomAw-1:0] ROM_CTRL_ROM_OFFSET = 14'h 0;
  parameter int unsigned      ROM_CTRL_ROM_SIZE   = 'h 4000;

endpackage

