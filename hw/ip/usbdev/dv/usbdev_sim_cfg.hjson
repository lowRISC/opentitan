// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  // Name of the sim cfg - typically same as the name of the DUT.
  name: usbdev

  // Top level dut name (sv module).
  dut: usbdev

  // Top level testbench name (sv module).
  tb: tb

  // Simulator used to sign off this block
  tool: vcs

  // Fusesoc core file used for building the file list.
  fusesoc_core: lowrisc:dv:usbdev_sim:0.1

  // Testplan hjson file.
  testplan: "{proj_root}/hw/ip/usbdev/data/usbdev_testplan.hjson"

  // RAL spec - used to generate the RAL model.
  ral_spec: "{proj_root}/hw/ip/usbdev/data/usbdev.hjson"

  // Import additional common sim cfg files.
  import_cfgs: [// Project wide common sim cfg file
                "{proj_root}/hw/dv/tools/dvsim/common_sim_cfg.hjson",
                // Common CIP test lists
                "{proj_root}/hw/dv/tools/dvsim/tests/csr_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/mem_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/intr_test.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/tl_access_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/sec_cm_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/stress_tests.hjson"]

  // Add additional tops for simulation.
  sim_tops: ["usbdev_bind", "sec_cm_prim_onehot_check_bind"]

  // Default iterations for all tests - each test entry can override this.
  reseed: 50

  // Default UVM test and seq class name.
  uvm_test: usbdev_base_test
  uvm_test_seq: usbdev_base_vseq

  // List of test specifications.
  tests: [
    {
      name: usbdev_smoke
      uvm_test_seq: usbdev_smoke_vseq
    }
    {
      name: usbdev_aon_wake_disconnect
      uvm_test_seq: usbdev_aon_wake_vseq
      run_opts: ["+do_vbus_disconnects=1"]
    }
    {
      name: usbdev_aon_wake_reset
      uvm_test_seq: usbdev_aon_wake_vseq
      run_opts: ["+do_reset_signaling=1"]
    }
    {
      name: usbdev_aon_wake_resume
      uvm_test_seq: usbdev_aon_wake_vseq
      run_opts: ["+do_resume_signaling=1"]
    }
    {
      name: usbdev_av_buffer
      uvm_test_seq: usbdev_av_buffer_vseq
    }
    {
      name: usbdev_bitstuff_err
      uvm_test_seq: usbdev_bitstuff_err_vseq
    }
    {
      name: usbdev_dpi_config_host
      uvm_test_seq: usbdev_dpi_config_host_vseq
      // Limited use of randomization presently
      reseed: 1
    }
    {
      name: usbdev_data_toggle_restore
      uvm_test_seq: usbdev_data_toggle_restore_vseq
    }
    {
      name: usbdev_endpoint_access
      uvm_test_seq: usbdev_endpoint_access_vseq
    }
    {
      name: usbdev_enable
      uvm_test_seq: usbdev_enable_vseq
    }
    {
      name: usbdev_fifo_rst
      uvm_test_seq: usbdev_fifo_rst_vseq
    }
    {
      name: usbdev_in_trans
      uvm_test_seq: usbdev_in_trans_vseq
    }
    {
      name: usbdev_link_in_err
      uvm_test_seq: usbdev_link_in_err_vseq
    }
    {
      name: usbdev_link_suspend
      uvm_test_seq: usbdev_link_suspend_vseq
    }
    {
      name: usbdev_max_length_out_transaction
      uvm_test_seq: usbdev_max_length_out_transaction_vseq
    }
    {
      name: usbdev_min_length_out_transaction
      uvm_test_seq: usbdev_min_length_out_transaction_vseq
    }
    {
      name: usbdev_disconnected
      uvm_test_seq: usbdev_disconnected_vseq
    }
    {
      name: usbdev_nak_trans
      uvm_test_seq: usbdev_nak_trans_vseq
    }
    {
      name: usbdev_out_iso
      uvm_test_seq: usbdev_out_iso_vseq
    }
    {
      name: usbdev_out_stall
      uvm_test_seq: usbdev_out_stall_vseq
    }
    {
      name: usbdev_out_trans_nak
      uvm_test_seq: usbdev_out_trans_nak_vseq
    }
    {
      name: usbdev_pkt_buffer
      uvm_test_seq: usbdev_pkt_buffer_vseq
    }
    {
      name: usbdev_pkt_received
      uvm_test_seq: usbdev_pkt_received_vseq
    }
    {
      name: usbdev_pkt_sent
      uvm_test_seq: usbdev_pkt_sent_vseq
    }
    {
      name: usbdev_random_length_out_trans
      uvm_test_seq: usbdev_random_length_out_transaction_vseq
    }
    {
      name: usbdev_stall_trans
      uvm_test_seq: usbdev_stall_trans_vseq
    }
    {
      name: usbdev_rx_crc_err
      uvm_test_seq: usbdev_rx_crc_err_vseq
    }
    {
      name: usbdev_setup_trans_ignored
      uvm_test_seq: usbdev_setup_trans_ignored_vseq
    }
    {
      name: usbdev_stall_priority_over_nak
      uvm_test_seq: usbdev_stall_priority_over_nak_vseq
    }
    {
      name: usbdev_phy_config_usb_ref_disable
      uvm_test_seq: usbdev_phy_config_usb_ref_disable_vseq
    }
    {
      name: usbdev_phy_config_eop_single_bit_handling
      uvm_test_seq: usbdev_phy_config_eop_single_bit_handling_vseq
    }
    {
      name: usbdev_setup_stage
      uvm_test_seq: usbdev_setup_stage_vseq
    }
    {
      name: usbdev_pending_in_trans
      uvm_test_seq: usbdev_pending_in_trans_vseq
    }
    {
      name: usbdev_phy_pins_sense
      uvm_test_seq: usbdev_phy_pins_sense_vseq
    }
    {
      name: usbdev_in_stall
      uvm_test_seq: usbdev_in_stall_vseq
    }
    {
      name: usbdev_in_iso
      uvm_test_seq: usbdev_in_iso_vseq
    }
    {
      name: random_length_in_trans
      uvm_test_seq: usbdev_in_rand_trans_vseq
    }
    {
      name: min_length_in_transaction
      uvm_test_seq: usbdev_in_rand_trans_vseq
      run_opts: ["+num_of_bytes=0"]
    }
    {
      name: max_length_in_transaction
      uvm_test_seq: usbdev_in_rand_trans_vseq
      run_opts: ["+num_of_bytes=64"]
    }
  ]

  // List of regressions.
  regressions: [
    {
      name: smoke
      tests: ["usbdev_smoke"]
    }
  ]
}
