// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Security countermeasures testplan extracted from the IP Hjson using reggen.
//
// This testplan is auto-generated only the first time it is created. This is
// because this testplan needs to be hand-editable. It is possible that these
// testpoints can go out of date if the spec is updated with new
// countermeasures. When `reggen` is invoked when this testplan already exists,
// It checks if the list of testpoints is up-to-date and enforces the user to
// make further manual updates.
//
// These countermeasures and their descriptions can be found here:
// .../otp_ctrl/data/otp_ctrl.hjson
//
// It is possible that the testing of some of these countermeasures may already
// be covered as a testpoint in a different testplan. This duplication is ok -
// the test would have likely already been developed. We simply map those tests
// to the testpoints below using the `tests` key.
//
// Please ensure that this testplan is imported in:
// .../otp_ctrl/data/otp_ctrl_testplan.hjson
{
  testpoints: [
    {
      name: sec_cm_bus_integrity
      desc: "Verify the countermeasure(s) BUS.INTEGRITY."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_secret_mem_scramble
      desc: "Verify the countermeasure(s) SECRET.MEM.SCRAMBLE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_mem_digest
      desc: "Verify the countermeasure(s) PART.MEM.DIGEST."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_dai_fsm_sparse
      desc: "Verify the countermeasure(s) DAI.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_kdi_fsm_sparse
      desc: "Verify the countermeasure(s) KDI.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lci_fsm_sparse
      desc: "Verify the countermeasure(s) LCI.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_fsm_sparse
      desc: "Verify the countermeasure(s) PART.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_scrmbl_fsm_sparse
      desc: "Verify the countermeasure(s) SCRMBL.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_fsm_sparse
      desc: "Verify the countermeasure(s) TIMER.FSM.SPARSE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_dai_ctr_redun
      desc: "Verify the countermeasure(s) DAI.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_kdi_seed_ctr_redun
      desc: "Verify the countermeasure(s) KDI_SEED.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_kdi_entropy_ctr_redun
      desc: "Verify the countermeasure(s) KDI_ENTROPY.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lci_ctr_redun
      desc: "Verify the countermeasure(s) LCI.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_ctr_redun
      desc: "Verify the countermeasure(s) PART.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_scrmbl_ctr_redun
      desc: "Verify the countermeasure(s) SCRMBL.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_integ_ctr_redun
      desc: "Verify the countermeasure(s) TIMER_INTEG.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_cnsty_ctr_redun
      desc: "Verify the countermeasure(s) TIMER_CNSTY.CTR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_lfsr_redun
      desc: "Verify the countermeasure(s) TIMER.LFSR.REDUN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_dai_fsm_local_esc
      desc: "Verify the countermeasure(s) DAI.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lci_fsm_local_esc
      desc: "Verify the countermeasure(s) LCI.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_kdi_fsm_local_esc
      desc: "Verify the countermeasure(s) KDI.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_fsm_local_esc
      desc: "Verify the countermeasure(s) PART.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_scrmbl_fsm_local_esc
      desc: "Verify the countermeasure(s) SCRMBL.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_fsm_local_esc
      desc: "Verify the countermeasure(s) TIMER.FSM.LOCAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_dai_fsm_global_esc
      desc: "Verify the countermeasure(s) DAI.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lci_fsm_global_esc
      desc: "Verify the countermeasure(s) LCI.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_kdi_fsm_global_esc
      desc: "Verify the countermeasure(s) KDI.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_fsm_global_esc
      desc: "Verify the countermeasure(s) PART.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_scrmbl_fsm_global_esc
      desc: "Verify the countermeasure(s) SCRMBL.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_timer_fsm_global_esc
      desc: "Verify the countermeasure(s) TIMER.FSM.GLOBAL_ESC."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_data_reg_integrity
      desc: "Verify the countermeasure(s) PART.DATA_REG.INTEGRITY."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_data_reg_bkgn_chk
      desc: "Verify the countermeasure(s) PART.DATA_REG.BKGN_CHK."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_mem_regren
      desc: "Verify the countermeasure(s) PART.MEM.REGREN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_mem_sw_unreadable
      desc: "Verify the countermeasure(s) PART.MEM.SW_UNREADABLE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_part_mem_sw_unwritable
      desc: "Verify the countermeasure(s) PART.MEM.SW_UNWRITABLE."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lc_part_mem_sw_noaccess
      desc: "Verify the countermeasure(s) LC_PART.MEM.SW_NOACCESS."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_access_ctrl_mubi
      desc: "Verify the countermeasure(s) ACCESS.CTRL.MUBI."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_token_valid_ctrl_mubi
      desc: "Verify the countermeasure(s) TOKEN_VALID.CTRL.MUBI."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_lc_ctrl_intersig_mubi
      desc: "Verify the countermeasure(s) LC_CTRL.INTERSIG.MUBI."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_test_bus_lc_gated
      desc: "Verify the countermeasure(s) TEST.BUS.LC_GATED."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_direct_access_config_regwen
      desc: "Verify the countermeasure(s) DIRECT_ACCESS.CONFIG.REGWEN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_check_trigger_config_regwen
      desc: "Verify the countermeasure(s) CHECK_TRIGGER.CONFIG.REGWEN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_check_config_regwen
      desc: "Verify the countermeasure(s) CHECK.CONFIG.REGWEN."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_macro_mem_integrity
      desc: "Verify the countermeasure(s) MACRO.MEM.INTEGRITY."
      milestone: V2S
      tests: []
    }
    {
      name: sec_cm_macro_mem_cm
      desc: "Verify the countermeasure(s) MACRO.MEM.CM."
      milestone: V2S
      tests: []
    }
  ]
}
