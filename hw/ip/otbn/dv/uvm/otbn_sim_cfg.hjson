// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
// Name of the sim cfg - typically same as the name of the DUT.
name:
  otbn

  // Top level dut name (sv module).
  dut: otbn

  // Top level testbench name (sv module).
  tb: tb

  // Simulator used to sign off this block
  tool: vcs

  // Fusesoc core file used for building the file list.
  fusesoc_core: lowrisc:dv:otbn_sim:0.1

  // Testplan hjson file.
  testplan: "{proj_root}/hw/ip/otbn/data/otbn_testplan.hjson"


  // Import additional common sim cfg files.
  // TODO: remove imported cfgs that do not apply.
  import_cfgs: [
      // Project wide common sim cfg file
      "{proj_root}/hw/dv/tools/dvsim/common_sim_cfg.hjson",
      // Config file to pull in the correct flags for otbn_memutil
      "{proj_root}/hw/ip/otbn/dv/memutil/otbn_memutil_sim_opts.hjson",
      // Common CIP test lists
      "{proj_root}/hw/dv/tools/dvsim/tests/csr_tests.hjson",
      "{proj_root}/hw/dv/tools/dvsim/tests/mem_tests.hjson",
      "{proj_root}/hw/dv/tools/dvsim/tests/intr_test.hjson",
      "{proj_root}/hw/dv/tools/dvsim/tests/tl_access_tests.hjson"
  ]

  // Add options needed to compile against otbn_memutil
  en_build_modes: ["{tool}_otbn_memutil_build_opts"]

  // Add additional tops for simulation.
  sim_tops: ["-top otbn_bind"]

  // Default iterations for all tests - each test entry can override this.
  //
  // TODO: This is set to one at the moment so things run quickly while we're
  //       bringing stuff up. It will need a more sensible value when we start
  //       testing seriously.
  reseed: 1

  // Default UVM test and seq class name.
  uvm_test: otbn_base_test
  uvm_test_seq: otbn_base_vseq

  // The directory where ELF binaries should be found.
  //
  // TODO: This needs deciding upon. Eventually, it might be nice to allow this
  //       to be overridden on the command line ("I've got a bunch of ELF files
  //       that stress my new feature; please run the test suite with them")
  otbn_elf_dir: "{run_dir}/build-out"
  run_opts: ["+otbn_elf_dir={otbn_elf_dir}"]

  // OTBN run modes.
  run_modes: [
    {
      name: build_otbn_rig_binaries_mode
      pre_run_cmds: ["BUILD_ROOT={run_dir} cd {proj_root} && ./meson_init.sh",
                     "{proj_root}/hw/ip/otbn/dv/uvm/gen-binaries.py --seed {seed} {otbn_elf_dir}"]
    }
  ]

  // List of test specifications.
  tests: [
    {
      name: "otbn_smoke"
      uvm_test_seq: "otbn_smoke_vseq"
      en_run_modes: ["build_otbn_rig_binaries_mode"]
    }
    {
      name: "otbn_single"
      uvm_test_seq: "otbn_single_vseq"
      en_run_modes: ["build_otbn_rig_binaries_mode"]
    }

    // TODO: add more tests here
  ]

  // List of regressions.
  regressions: [
    {
      name: smoke
      tests: ["otbn_smoke"]
    }
  ]
}
