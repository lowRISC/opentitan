// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// This has some assertions that check the inputs from ast react according to
// the pwrmgr outputs. The ast inputs are generated by the base sequences, but
// these assertions will also be useful at full chip level.
interface pwrmgr_ast_if (
  input logic clk_i,
  input logic rst_ni,
  // The output enables.
  input logic core_clk_en,
  input logic io_clk_en,
  input logic usb_clk_en,
  // The input valids.
  input logic core_clk_val,
  input logic io_clk_val,
  input logic usb_clk_val,
  // The main power control.
  input logic main_pd_n,
  input logic main_pok
);

  localparam int MIN_WAIT_CYCLES = 1;
  localparam int MAX_WAIT_CYCLES = 30;

  bit disable_sva;
  bit reset_or_disable;

  always_comb reset_or_disable = !rst_ni || disable_sva;

  `define ON_OFF_ASSERTS(name, en, val) \
    `ASSERT(name``On_A, en |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] val, clk_i, reset_or_disable) \
    `ASSERT(name``Off_A, !en |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] !val, clk_i, reset_or_disable)

  // Clock enable-valid.
  `ON_OFF_ASSERTS(CoreClkHandshake, core_clk_en, core_clk_val)
  `ON_OFF_ASSERTS(IoClkHandshake, io_clk_en, io_clk_val)
  `ON_OFF_ASSERTS(UsbClkHandshake, usb_clk_en, usb_clk_val)
  `ON_OFF_ASSERTS(MainPdHandshake, main_pd_n, main_pok)

  `undef ON_OFF_ASSERTS
endinterface
