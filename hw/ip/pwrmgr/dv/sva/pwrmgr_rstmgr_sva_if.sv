// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// This has some assertions that check the inputs from rstmgr react according to
// the pwrmgr outputs. The rstmgr inputs are generated by the base sequences, but
// these assertions will also be useful at full chip level.
interface pwrmgr_rstmgr_sva_if (
  input logic                                                    clk_i,
  input logic                                                    rst_ni,
  // The inputs from pwrmgr.
  input logic                     [pwrmgr_pkg::PowerDomains-1:0] rst_lc_req,
  input logic                     [pwrmgr_pkg::PowerDomains-1:0] rst_sys_req,
  input logic                                                    ndm_sys_req,
  input pwrmgr_pkg::reset_cause_e                                reset_cause,
  // The inputs from rstmgr.
  input logic                     [pwrmgr_pkg::PowerDomains-1:0] rst_lc_src_n,
  input logic                     [pwrmgr_pkg::PowerDomains-1:0] rst_sys_src_n
);

  localparam int MIN_WAIT_CYCLES = 0;
  localparam int MAX_WAIT_CYCLES = 24;

  bit disable_sva;
  bit reset_or_disable;

  always_comb reset_or_disable = !rst_ni || disable_sva;

  function automatic bit sysOrNdmRstReq(int pd);
    return rst_sys_req[pd] || (ndm_sys_req && reset_cause == pwrmgr_pkg::ResetNone);
  endfunction

  // Lc handshake.
  for (genvar pd = 0; pd < pwrmgr_pkg::PowerDomains; ++pd) begin : gen_assertions_per_power_domains
    `ASSERT(LcHandshakeOn_A,
            rst_lc_req[pd] |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] !rst_lc_src_n[pd], clk_i,
            reset_or_disable)
    `ASSERT(LcHandshakeOff_A,
            !rst_lc_req[pd] |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] rst_lc_src_n[pd], clk_i,
            reset_or_disable)
    `ASSERT(SysHandshakeOn_A,
            sysOrNdmRstReq(pd) |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] !rst_sys_src_n[pd], clk_i,
            reset_or_disable)
    `ASSERT(SysHandshakeOff_A,
            !sysOrNdmRstReq(pd) |-> ##[MIN_WAIT_CYCLES:MAX_WAIT_CYCLES] rst_sys_src_n[pd], clk_i,
            reset_or_disable)
  end
endinterface
