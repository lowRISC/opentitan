// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  // Name of the sim cfg - typically same as the name of the DUT.
  name: xbar

  // Top level testbench name (sv module).
  tb: tb

  // dut is set in the autogenerated sim_cfg hjson file as following
  // dut: xbar_main

  // Fusesoc core file used for building the file list.
  fusesoc_core: lowrisc:dv:{dut}_sim:0.1

  // Testplan hjson file.
  testplan: "{proj_root}/hw/ip/tlul/data/tlul_testplan.hjson"

  // no reg in xbar. This is a make variable in hw/dv/data/sim.mk. Set it to skip make target (RAL)
  exports: [
    skip_gen_ral_pkg: 1
  ]

  // Import additional common sim cfg files.
  import_cfgs: [// Project wide common sim cfg file
                "{proj_root}/hw/dv/data/common_sim_cfg.hjson"]

  // Add additional tops for simulation.
  sim_tops: ["-top {dut}_bind"]

  // Default iterations for all tests - each test entry can override this.
  reseed: 50

  // Default UVM test and seq class name.
  uvm_test: xbar_base_test
  uvm_test_seq: xbar_base_vseq

  // Add xbar specific exclusion files.
  vcs_cov_excl_files: ["{proj_root}/hw/top_earlgrey/ip/{dut}/dv/autogen/cov/xbar_cov_excl.el"]

  // List of test specifications.
  tests: [
    {
      name: xbar_sanity
      uvm_test_seq: xbar_sanity_vseq
    }

    {
      name: xbar_sanity_zero_delays
      uvm_test_seq: xbar_sanity_vseq
      run_opts: ["+zero_delays=1"]
    }

    {
      name: xbar_sanity_large_delays
      uvm_test_seq: xbar_sanity_vseq
      run_opts: ["+max_host_req_delay=1000",
                 "+max_host_rsp_delay=1000",
                 "+max_device_req_delay=1000",
                 "+max_device_rsp_delay=1000"]
    }

    {
      name: xbar_sanity_slow_rsp
      uvm_test_seq: xbar_sanity_vseq
      run_opts: ["+max_host_req_delay=10",
                 "+max_host_rsp_delay=1000",
                 "+max_device_req_delay=1000",
                 "+max_device_rsp_delay=10"]
    }

    {
      name: xbar_random
      uvm_test_seq: xbar_random_vseq
    }

    {
      name: xbar_random_zero_delays
      uvm_test_seq: xbar_random_vseq
      run_opts: ["+zero_delays=1"]
    }

    {
      name: xbar_random_large_delays
      uvm_test_seq: xbar_random_vseq
      run_opts: ["+max_host_req_delay=1000",
                 "+max_host_rsp_delay=1000",
                 "+max_device_req_delay=1000",
                 "+max_device_rsp_delay=1000"]
    }

    {
      name: xbar_random_slow_rsp
      uvm_test_seq: xbar_random_vseq
      run_opts: ["+max_host_req_delay=10",
                 "+max_host_rsp_delay=1000",
                 "+max_device_req_delay=1000",
                 "+max_device_rsp_delay=10"]
    }

    {
      name: xbar_access_same_device
      uvm_test_seq: xbar_access_same_device_vseq
    }

    {
      name: xbar_access_same_device_slow_rsp
      uvm_test_seq: xbar_access_same_device_vseq
      run_opts: ["+max_host_req_delay=10",
                 "+max_host_rsp_delay=1000",
                 "+max_device_req_delay=1000",
                 "+max_device_rsp_delay=10"]
    }

    {
      name: xbar_same_source
      uvm_test_seq: xbar_same_source_vseq
    }

    {
      name: xbar_error_random
      uvm_test: xbar_error_test
      uvm_test_seq: xbar_random_vseq
    }

    {
      name: xbar_unmapped_addr
      uvm_test_seq: xbar_unmapped_addr_vseq
    }

    {
      name: xbar_error_and_unmapped_addr
      uvm_test: xbar_error_test
      uvm_test_seq: xbar_unmapped_addr_vseq
    }

    {
      name: xbar_stress_all
      uvm_test_seq: xbar_stress_all_vseq
    }

    {
      name: xbar_stress_all_with_rand_reset
      uvm_test_seq: xbar_stress_all_with_rand_reset_vseq
    }

    {
      name: xbar_stress_all_with_error
      uvm_test: xbar_error_test
      uvm_test_seq: xbar_stress_all_vseq
    }

    {
      name: xbar_stress_all_with_reset_error
      uvm_test: xbar_error_test
      uvm_test_seq: xbar_stress_all_with_rand_reset_vseq
    }
  ]

  // List of regressions.
  regressions: [
    {
      name: sanity
      tests: ["xbar_sanity"]
    }
  ]
}
