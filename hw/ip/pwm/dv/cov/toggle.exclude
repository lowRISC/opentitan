// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// There is a prim_secded_inv_64_57_dec instance at pwm.u_reg.u_chk.u_chk which has a data_i port
// whose input gets extended from a smaller width (a 42 bit "cmd" object gets extended to 57 bits).
// The padding is constant: exclude bits 56:43 accordingly (with truly horrible syntax).
-ere instance_signals tb\.dut\.u_reg\.u_chk\.u_chk data_i\[5[0-6]\]
-ere instance_signals tb\.dut\.u_reg\.u_chk\.u_chk data_i\[4[3-9]\]

// The top-level tl_o port will not see toggle coverage for the d_param or d_sink fields. This
// signal comes from the register block, where it is generated by tlul_adapter_reg. That module
// wires both fields to constant zero.
-ere instance_signals tb.dut tl_o.d_param tl_o.d_sink

// Similarly, it doesn't see toggle coverage for the top bit of tl_o.d_user.rsp_intg. This is a
// hash of a 6 bit input (opcode, size and error) and poking values doesn't seem to be able to get
// the top bit to be set. The risk of tolerating the coverage hole is essentially zero: it might be
// unreachable and, if not, the signal is generated by code that is shared in many other places
// where it is properly tested.
-ere instance_signals tb.dut tl_o.d_user.rsp_intg\[6\]
