Depth,Name,Reference,Coverage_Result,Description,Metric_Type,Item,Owner,Priority,Milestone,Weight,Goal,Issue,Comment,Tag
0,hmac,,,,dut_name,,,,,,,,,
1,technical_specification,,,https://opentitan.org/book/hw/ip/hmac/index.html,section_title,,,,,,,,,
2,overview,,,,section_title,,,,,,,,,
3,comportability,req_hmac_0001,,This module conforms to the comportability doc/contributing/hw/comportability/README.md,inspection,,Martin,,,,,,,
3,features,,,,section_title,,,,,,,,,
4,mode_sha2_hmac,req_hmac_0002,,Two modes: SHA-2 | HMAC based on SHA-2,functional,rd_digest_during_hmac_en_cg,Martin,,,,,,,
4,digest_size,req_hmac_0003,,Multiple digest sizes supported (for both modes): SHA-2 256/384/512 hashing algorithm,functional,cfg_cg.digest_size,Martin,,,,,,,
4,key_length,req_hmac_0004,,Configurable key length 128/256/384/512/1024-bit secret key for HMAC mode,functional,cfg_cg.key_length,Martin,,,,,,,
4,context_switching,req_hmac_0005,,Support for context switching (via saving and restoring) across multiple message streams,functional,save_and_restore_cg,Martin,,,,,,,
4,message_fifo_size,req_hmac_0006,,32 x 32-bit message FIFO buffer,formal,TODO,Martin,,,,,,,
3,description,,,,section_title,,,,,,,,,
4,sha2_spec,req_hmac_0007,,The HMAC module is a SHA-2 hash-based (see: NIST),"testcase, testcase","hmac_test_vectors_sha, hmac_test_vectors_hmac",Martin,,,,,,Test against NIST vectors,
4,sha2_256,req_hmac_0003,,It supports SHA-2 256/384/512,functional,cfg_cg.digest_size.sha2_256,Martin,,,,,,,
4,sha2_384,req_hmac_0003,,It supports SHA-2 256/384/512,functional,cfg_cg.digest_size.sha2_384,Martin,,,,,,,
4,sha2_512,req_hmac_0003,,It supports SHA-2 256/384/512,functional,cfg_cg.digest_size.sha2_512,Martin,,,,,,,
4,key_128,req_hmac_0004,,It supports 128/256/384/512/1024-bit keys in HMAC mode,functional,cfg_cg.key_length.key_128,Martin,,,,,,,
4,key_256,req_hmac_0004,,It supports 128/256/384/512/1024-bit keys in HMAC mode,functional,cfg_cg.key_length.key_256,Martin,,,,,,,
4,key_384,req_hmac_0004,,It supports 128/256/384/512/1024-bit keys in HMAC mode,functional,cfg_cg.key_length.key_384,Martin,,,,,,,
4,key_512,req_hmac_0004,,It supports 128/256/384/512/1024-bit keys in HMAC mode,functional,cfg_cg.key_length.key_512,Martin,,,,,,,
4,key_2024,req_hmac_0004,,It supports 128/256/384/512/1024-bit keys in HMAC mode,functional,cfg_cg.key_length.key_1024,Martin,,,,,,,
4,sha2_x_keys,"req_hmac_0003, req_hmac_0004, req_hmac_0014",,Test all SHA2 with all the key length that does not exceed the block size of the configured SHA-2 digest size,functional,cfg_cg.key_length_x_digest_size,Martin,,,,,,,
4,hmac_done_irq,req_hmac_0008,,The `hmac_done` interrupt is raised to report to software that the final digest is available.,"assertion, assertion","TODO, TODO",Martin,,,,,,One assertion can be added to the RTL and another one to the SB when hmac_done read is detected,
4,sha2_only,req_hmac_0002,,"The HMAC IP can run in SHA-2 only mode, whose purpose is to check the correctness of the received message. The same digest registers above are used to hold the final hash result. SHA-2 mode does not use the given secret key. It generates the same result with the same message every time.","functional, functional","cfg_cg.hmac_dis_x_sha_en, wr_key_during_sha_only_cg",Martin,,,,,,,
4,auto_msg_length,req_hmac_0009,,The HMAC IP will calculate the length of the message received between 1 being written to CMD.hash_start and 1 being written to CMD.hash_process.,"functional, functional","msg_len_cg.msg_len_lower_cross, msg_len_cg.msg_len_upper_cross",Martin,,,,,,,
4,wipe_internal_variables,req_hmac_000A,,"Is able to wipe internal variables such as the secret key, intermediate hash results, digest and the internal message scheduling array.",formal,TODO,Martin,,,,,,,
4,wipe_secret,req_hmac_000A,,The software can wipe the secret key by writing a 32-bit random value into WIPE_SECRET register. The internal variables and secret key will be reset to the written value.,"testcase, assertion","hmac_wipe_secret, wipe_secret_a",Martin,,,,,,,
4,wipe_sha2_384_512_modes,req_hmac_000B,,"For SHA-2 384/512 modes that operate on 64-bit words, the 32-bit random value is replicated and concatenated to create the 64-bit value.","testcase, assertion","hmac_wipe_secret, wipe_secret_64bits_a",Martin,,,,,,,
1,theory_of_operation,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html,section_title,,,,,,,,,
2,block_diagram,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#block-diagram,section_title,,,,,,,,,
3,sha2_hash_engine,imp_hmac_0001,,The SHA-2 hash engine is a SHA-2 engine primitive instantiated with the multi-mode feature enabled,formal,TODO,Martin,,,,,,Check the parameter value,
3,sha2_core_fifo_size,imp_hmac_0002,,SHA-2 block contains two time a 8x64-bit size FIFOs (one for the hash and one for the digest),formal,TODO,Martin,,,,,,Check that the 2 FIFOs exist and are the right size,
3,sha2_msg_scheduling_fifo,imp_hmac_0003,,The message scheduling FIFO is not software accessible but is fed from the 32x32b message FIFO seen in the HMAC block diagram via the HMAC core.,formal,TODO,Martin,,,,,,Check that the FIFO exists and is the right size,
3,sha2_msg_padding,req_hmac_000C,,The message words are padded with the message length appended to fit either the 512-bit or 1024-bit block size (depending on the configured digest size),functional,msg_len_cg.msg_len_lower_cp,Martin,,,,,,,
3,blk_512_rounds,req_hmac_000D,,"With the 512-bit block (for SHA-2 256), the compression function runs 64 rounds to calculate the block hash, which is stored in the hash registers above.",functional,cfg_cg.digest_size.sha2_256,Martin,,,,,,Covered by the C model as the returned digest is matching,
3,blk_512_digest,req_hmac_000D,,"After 64 rounds are completed, the SHA-2 256 updates the digest registers with the addition of the hash result and the previous digest registers.",functional,cfg_cg.digest_size.sha2_256,Martin,,,,,,Covered by the C model as the returned digest is matching,
3,blk_1024_rounds,req_hmac_000E,,"With the 1024-bit block (for SHA-2 384/512), the compression function runs 80 rounds instead.","functional, functional","cfg_cg.digest_size.sha2_384, cfg_cg.digest_size.sha2_512",Martin,,,,,,Covered by the C model as the returned digest is matching,
3,blk_1024_digest,req_hmac_000E,,SHA-2 384 is a truncated version of SHA-2 512 where the last 128 bits of the final digest output are truncated to reduce the digest size to 384 bits.,functional,cfg_cg.digest_size.sha2_384,Martin,,,,,,Covered by the C model as the returned digest is matching,
2,design_details,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#design-details,section_title,,,,,,,,,
3,sha2_message_feed_and_pad,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#sha-2-message-feed-and-pad,section_title,,,,,,,,,
4,wr_msg_fifo,imp_hmac_0004,,Any write access to the memory-mapped window MSG_FIFO updates the message FIFO.,formal,TODO,Martin,,,,,,,
4,fifo_full_back_pressure,req_hmac_0018,,"If the FIFO is full, the HMAC block will block any writes leading to back-pressure on the interconnect",functional,TODO,Martin,,,,,,Do writes while the FIFO is full,
4,fifo_full_status,imp_hmac_0006,,The FIFO full is available in STATUS register,formal,TODO,Martin,,,,,,,
4,endian_swap,req_hmac_002D,,"When CFG.endian_swap=1, input message is converted from little-endian to big-endian before feeding it to the SHA-2",functional,cfg_cg.endian_swap,Martin,,,,,,,
4,digest_swap,req_hmac_002C,,"When CFG.digest_swap=1, each digest output register is converted to big-endian byte order",functional,cfg_cg.digest_swap,Martin,,,,,,,
4,32bits_words,imp_hmac_0009,,Small writes to MSG_FIFO are coalesced into 32-bit words by the packer logic,functional,TODO,Martin,,,,,,Be sure that small writes have been exercised by adding a fcov,
4,msg_length,req_hmac_0009,,The block also counts the number of bytes that are being passed. This computes the received message length.,"functional, functional","msg_len_cg.msg_len_lower_cp,
msg_len_cg.msg_len_upper_cp",Martin,,,,,,,
4,msg_structure,req_hmac_000C,,"The message must be padded to fill the 512/1024-bit blocks. This is done with an initial **1** bit after the actual message bits, followed by enough **0** padding bits, and then the 64/128-bit message length at the end of the block. The number of **0** padding bits should be enough such that the full block size (512 or 1024 bits) is achieved.",functional,msg_len_cg.msg_len_lower_cp,Martin,,,,,,Covered by the C model,
3,sha2_computation,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#sha-2-computation,section_title,,,,,,,,,
4,blk_512_word_pad,req_hmac_000D,,"For SHA-2 256, the SHA-2 engine receives 16x32-bit words from the message FIFO or the HMAC core, which get padded into 16x64-bit words for the SHA-2 engine (upper 32 bits of each data word are all-zero padded)",functional,cfg_cg.digest_size.sha2_256,Martin,,,,,,Covered by the C model,
4,blk_512_rounds,req_hmac_000D,,And then begin 64 rounds of the hash computation.,functional,TODO,Martin,,,,,,Add a check in the SB where this param is used HMAC_MSG_PROCESS_CYCLES_256,
4,blk_1024_word_pack,req_hmac_000E,,"Alternatively for SHA-2 384/512, the SHA-2 engine receives 32x32-bit words from message FIFO, which get packed into 16x64-bit words for the SHA-2 engine","functional, functional","cfg_cg.digest_size.sha2_384, cfg_cg.digest_size.sha2_512",Martin,,,,,,Covered by the C model,
4,blk_1024_rounds,req_hmac_000E,,And then begin the 80 compression rounds.,functional,TODO,Martin,,,,,,Add a check in the SB where this param is used HMAC_MSG_PROCESS_CYCLES_512,
4,sw_access_msg_fifo,req_hmac_000F,,"During the compression rounds, it doesn't fetch data from the message FIFO. The software can push up to 16 (or 32 for SHA-2 384/512) entries to the FIFO for the next hash computation.",functional,wr_msg_during_hash_cg,Martin,,,,,,,
3,hmac_computation,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#hmac-computation,section_title,,,,,,,,,
4,hmac_first_round,req_hmac_0010,,The first phase of HMAC calculates the SHA-2 hash of the inner secret key concatenated with the actual message to be authenticated.,functional,cfg_cg.hmac_en.enabled,Martin,,,,,,Covered by the C model,
4,inner_secret_key,req_hmac_0011,,This inner secret key is created with the 128/256/384/512/1024-bit (hashed) secret key (depending on the configured key length) and `0x00` padding to complete the corresponding block size of the configured digest size. This is XORed with 64 bits 0x36 value.,functional,cfg_cg.hmac_en_x_key_length,Martin,,,,,,Covered by the C model,
4,hmac_second_round,req_hmac_0012,,The first round digest is fed into the second round in HMAC. The second round computes the hash of the outer secret key concatenated with the first round digest.,functional,cfg_cg.hmac_en.enabled,Martin,,,,,,Covered by the C model,
4,outer_secret_key,req_hmac_0013,,This outer secret key is created with the 128/256/384/512/1024-bit (hashed) secret key (depending on the configured key length) and `0x00` padding to complete the corresponding block size of the configured digest size. This is XORed with 64 bits 0x5c value.,functional,cfg_cg.hmac_en_x_key_length,Martin,,,,,,Covered by the C model,
4,max_key_length,req_hmac_0014,,"HMAC supports a secret key of length 128/256/384/512/1024-bit, so long as the key length does not exceed the block size of the configured digest.",functional,err_code_cg.key_length_higher_blk_size,Martin,,,,,,,
4,key_endianness,req_hmac_002D,,"The byte order of the key registers is big-endian by default, can be swapped to little endian by setting [`CFG.key_swap`](registers.md#cfg--key_swap) to 1.",functional,cfg_cg.endian_swap,Martin,,,,,,,
4,arbitrary_key_length,req_hmac_0016,,"To support any arbitrary key length, the software should configure the HMAC to the next largest supported key length",functional,TODO,Martin,,,,,,MVy: it hasn't been verified yet ! (13.11.2024),
3,perf_sha2_hmac_modes,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#performance-in-sha-2-mode-and-hmac-mode,section_title,,,,,,,,,
4,wr_msg_fifo_during_hash,req_hmac_0017,,The software can feed the next 16 x 32-bit message block during the 48 rounds required by the SHA block to compute the HASH of current message block.,functional,wr_msg_during_hash_cg,Martin,,,,,,,
4,fifo_full_access_blocked,req_hmac_0018,,"Once the FIFO gets full, the software cannot push more data until the current block is processed.",functional,TODO,Martin,,,,,,Do writes while the FIFO is full,
4,sha2_256_performance,imp_hmac_000B,,"This version of the IP fetches the next 16 x 32-bit message into the internal message scheduling array only after completing the current block.
As such, it takes 80 cycles to complete a block.",formal,TODO,Martin,,,,,,,
4,sha2_384_512_performance,imp_hmac_000C,,"For SHA-2 384/512, the algorithm computes 1024 bits of data a time and runs for 80 rounds where the first 16 rounds consume the actual 16 x 64-bit message.
It takes 96 cycles to complete a 1024-bit block.",formal,TODO,Martin,,,,,,,
4,hmac_overhead_performance,imp_hmac_000D,,"If HMAC mode is turned on, it introduces extra latency due to the second round of computing the final hash of the outer key and the result of the first round using the inner key.
This adds an extra 240 cycles (80 for the inner key, 80 for the outer key, and 80 for the result of the first round) to complete a HMAC SHA-2 256 digest of a message.
",formal,TODO,Martin,,,,,,,
3,msg_fifo,,,https://opentitan.org/book/hw/ip/hmac/doc/theory_of_operation.html#msg_fifo,section_title,,,,,,,,,
4,msg_fifo_wr,imp_hmac_000E,,"Any writes to the address range go into the single entry point of the `prim_packer`.
Then `prim_packer` compacts the data into the word-size if not a word-write then writes to the MSG_FIFO.",functional,TODO,Martin,,,,,,Be sure that writting anywhere in the address range has the same impact and for any word size,
1,interfaces,,,https://opentitan.org/book/hw/ip/hmac/doc/interfaces.html,section_title,,,,,,,,,
2,clock_in,req_hmac_0025,,"TODO: do we have a clock spec somewhere? We should use a clock agent which is able to emulate the defects that a ""real world"" clock may have.",functional,TODO,Martin,,,,,,Get cov from the agent,
2,reset,,,,section_title,,,,,,,,,
3,reset_in,req_hmac_0026,,TODO: test random resets via an agent,functional,TODO,Martin,,,,,,Get cov from the agent,
3,reset_during_hash,,,,functional,trig_rst_during_hash_cg,Martin,,,,,,,
2,tile_link,,,,functional,TODO,Martin,,,,,,Get cov from the agent,
2,inter_module_signals,,,,section_title,,,,,,,,,
3,idle,req_hmac_0022,,Idle should be high when TODO see https://github.com/lowRISC/opentitan/blob/4ec9f5238bf0f21a03164819d8c637a19e30d759/hw/ip/hmac/rtl/hmac.sv#L867,"formal, functional","TODO, TODO",Martin,,,,,,,
3,tl_rsp,,,TODO: how and what should be checked ?,functional,TODO,Martin,,,,,,,
2,interrupts,,,https://opentitan.org/book/hw/ip/hmac/doc/interfaces.html#interrupts,section_title,,,,,,,,,
3,hmac_done,req_hmac_0008,,An event should be raised when HMAC/SHA-2 has completed.,"assertion, assertion","TODO, TODO",Martin,,,,,,One assertion can be added to the RTL and another one to the SB when hmac_done read is detected,
3,fifo_empty,req_hmac_001A,,The HW should indicate the message FIFO empty status on this interrupt line (see corresponding register for details).,"functional, functional","cip_base_pkg::intr_cg.cp_intr, TODO",Martin,,,,,,Implement a cov to be triggered from the SB when these conditions have been detected,
3,hmac_err,req_hmac_0019,,An event should be raised when an HMAC error has occured.,functional,TODO,Martin,,,,,,Not sure it is modelled correctly and add a cov,
2,security_alerts,,,https://opentitan.org/book/hw/ip/hmac/doc/interfaces.html#security-alerts,section_title,,,,,,,,,
3,fatal_fault,req_hmac_0023,,This fatal alert should be triggered when a fatal TL-UL bus integrity fault is detected.,functional,TODO,Martin,,,,,,,
2,security_countermeasures,,,https://opentitan.org/book/hw/ip/hmac/doc/interfaces.html#security-countermeasures,section_title,,,,,,,,https://opentitan.org/book/doc/contributing/hw/comportability/index.html#security-countermeasures,
3,bus_integrity,req_hmac_0024,,End-to-end bus integrity scheme.,functional,TODO,Martin,,,,,,,
1,registers,,,https://opentitan.org/book/hw/ip/hmac/doc/registers.html,section_title,,,,,,,,,
2,general_csr_tests,,,,section_title,,,,,,,,,
3,csr_hw_reset,,,CSRs should be compliant with the reset value provided in the RAL specification.,testcase,csr_hw_reset,Martin,,,,,,,
3,csr_read_write,,,CSRs should be R/W accessible according to their specified access policies.,testcase,csr_rw,Martin,,,,,,,
3,csr_bit_bash,,,There should be no aliasing within the fields / bits of a CSR.,testcase,csr_bit_bash,Martin,,,,,,,
3,csr_aliasing,,,There should be no aliasing across the address bits within the valid CSR space.,testcase,csr_aliasing,Martin,,,,,,,
2,intr_state,,,,section_title,,,,,,,,,
3,hmac_err,req_hmac_0019,,When an error occured on the HMAC hmac_err bit should be raised.,functional,TODO,Martin,,,,,,Not sure it is modelled correctly and add a cov,
3,fifo_empty,req_hmac_001A,,"This interrupt is raised only if the message FIFO is actually writable by software, i.e., if all of the following conditions are met:
i) The HMAC block is not running in HMAC mode and performing the second round of computing the final hash of the outer key as well as the result of the first round using the inner key.
ii) Software has not yet written the Process or Stop command to finish the hashing operation.
For the interrupt to be raised, the message FIFO must also have been full previously.","functional, functional","cip_base_pkg::intr_cg.cp_intr, TODO",Martin,,,,,,Implement a cov to be triggered from the SB when these conditions have been detected,
3,hmac_done,req_hmac_0008,,The hmac_done bit is raised when HMAC/SHA-2 has completed.,"assertion, assertion","TODO, TODO",Martin,,,,,,One assertion can be added to the RTL and another one to the SB when hmac_done read is detected,
2,intr_enable,,,,section_title,,,,,,,,,
3,intr_enable,req_hmac_001C,,Physical output interrupts should follow the intr_state register when the corresponding bits are enabled in intr_enable register.,functional,TODO,Martin,,,,,,,
2,intr_test,,,,section_title,,,,,,,,,
3,intr_test,req_hmac_001D,,"In order to test interrupts at physical output level and at register level, a register should be provided to force each field individually.","functional, functional","TODO, cip_base_pkg::intr_test_cg",Martin,,,,,,,
2,alert_test,,,,section_title,,,,,,,,,
3,alert_test,req_hmac_001E,,"In order to test alerts, a register should be provided to force each field individually.",functional,TODO,Martin,,,,,,,
2,cfg,,,https://opentitan.org/book/hw/ip/hmac/doc/registers.html#cfg,section_title,,,,,,,,,
3,cfg_update,req_hmac_0038,,"The register is updated when the engine is in Idle. If the software updates the register while the engine computes the hash, the updated value is discarded.",functional,wr_config_during_hash_cg,Martin,,,,,,,
3,cfg_cross,,,All the configuration combinations should be supported,functional,cfg_cg.cfg_cross,,,,,,,,
3,key_length,,,,section_title,,,,,,,,,
4,one_hot,req_hmac_0027,,One-hot encoded field.,functional,cfg_cg.key_length.key_invalid,Martin,,,,,,"Means that non one-hot values should also be tested to be sure it doesn't break anything, in that case in should fall in key_none.",
4,arbitrary_key_length,req_hmac_0016,,"The HMAC can be programmed with the following key lengths: 128-bit, 256-bit, 384-bit, 512-bit and 1024-bit. But the HMAC supports any arbitrary key length: the software should configure the HMAC with the next largest supported key length and concatenate zeros to reach the programmed key length.",functional,TODO,Martin,,,,,,,
4,key_length_x_hmac_en,imp_hmac_0008,,The value of this register is irrelevant when only SHA-2 (not keyed HMAC) is configured.,functional,wr_key_during_sha_only_cg,Martin,,,,,,,
4,invalid_cfg,req_hmac_0020,,"However, for HMAC mode (`hmac_en == 1`), when HMAC is triggered to start while KEY_LENGTH holds `Key_None` or KEY_LENGTH holds `Key_1024` for DIGEST_SIZE = `SHA2_256`, starting is blocked and an error is signalled to SW.","functional, functional, functional","cfg_cg.hmac_en_x_key_none, cfg_cg.key_x_digest_mismatch, err_code_cg.hmac_errors.invalid_config",Martin,,,,,,,
4,key_none,req_hmac_0021,,Unsupported/invalid values and all-zero values are mapped to Key_None.,"functional, functional","cfg_cg.key_length.key_none, cfg_cg.key_length.key_invalid",Martin,,,,,,,
3,digest_size,,,,section_title,,,,,,,,,
4,one_hot,req_hmac_0028,,One-hot encoded field.,functional,cfg_cg.digest_size.sha2_invalid,Martin,,,,,,"Means that non one-hot values should also be tested to be sure it doesn't break anything, in that case in should fall in sha2_none.",
4,digest_size_x_hmac_en,imp_hmac_0007,,Select digest size for either HMAC or SHA-2.,functional,cfg_cg.hmac_en_x_digest_size,Martin,,,,,,,
4,invalid_cfg,req_hmac_002A,,Unsupported/invalid values and all-zero values are mapped to SHA2_None.,"functional, functional","cfg_cg.digest_size.sha2_none, cfg_cg.digest_size.sha2_invalid",Martin,,,,,,,
3,key_swap,,,,section_title,,,,,,,,,
4,key_swap,req_hmac_002B,,If 1 the endianness of each KEY_* register is swapped. Default value (value 0) is big endian representation of the KEY_* CSRs.,functional,cfg_cg.key_swap,Martin,,,,,,,
3,digest_swap,,,,section_title,,,,,,,,,
4,digest_swap,req_hmac_002C,,If 1 the value in each digest output register is converted to big-endian byte order.,functional,cfg_cg.digest_swap,Martin,,,,,,,
3,endian_swap,,,,section_title,,,,,,,,,
4,endian_swap,req_hmac_002D,,"If 0, each value will be added to the message in little-endian byte order. The value is written to MSG_FIFO same to the SW writes. If 1, then each individual multi-byte value, regardless of its alignment, written to MSG_FIFO will be added to the message in big-endian byte order.",formal,TODO,Martin,,,,,,,
4,endian_swap_no_impact,req_hmac_002F,,A message written to MSG_FIFO one byte at a time will not be affected by this setting.,functional,TODO,,,,,,,,
3,sha_en,,,,section_title,,,,,,,,,
4,sha_en,,,SHA core could be disabled.,functional,cfg_cg.sha_en,Martin,,,,,,,
4,sha_disabled_allows_config,req_hmac_0030,,"SHA engine will not initiate compression, this is used to stop operation of the SHA-2 engine until configuration has been done.",functional,TODO,Martin,,,,,,Check regsiters which are supposed to be write protected when sha_en=0,
4,sha_disabled_digest,req_hmac_0031,,When the SHA-2 engine is disabled the digest is cleared.,assertion,TODO,Martin,,,,,,Check that digest is cleared when SHA is disabled,
4,hmac_en,req_hmac_0002,,HMAC datapath enable.,functional,cfg_cg.hmac_en,Martin,,,,,,,
4,hmac_hash_start,imp_hmac_000F,,"If this bit is 1, HMAC operates when `hash_start` toggles.",assertion,TODO,Martin,,,,,,Check that FSM is moving to a certain state only once this signal has been triggered,
2,cmd,,,https://opentitan.org/book/hw/ip/hmac/doc/registers.html#cmd,section_title,,,,,,,,,
3,hash_continue,imp_hmac_0010,,"When 1 is written to this field, SHA-2 or HMAC will continue hashing based on the current hash in the digest registers and the message length",functional,save_and_restore_cg,Martin,,,,,,,
3,hash_stop,,,,section_title,,,,,,,,,
4,hmac_done_irq,req_hmac_0008,,"When 1 is written to this field, SHA-2 or HMAC will afterwards set the hmac_done interrupt as soon as the current block has been hashed.","assertion, assertion","TODO, TODO",Martin,,,,,,One assertion can be added to the RTL and another one to the SB when hmac_done read is detected,
4,digest_avail,imp_hmac_0011,,The hash can then be read from the registers DIGEST_0 to DIGEST_15.,functional,TODO,Martin,,,,,,Add something to be sure that all the digest registers are accessed while checking against the expected,
3,hash_process,imp_hmac_0012,,"If 1 is written to this field, SHA-2 or HMAC calculates the digest or signing based on currently received message.",functional,TODO,Martin,,,,,,,
2,status,,,,section_title,,,,,,,,,
3,hmac_idle,req_hmac_0033,,HMAC idle status.,functional,status_cg.TODO,Martin,,,,,,TODO: all of these means that it has been detected from the DUT register but not actually verified ! -> status_cg.sta_hmac_idle,
3,fifo_empty,req_hmac_0034,,FIFO empty.,functional,status_cg.TODO,Martin,,,,,,TODO: all of these means that it has been detected from the DUT register but not actually verified ! -> status_cg.fifo_empty_cross,
3,fifo_full,req_hmac_0035,,FIFO full.,functional,status_cg.TODO,Martin,,,,,,TODO: all of these means that it has been detected from the DUT register but not actually verified ! -> status_cg.fifo_full_cross,
3,fifo_depth,req_hmac_0036,,FIFO entry count.,functional,status_cg.TODO,Martin,,,,,,TODO: all of these means that it has been detected from the DUT register but not actually verified ! -> status_cg.fifo_depth_cross,
3,fifo_depth_size,req_hmac_0006,,FIFO depth register field should be 6 bits width as the message FIFO has a depth of 32.,formal,TODO,Martin,,,,,,,
2,err_code,,,,section_title,,,,,,,,,
3,err_code,req_hmac_0037,,"If an error interrupt occurs, this register has information of error cause. ",functional,err_code_cg,Martin,,,,,,,
2,wipe_secret,,,,section_title,,,,,,,,,
3,wipe_internal_variables,req_hmac_000A,,"If CPU writes a value into the register, the value is used to clear the internal variables such as the secret key, internal state machine, or hash value. The clear secret operation overwrites the internal variables with the provided 32-bit value. For SHA-2 384/512 that work with 64-bit words, the 32-bit value is duplicated and concatenated to generate the 64-bit value.","testcase, formal","wipe_secret, TODO",Martin,,,,,,,
2,key,,,,section_title,,,,,,,,,
3,key_order,imp_hmac_0013,,"Order of the secret key is: key[1023:0] = {KEY0, KEY1, KEY2, ... , KEY31};",functional,cfg_cg.hmac_swap_x_key_length,Martin,,,,,,Covered by the C model as the returned digest is matching,
3,key_update,req_hmac_0039,,"The registers are allowed to be updated only when the engine is in Idle state. If the engine computes the hash, it discards any attempts to update the secret keys and report an error.","functional, functional","wr_key_during_hash_cg, err_code_cg.hmac_errors.update_secret_key_in_process",Martin,,,,,,,
2,digest,,,,section_title,,,,,,,,,
3,key_write_only,req_hmac_003A,,The key register should be only write accessible.,formal,TODO,Martin,,,,,,,
3,digest_order,imp_hmac_000A,,"Order of the 512-bit digest[511:0] = {DIGEST0, DIGEST1, DIGEST2, … , DIGEST15}. For SHA-2 256 order of the 256-bit digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, DIGEST3, DIGEST4, DIGEST5, DIGEST6, DIGEST7} and {DIGEST8 - DIGEST15} are irrelevant and should not be read out. For SHA-2 384, {DIGEST12-DIGEST15} are truncated; they are irrelevant and should not be read out.",functional,cfg_cg.digest_size,Martin,,,,,,,
3,digest_clear,req_hmac_0031,,The digest should be cleared when CFG.sha_en transitions from 1 to 0.,assertion,TODO,Martin,,,,,,Add an assertion to be sure that the digest is cleared in that case,
3,digest_access,req_hmac_003b,,"When `STATUS.hmac_idle` is 1, these registers can be written to by software.",functional,wr_digest_during_not_idle_cg,Martin,,,,,,,
2,msg_length,,,,section_title,,,,,,,,,
3,msg_length_split,imp_hmac_0014,,"For SHA-2 256 computations, message length is 64-bit {MSG_LENGTH_UPPER, MSG_LENGTH_LOWER}. For SHA-2 384/512 message length is extended to 128-bit in line with [nist-fips-180-4] where the upper 64 bits get zero-padded: {32’b0, 32’b0, MSG_LENGTH_UPPER, MSG_LENGTH_LOWER}.",formal,TODO,Martin,,,,,,,
3,msg_length_access,req_hmac_003c,,"When `STATUS.hmac_idle` is 1, this register can be written by software.",functional,wr_msg_len_during_not_idle_cg,Martin,,,,,,,
2,msg_fifo,,,,section_title,,,,,,,,,
3,msg_fifo,imp_hmac_0015,,Message FIFO. Any write to this window will be appended to the FIFO. Only the lower [1:0] bits of the address matter to writes within the window (for correctly dealing with non 32-bit writes).,functional,TODO,Martin,,,,,,Weird write accesses should be tested to be sure that we are able to correctly deal with non 32-bit writes and also to be sure that only the lower 2 bits are used within this range.,
1,programmers_guide,,,https://opentitan.org/book/hw/ip/hmac/doc/programmers_guide.html,section_title,,,,,,,,,
2,sar_registers,req_hmac_0005,,"The context that needs to be saved and restored is in the following registers: CFG, DIGEST_*, and MSG_LENGTH_*.",functional,save_and_restore_cg,Martin,,,,,,,
2,error_codes,imp_hmac_0016,,"When HMAC errors are triggered, the IP reports the error via INTR_STATE.hmac_err. The details of the error type is stored in ERR_CODE.",functional,err_code_cg,Martin,,,,,,,
