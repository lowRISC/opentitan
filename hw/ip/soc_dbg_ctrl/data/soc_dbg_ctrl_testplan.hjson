// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  name: "soc_dbg_ctrl"
  import_testplans: ["hw/dv/tools/dvsim/testplans/csr_testplan.hjson",
                     "hw/dv/tools/dvsim/testplans/intr_test_testplan.hjson",
                     "hw/dv/tools/dvsim/testplans/tl_device_access_types_testplan.hjson"]
  testpoints: [
    {
      name: smoke
      desc: '''
            Verify the soc_dbg_ctrl policy bus and decoding logic.

            Stimulus:
              - Let the soc_dbg_state_i be in SocDbgStProd
              - Write a random valid debug category to DEBUG_POLICY_CATEGORY_SHADOWED
              - Randomize DEBUG_POLICY_RELOCKED between Mubi4::True and Mubi4::False
              - Write DEBUG_POLICY_VALID_SHADOWED to Mubi4::True

            Checking:
              - The attacked soc_dbg_ctrl_decode module decodes must decode the debug policy bus
                correctly, i.e., the signals relocked_o, cat2_dbg_o, cat3_dbg_o, cat4_dbg_o reflect
                the written configuration.
            '''
      stage: V1
      tests: ["soc_dbg_ctrl_smoke"]
    }
  ]

  covergroups: [
  ]
}
