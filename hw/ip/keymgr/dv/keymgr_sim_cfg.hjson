// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  // Name of the sim cfg - typically same as the name of the DUT.
  name: keymgr

  // Top level dut name (sv module).
  dut: keymgr

  // Top level testbench name (sv module).
  tb: tb

  // Simulator used to sign off this block
  tool: vcs

  // Fusesoc core file used for building the file list.
  fusesoc_core: lowrisc:dv:keymgr_sim:0.1

  // Testplan hjson file.
  testplan: "{proj_root}/hw/ip/keymgr/data/keymgr_testplan.hjson"

  // RAL spec - used to generate the RAL model.
  ral_spec: "{proj_root}/hw/ip/keymgr/data/keymgr.hjson"

  // Import additional common sim cfg files.
  // TODO: remove imported cfgs that do not apply.
  import_cfgs: [// Project wide common sim cfg file
                "{proj_root}/hw/dv/tools/dvsim/common_sim_cfg.hjson",
                // Common CIP test lists
                "{proj_root}/hw/dv/tools/dvsim/tests/csr_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/mem_tests.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/intr_test.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/alert_test.hjson",
                "{proj_root}/hw/dv/tools/dvsim/tests/tl_access_tests.hjson",
                // TODO, enable it later
                // "{proj_root}/hw/dv/tools/dvsim/tests/stress_tests.hjson"
                ]

  // Add additional tops for simulation.
  sim_tops: ["keymgr_bind"]

  // Default iterations for all tests - each test entry can override this.
  reseed: 50

  // Default UVM test and seq class name.
  uvm_test: keymgr_base_test
  uvm_test_seq: keymgr_base_vseq

  // List of test specifications.
  tests: [
    {
      name: keymgr_smoke
      uvm_test_seq: keymgr_smoke_vseq
    }

    {
      name: keymgr_sideload
      uvm_test_seq: keymgr_sideload_vseq
    }

    {
      name: keymgr_random
      uvm_test_seq: keymgr_random_vseq
    }

    {
      name: keymgr_cfgen
      uvm_test_seq: keymgr_cfgen_vseq
      // This test is to check reg programming is gated when cfgen=0, it's timing sensitive
      run_opts: ["+zero_delays=1"]
    }

    {
      name: keymgr_direct_to_disabled
      uvm_test_seq: keymgr_direct_to_disabled_vseq
    }

    {
      name: keymgr_lc_disable
      uvm_test_seq: keymgr_lc_disable_vseq
    }

    {
      name: keymgr_invalid_kmac_input
      uvm_test_seq: keymgr_invalid_kmac_input_vseq
    }
  ]

  // List of regressions.
  regressions: [
    {
      name: smoke
      tests: ["keymgr_smoke"]
    }
  ]
}
