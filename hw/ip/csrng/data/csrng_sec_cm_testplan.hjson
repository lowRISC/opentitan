// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Security countermeasures testplan extracted from the IP Hjson using reggen.
//
// This testplan is auto-generated only the first time it is created. This is
// because this testplan needs to be hand-editable. It is possible that these
// testpoints can go out of date if the spec is updated with new
// countermeasures. When `reggen` is invoked when this testplan already exists,
// It checks if the list of testpoints is up-to-date and enforces the user to
// make further manual updates.
//
// These countermeasures and their descriptions can be found here:
// .../csrng/data/csrng.hjson
//
// It is possible that the testing of some of these countermeasures may already
// be covered as a testpoint in a different testplan. This duplication is ok -
// the test would have likely already been developed. We simply map those tests
// to the testpoints below using the `tests` key.
//
// Please ensure that this testplan is imported in:
// .../csrng/data/csrng_testplan.hjson
{
  testpoints: [
    {
      name: sec_cm_config_regwen
      desc: "Verify the countermeasure(s) CONFIG.REGWEN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_config_mubi
      desc: "Verify the countermeasure(s) CONFIG.MUBI."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_intersig_mubi
      desc: "Verify the countermeasure(s) INTERSIG.MUBI."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_main_sm_fsm_sparse
      desc: "Verify the countermeasure(s) MAIN_SM.FSM.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_update_fsm_sparse
      desc: "Verify the countermeasure(s) UPDATE.FSM.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_blk_enc_fsm_sparse
      desc: "Verify the countermeasure(s) BLK_ENC.FSM.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_outblk_fsm_sparse
      desc: "Verify the countermeasure(s) OUTBLK.FSM.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_gen_cmd_ctr_redun
      desc: "Verify the countermeasure(s) GEN_CMD.CTR.REDUN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_drbg_upd_ctr_redun
      desc: "Verify the countermeasure(s) DRBG_UPD.CTR.REDUN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_drbg_gen_ctr_redun
      desc: "Verify the countermeasure(s) DRBG_GEN.CTR.REDUN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_ctrl_mubi
      desc: "Verify the countermeasure(s) CTRL.MUBI."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_main_sm_ctr_local_esc
      desc: "Verify the countermeasure(s) MAIN_SM.CTR.LOCAL_ESC."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_constants_lc_gated
      desc: "Verify the countermeasure(s) CONSTANTS.LC_GATED."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_sw_genbits_bus_consistency
      desc: "Verify the countermeasure(s) SW_GENBITS.BUS.CONSISTENCY."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_tile_link_bus_integrity
      desc: "Verify the countermeasure(s) TILE_LINK.BUS.INTEGRITY."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_fsm_sparse
      desc: "Verify the countermeasure(s) AES_CIPHER.FSM.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_fsm_redun
      desc: "Verify the countermeasure(s) AES_CIPHER.FSM.REDUN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_ctrl_sparse
      desc: "Verify the countermeasure(s) AES_CIPHER.CTRL.SPARSE."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_fsm_local_esc
      desc: "Verify the countermeasure(s) AES_CIPHER.FSM.LOCAL_ESC."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_ctr_redun
      desc: "Verify the countermeasure(s) AES_CIPHER.CTR.REDUN."
      stage: V2S
      tests: []
    }
    {
      name: sec_cm_aes_cipher_data_reg_local_esc
      desc: "Verify the countermeasure(s) AES_CIPHER.DATA_REG.LOCAL_ESC."
      stage: V2S
      tests: []
    }
  ]
}
