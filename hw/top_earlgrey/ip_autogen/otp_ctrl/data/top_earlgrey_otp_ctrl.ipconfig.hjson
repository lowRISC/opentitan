// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  instance_name: top_earlgrey_otp_ctrl
  param_values:
  {
    otp_mmap:
    {
      seed: 36021179872380457113239299468132194022238108125576166239904535336103582949069
      otp:
      {
        width: 2
        depth: 1024
        size: 2048
        addr_width: 10
        byte_addr_width: 11
      }
      scrambling:
      {
        key_size: 16
        iv_size: 8
        cnst_size: 16
        keys:
        [
          {
            name: Secret0Key
            value: 79261096542507317550041524418378318810
          }
          {
            name: Secret1Key
            value: 318985785134653313354004803705056942690
          }
          {
            name: Secret2Key
            value: 177669530988656006400383198120896388291
          }
        ]
        digests:
        [
          {
            name: CnstyDigest
            iv_value: 13739798386390731029
            cnst_value: 19387815248521063059786024249941633354
          }
          {
            name: FlashDataKey
            iv_value: 16161367748560767875
            cnst_value: 52429663447164110622287741421444995907
          }
          {
            name: FlashAddrKey
            iv_value: 825413095277504501
            cnst_value: 284497036978760360808556468979666055207
          }
          {
            name: SramDataKey
            iv_value: 17981827341411119748
            cnst_value: 98543724195391010298071380840458392475
          }
        ]
      }
      partitions:
      [
        {
          name: VENDOR_TEST
          variant: Unbuffered
          size: 64
          secret: false
          sw_digest: true
          hw_digest: false
          write_lock: Digest
          read_lock: CSR
          key_sel: NoKey
          integrity: false
          bkout_type: false
          items:
          [
            {
              name: SCRATCH
              size: 56
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 0
            }
            {
              name: VENDOR_TEST_DIGEST
              size: 8
              offset: 56
              ismubi: false
              isdigest: true
              inv_default: 5280432312436422266
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Vendor test partition.
            This is reserved for manufacturing smoke checks. The OTP wrapper
            control logic inside otp_macro is allowed to read/write to this
            region. ECC uncorrectable errors seen on the functional otp_macro
            interface will not lead to an alert for this partition.
            Instead, such errors will be reported as correctable ECC errors.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          offset: 0
        }
        {
          name: CREATOR_SW_CFG
          variant: Unbuffered
          absorb: true
          secret: false
          sw_digest: true
          hw_digest: false
          write_lock: Digest
          read_lock: CSR
          key_sel: NoKey
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: CREATOR_SW_CFG_AST_CFG
              size: 156
              desc:
                '''
                AST configuration data. These values get blindly copied to
                the AST CSRs during ROM execution.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 64
            }
            {
              name: CREATOR_SW_CFG_AST_INIT_EN
              size: 4
              desc:
                '''
                Controls whether or not the CREATOR_SW_CFG_AST_CFG values
                get copied to the AST CSRs during ROM execution.
                A value of kMultiBitBool4True enables copying; all other
                values disable.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 220
            }
            {
              name: CREATOR_SW_CFG_ROM_EXT_SKU
              size: 4
              desc: SKU identifier metadata. Unused by SiliconCreator software.
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 224
            }
            {
              name: CREATOR_SW_CFG_SIGVERIFY_SPX_EN
              size: 4
              desc:
                '''
                Controls whether or not SPHINCS+ signature verification will
                be executed when the ROM attempts to boot the ROM_EXT.
                A value of kSigverifySpxDisabledOtp disables SPHINCS+
                signature verification, while all other values enable it.
                Note, SPHINCS+ signature verification is always disabled in
                TEST_UNLOCKED* LC states.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 228
            }
            {
              name: CREATOR_SW_CFG_FLASH_DATA_DEFAULT_CFG
              size: 4
              desc:
                '''
                The default scrambling, ECC, and high endurance
                configuration settings for flash data pages set during ROM
                execution.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 232
            }
            {
              name: CREATOR_SW_CFG_FLASH_INFO_BOOT_DATA_CFG
              size: 4
              desc:
                '''
                The scrambling, ECC, and high endurance configuration
                settings for the boot data flash info pages set during ROM
                execution.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 236
            }
            {
              name: CREATOR_SW_CFG_FLASH_HW_INFO_CFG_OVERRIDE
              size: 4
              desc:
                '''
                Scrambling and ECC configuration overrides (set by the ROM)
                for the Creator and OwnerSeed flash info pages (pages 1 and
                2 in partition 0) that are hardwired to the keygmr. By
                default, scrambling and ECC on these flash info pages must
                be enabled in order to successfully crank the keygmr (in the
                ROM_EXT). However, values of kMultiBitBool4True for each
                subfield in this field will disable this requirement. See
                the HW_INFO_CFG_OVERRIDE flash_ctrl CSR for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 240
            }
            {
              name: CREATOR_SW_CFG_RNG_EN
              size: 4
              desc:
                '''
                Whether or not to enable use of hardware generated entropy
                (from the entropy complex via EDN) in the `rnd_uint32`
                function. A value of kHardenedBoolTrue enables the use of
                hardware generated entropy, while all other values disable.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 244
            }
            {
              name: CREATOR_SW_CFG_JITTER_EN
              size: 4
              desc:
                '''
                Whether or not to enable clock jitter. A value of
                kMultiBitBool4False disables, while all other values enable.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 248
            }
            {
              name: CREATOR_SW_CFG_RET_RAM_RESET_MASK
              size: 4
              desc:
                '''
                Reset reason mask used to initialize (by overwriting with
                random data) retention SRAM during ROM execution. A value of
                0 only initializes retention SRAM on power-on-resets.See
                rstmgr RESET_INFO CSR documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 252
            }
            {
              name: CREATOR_SW_CFG_MANUF_STATE
              size: 4
              desc:
                '''
                Manufacturing state binding field. For use by
                SiliconCreators or SiliconOwners to bind ROM_EXT images to a
                specific device or set of devices.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 256
            }
            {
              name: CREATOR_SW_CFG_ROM_EXEC_EN
              size: 4
              desc:
                '''
                Whether or not to enable execution of ROM. A value of 0
                disables, while all other values enable. This enables
                provisioning flows to attach JTAG connections and halt the
                CPU before the device has been fully provisioned. All SKUs
                should set this field to a non-zero value. Provisioning
                flows shall take care to program this field at the
                appropriate time during.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 260
            }
            {
              name: CREATOR_SW_CFG_CPUCTRL
              size: 4
              desc:
                '''
                Value to write to the Ibex CPUCTRL CSR during ROM execution.
                This field controls settings such as ICACHE enablement. See
                Ibex documentation for more information.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 264
            }
            {
              name: CREATOR_SW_CFG_MIN_SEC_VER_ROM_EXT
              size: 4
              desc:
                '''
                Value of the min_security_version_rom_ext field of the
                default boot data.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 268
            }
            {
              name: CREATOR_SW_CFG_MIN_SEC_VER_BL0
              size: 4
              desc:
                '''
                Value of the min_security_version_bl0 field of the
                default boot data.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 272
            }
            {
              name: CREATOR_SW_CFG_DEFAULT_BOOT_DATA_IN_PROD_EN
              size: 4
              desc:
                '''
                Whether or not to enable the default boot data in PROD and
                PROD_END life cycle states. A value of kHardenedBoolTrue
                enables, all other values disable. If left disabled,
                provisioning flows are required to setup boot data pages
                prior to enabling ROM execution.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 276
            }
            {
              name: CREATOR_SW_CFG_RMA_SPIN_EN
              size: 4
              desc:
                '''
                Whether or not to enable a busy-wait delay loop in the ROM,
                when a specific SW strapping configuration is applied during
                boot, to provide time to trigger an RMA lifecycle transition
                over JTAG. A value of kHardenedBoolTrue enables, all other
                values disable.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 280
            }
            {
              name: CREATOR_SW_CFG_RMA_SPIN_CYCLES
              size: 4
              desc:
                '''
                The number of Ibex clock cycles to spin for when waiting for
                an RMA transition. Used in combination with the
                CREATOR_SW_CFG_RMA_SPIN_EN field.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 284
            }
            {
              name: CREATOR_SW_CFG_RNG_REPCNT_THRESHOLDS
              size: 4
              desc:
                '''
                The repetition count health test thresholds to enable
                entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 288
            }
            {
              name: CREATOR_SW_CFG_RNG_REPCNTS_THRESHOLDS
              size: 4
              desc:
                '''
                The repetition count symbol health test thresholds to enable
                entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 292
            }
            {
              name: CREATOR_SW_CFG_RNG_ADAPTP_HI_THRESHOLDS
              size: 4
              desc:
                '''
                The adaptive proportion health test high thresholds to
                enable entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 296
            }
            {
              name: CREATOR_SW_CFG_RNG_ADAPTP_LO_THRESHOLDS
              size: 4
              desc:
                '''
                The adaptive proportion health test low thresholds to enable
                entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 300
            }
            {
              name: CREATOR_SW_CFG_RNG_BUCKET_THRESHOLDS
              size: 4
              desc:
                '''
                The bucket health test thresholds to enable entropy_src with
                during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 304
            }
            {
              name: CREATOR_SW_CFG_RNG_MARKOV_HI_THRESHOLDS
              size: 4
              desc:
                '''
                The Markov health test high thresholds to enable entropy_src
                with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 308
            }
            {
              name: CREATOR_SW_CFG_RNG_MARKOV_LO_THRESHOLDS
              size: 4
              desc:
                '''
                The Markov health test low thresholds to enable entropy_src
                with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 312
            }
            {
              name: CREATOR_SW_CFG_RNG_EXTHT_HI_THRESHOLDS
              size: 4
              desc:
                '''
                The external health test high thresholds to enable the
                entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 316
            }
            {
              name: CREATOR_SW_CFG_RNG_EXTHT_LO_THRESHOLDS
              size: 4
              desc:
                '''
                The external health test low thresholds to enable the
                entropy_src with during ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 320
            }
            {
              name: CREATOR_SW_CFG_RNG_ALERT_THRESHOLD
              size: 4
              desc:
                '''
                The alert threshold to configure the entropy_src with during
                ROM execution.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 324
            }
            {
              name: CREATOR_SW_CFG_RNG_HEALTH_CONFIG_DIGEST
              size: 4
              desc:
                '''
                A CRC32 digest of all entropy_src health test threshold
                configuration fields above.
                This must be configured if CREATOR_SW_CFG_RNG_EN is true.
                See entropy_src documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 328
            }
            {
              name: CREATOR_SW_CFG_SRAM_KEY_RENEW_EN
              size: 4
              desc:
                '''
                Whether or not the ROM should request SRAM to be rescrambled
                with a new key on every boot. kHardenedBoolFalse disables,
                while all other values enable.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 332
            }
            {
              name: CREATOR_SW_CFG_IMMUTABLE_ROM_EXT_EN
              size: 4
              desc:
                '''
                Enablement of the ROM_EXT immutable code section.
                A value of kHardenedBoolTrue enables the feature.
                All other values disable it.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 336
            }
            {
              name: CREATOR_SW_CFG_IMMUTABLE_ROM_EXT_START_OFFSET
              size: 4
              desc:
                '''
                Relative offset from the start of the ROM_EXT slot to
                find the immutable code section at.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 340
            }
            {
              name: CREATOR_SW_CFG_IMMUTABLE_ROM_EXT_LENGTH
              size: 4
              desc: Length (in bytes) of the immutable code section.
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 344
            }
            {
              name: CREATOR_SW_CFG_IMMUTABLE_ROM_EXT_SHA256_HASH
              size: 32
              desc: SHA256 hash of the immutable ROM_EXT section.
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 348
            }
            {
              name: CREATOR_SW_CFG_RESERVED
              size: 32
              desc:
                '''
                Unused bits in the CREATOR_SW_CFG OTP partition. These can
                be claimed by software as needed.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 380
            }
            {
              name: CREATOR_SW_CFG_DIGEST
              size: 8
              offset: 424
              ismubi: false
              isdigest: true
              inv_default: 234369395612291906
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Software configuration partition.
            This is for device-specific calibration data, e.g, clock, LDO, RNG,
            and configuration settings set by the ROM.
            '''
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 368
          offset: 64
        }
        {
          name: OWNER_SW_CFG
          variant: Unbuffered
          absorb: true
          secret: false
          sw_digest: true
          hw_digest: false
          write_lock: Digest
          read_lock: CSR
          key_sel: NoKey
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: OWNER_SW_CFG_ROM_ERROR_REPORTING
              size: 4
              desc:
                '''
                The shutdown error reporting verbosity used by the ROM.
                Should be configured to one of several
                `shutdown_error_redact_t` values. See
                `sw/device/silicon_creator/lib/shutdown.h` for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 432
            }
            {
              name: OWNER_SW_CFG_ROM_BOOTSTRAP_DIS
              size: 4
              desc:
                '''
                Whether or not to disable ROM bootstrap mechanism. A value
                of kHardenedBoolTrue disable bootstrap mechanism in the ROM,
                while all other values enable it. Note, the provisioning
                flow should take care when to program this field if it is
                used by a SKU, as there is no way to get firmware into flash
                in a PROD LC state if a valid ROM_EXT does not already exist
                in flash once this value is configured to true.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 436
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_CLASS_EN
              size: 4
              desc:
                '''
                A four byte packed field, where each byte controls whether
                or not the ROM enables each alert class (A through D) of the
                alert_handler. The byte-sized subfields are arranged from D
                to A, MSB to LSB. Each byte should be set to an
                `alert_enable_t` value accordingly. See the alert_handler
                documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 440
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_ESCALATION
              size: 4
              desc:
                '''
                A four byte packed field, where each byte controls the
                escalation configuration for each alert class (A through D)
                of the alert_handler configured by the ROM. The byte-sized
                subfields are arranged from D to A, MSB to LSB. Each byte
                should be set to an `alert_escalate_t` value accordingly.
                See the alert_handler documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 444
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION
              size: 320
              desc:
                '''
                The alert classifications (A through D) for each alert
                source of the alert_handler to be configured by the ROM. The
                field consists of a contiguous 320-byte block, or 80 32-bit
                words. The four bytes in each word encode the configuration
                of a single alert source across four lifecycle states, in
                order from LSB to MSB: PROD, PROD_END, DEV, and RMA. Each
                byte should be set to an `alert_class_t` value accordingly.
                The order of the 80 32-bit words, from LSB to MSB can be
                found in the EARLGREY_ALERTS list in `rules/const.bzl`.
                See the alert_handler documentation for more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 448
            }
            {
              name: OWNER_SW_CFG_ROM_LOCAL_ALERT_CLASSIFICATION
              size: 64
              desc:
                '''
                Same as the `OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION` field,
                except these configuration correspond to the local alert
                sources found in the `EARLGREY_LOC_ALERTS list in
                `rules/const.bzl`.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 768
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH
              size: 16
              desc:
                '''
                The alert accumulation threshold values for each alert class
                (A through D) of the alert_handler to be configured by the
                ROM. This field consists of four 32-bit words encoding the
                accumulation thresholds for each alert class A through D
                arranged LSW to MSW. See the alert_handler documentation for
                more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 832
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_TIMEOUT_CYCLES
              size: 16
              desc:
                '''
                Same as the `OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH` field,
                except each value corresponds to the interrupt timeout
                configuration of an alert class.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 848
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_PHASE_CYCLES
              size: 64
              desc:
                '''
                The alert escalation phase durations, measured in clock
                cycles, the ROM will configure the four alert phases for
                each alert class of the alert_handler. This field consists
                of a contiguous 64-byte block, or an array of four 128-bit
                fields. Each 128-bit subfield encodes four 32-bit words that
                contain the alert phase cycle count configurations for alert
                escalation phases 0 to 3, from LSW to MSW. Each 128-bit
                subfield is contains all cofigurations for a single alert
                class, arranged from class A to D, from LS to MS. For
                example, the cycle durations of each escalation phase in
                this field should be configured as such, from LSB to MSB:
                <classA,phase0>...<classA,phase3>...<classD,phase0>...
                <classD,phase3>. See the alert_handler documentation for
                more details.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 864
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD
              size: 4
              desc:
                '''
                The expected CRC32 digest over all of the alert_handler
                configurations set up by the ROM for a device operating in
                the PROD LC state. The ROM reads this field and checks it
                against a digest it computes over the alert_handler
                configuration it programmed. This field is expected to be
                automatically computed by the `otp_alert_digest()` Bazel
                rule. See the `alert_config_crc32()` function in the
                SiliconCreator alert_handler driver for more details on what
                configurations are included in this digest.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 928
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_END
              size: 4
              desc:
                '''
                Same as the `OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD` field,
                except the expected digest is for chips operating in the
                PROD_END LC state.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 932
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_DIGEST_DEV
              size: 4
              desc:
                '''
                Same as the `OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD` field,
                except the expected digest is for chips operating in the
                DEV LC state.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 936
            }
            {
              name: OWNER_SW_CFG_ROM_ALERT_DIGEST_RMA
              size: 4
              desc:
                '''
                Same as the `OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD` field,
                except the expected digest is for chips operating in the
                RMA LC state.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 940
            }
            {
              name: OWNER_SW_CFG_ROM_WATCHDOG_BITE_THRESHOLD_CYCLES
              size: 4
              desc: Watchdog timer bite threshold (in cycles) configured by the ROM.
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 944
            }
            {
              name: OWNER_SW_CFG_ROM_KEYMGR_OTP_MEAS_EN
              size: 4
              desc:
                '''
                Whether or not to configure the attestation SW binding CSRs
                of the keymgr with the value in ROM_EXT manifest or the
                measurement of the OTP CreatorSwCfg, OwnerSwCfg, and
                secure boot key integrity digest. A value of
                kHardenedBoolTrue uses the ROM computed OTP measurements,
                while all other values trigger the use of the binding values
                included in the ROM_EXT manifest.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 948
            }
            {
              name: OWNER_SW_CFG_MANUF_STATE
              size: 4
              desc:
                '''
                Manufacturing state binding field. For use by
                SiliconCreators or SiliconOwners to bind BL0 images to a
                specific device or set of devices.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 952
            }
            {
              name: OWNER_SW_CFG_ROM_RSTMGR_INFO_EN
              size: 4
              desc:
                '''
                A two byte packed word that indicates the expected rstmgr
                alert and CPU info dump enable states, configured in the
                rstmgr's ALERT_INFO_CTRL and CPU_INFO_CTRL CSRs respectively.
                The expected format of this fields is
                {0,0,kHardenedBool*,kHardenedBool*}, read MSB to LSB, where
                the left most kHardenedBool* entry indicates the expected
                enablement state of the ALERT_INFO_CTRL, and the right most
                indicates the enablement state of the CPU_INFO_CTRL. Since
                the ROM expects both to be disabled upon handing over
                execution control to the ROM_EXT, this entire OTP field
                **should be left unprovisioned, or set to all 0**.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 956
            }
            {
              name: OWNER_SW_CFG_ROM_EXT_BOOTSTRAP_EN
              size: 4
              desc: Unused. Set to 0.
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 960
            }
            {
              name: OWNER_SW_CFG_ROM_SENSOR_CTRL_ALERT_CFG
              size: 12
              desc:
                '''
                Alert configuration values for the sensor_ctrl block
                that will be configured by the ROM. This field is 12 bytes
                long, where each byte contains two 4-bit packed subfields,
                encoding two four bit boolean values (kMultiBitBool4False or
                kMultiBitBool4True), as follows (read MSB to LSB):
                {fatality, enablement}. For example, the byte 0x69 would
                encode the alert is: 1) recoverable, and 2) disabled.

                Currently, there are only 11 alerts in sensor_ctrl to
                configure, thus only the least significant bytes in this
                field are used.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 964
            }
            {
              name: OWNER_SW_CFG_ROM_SRAM_READBACK_EN
              size: 4
              desc:
                '''
                This field encodes the enablements of the readback security
                features for the main and retention SRAMs to be configured
                by the ROM. This field is four bytes, but the LSB contains
                two 4-bit packed kMultiBitBool4* values that indicate the
                enablement of the feature for the retention SRAM and
                main SRAM, from MSB to LSB respectively. See the READBACK
                CSR of the sram_ctrl for more details on this feature.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 976
            }
            {
              name: OWNER_SW_CFG_ROM_PRESERVE_RESET_REASON_EN
              size: 4
              desc:
                '''
                Whether or not the ROM should preserve the reset reasons CSR
                state in the rstmgr, or clear it. A value of
                kHardenedBoolTrue preserves the CSR, while other values
                trigger the ROM to clear the CSR after copying the reason to
                the retention SRAM.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 980
            }
            {
              name: OWNER_SW_CFG_ROM_RESET_REASON_CHECK_VALUE
              size: 4
              desc:
                '''
                Two packed 16-bit values that indicate whether the ROM
                should perform a validation check on the the reset reasons
                during boot. The validation check is a hardening mechanism
                that checks the reset reasons for consistency at two
                different points in time. Both packed values should be the
                same. Values of kHardenedBoolFalse will instruct the ROM to
                skip the reset reasons validation check, while all other
                values will instruct the ROM to perform the check.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 984
            }
            {
              name: OWNER_SW_CFG_ROM_BANNER_EN
              size: 4
              desc:
                '''
                Whether or not the ROM should print a banner message to the
                console UART during boot. A value of kHardenedBoolFalse
                disables the message printing, while all other values enable
                it.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 988
            }
            {
              name: OWNER_SW_CFG_ROM_FLASH_ECC_EXC_HANDLER_EN
              size: 4
              desc:
                '''
                Whether or not the ROM should use the flash ECC exception
                handler during execution. A value of kHardenedBoolTrue
                allows the ROM to use an the exception handler that recovers
                gracefully and continues the boot process if a flash ECC
                error is encountered during verification of a specific
                ROM_EXT slot. This enables the ROM to attempt booting the
                next ROM_EXT slot if the first slot attempted has been
                corrupted. All other values trigger default ROM exception
                handling, which is all exceptions trigger a chip shutdown
                and reset.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 992
            }
            {
              name: OWNER_SW_CFG_RESERVED
              size: 128
              desc:
                '''
                Unused bits in the OWNER_SW_CFG OTP partition. These can be
                claimed by software as needed.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 996
            }
            {
              name: OWNER_SW_CFG_DIGEST
              size: 8
              offset: 1136
              ismubi: false
              isdigest: true
              inv_default: 16327599381873551525
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Software configuration partition.
            This contains data that changes software behavior in the ROM, for
            example enabling defensive features in ROM or selecting failure
            modes if verification fails.
            '''
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 712
          offset: 432
        }
        {
          name: ROT_CREATOR_AUTH_CODESIGN
          variant: Unbuffered
          absorb: false
          secret: false
          sw_digest: true
          hw_digest: false
          write_lock: Digest
          read_lock: CSR
          key_sel: NoKey
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY_TYPE0
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1144
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY0
              size: 64
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1148
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY_TYPE1
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1212
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY1
              size: 64
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1216
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY_TYPE2
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1280
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY2
              size: 64
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1284
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY_TYPE3
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1348
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_ECDSA_KEY3
              size: 64
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1352
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_TYPE0
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1416
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY0
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1420
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_CONFIG0
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1452
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_TYPE1
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1456
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY1
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1460
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_CONFIG1
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1492
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_TYPE2
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1496
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY2
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1500
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_CONFIG2
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1532
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_TYPE3
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1536
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY3
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1540
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_SPX_KEY_CONFIG3
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1572
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_BLOCK_SHA2_256_HASH
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1576
            }
            {
              name: ROT_CREATOR_AUTH_CODESIGN_DIGEST
              size: 8
              offset: 1608
              ismubi: false
              isdigest: true
              inv_default: 1581155821231578393
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            This OTP partition is used to store four P-256 keys
            and four Sphincs+ keys. The partition requires 464
            bytes of software visible storage. The partition is
            locked at manufacturing time to protect against
            malicious write attempts.
            '''
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 472
          offset: 1144
        }
        {
          name: ROT_CREATOR_AUTH_STATE
          variant: Unbuffered
          absorb: false
          secret: false
          sw_digest: true
          hw_digest: false
          write_lock: Digest
          read_lock: CSR
          key_sel: NoKey
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: ROT_CREATOR_AUTH_STATE_ECDSA_KEY0
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1616
            }
            {
              name: ROT_CREATOR_AUTH_STATE_ECDSA_KEY1
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1620
            }
            {
              name: ROT_CREATOR_AUTH_STATE_ECDSA_KEY2
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1624
            }
            {
              name: ROT_CREATOR_AUTH_STATE_ECDSA_KEY3
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1628
            }
            {
              name: ROT_CREATOR_AUTH_STATE_SPX_KEY0
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1632
            }
            {
              name: ROT_CREATOR_AUTH_STATE_SPX_KEY1
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1636
            }
            {
              name: ROT_CREATOR_AUTH_STATE_SPX_KEY2
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1640
            }
            {
              name: ROT_CREATOR_AUTH_STATE_SPX_KEY3
              size: 4
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              inv_default: 0
              offset: 1644
            }
            {
              name: ROT_CREATOR_AUTH_STATE_DIGEST
              size: 8
              offset: 1648
              ismubi: false
              isdigest: true
              inv_default: 2324999962355908533
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            This OTP partition is used to capture the state of
            each key slot. Each key can be in one of the
            following states: BLANK, ENABLED, DISABLED. The
            encoded values are such that transitions between
            BLANK -> ENABLED ->  DISABLED are possible without
            causing ECC errors (this is a mechanism similar to
            how we manage life cycle state transitions). The
            partition is left unlocked to allow STATE updates in
            the field. The ROM_EXT is required to lock access to
            the OTP Direct Access Interface to prevent DoS
            attacks from malicious code executing on Silicon
            Owner partitions. DAI write locking is available in
            EarlGrey.
            '''
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 40
          offset: 1616
        }
        {
          name: HW_CFG0
          variant: Buffered
          secret: false
          sw_digest: false
          hw_digest: true
          write_lock: Digest
          read_lock: None
          key_sel: NoKey
          integrity: true
          bkout_type: true
          items:
          [
            {
              name: DEVICE_ID
              size: 32
              inv_default: 45106338074792724304821242469256559359553488864622296623233734261107367140478
              desc:
                '''
                Unique device identifier that is always exposed through the
                lifecycle JTAG tap. See OpenTitan documentation on Device
                Identifiers.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1656
            }
            {
              name: MANUF_STATE
              size: 32
              inv_default: 100965650985106319336595787448038909280859230372109746770436794677173954816422
              desc:
                '''
                Field to capture manufacturing status. Currently unused. Set
                to 0.
                '''
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1688
            }
            {
              name: HW_CFG0_DIGEST
              size: 8
              offset: 1720
              ismubi: false
              isdigest: true
              inv_default: 17905165971232536359
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Hardware configuration 0 partition.
            This contains a device identifier and manufacturing state.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 72
          offset: 1656
        }
        {
          name: HW_CFG1
          variant: Buffered
          secret: false
          sw_digest: false
          hw_digest: true
          write_lock: Digest
          read_lock: None
          key_sel: NoKey
          integrity: true
          bkout_type: true
          items:
          [
            {
              name: EN_SRAM_IFETCH
              size: 1
              ismubi: true
              inv_default: 105
              desc:
                '''
                Enablement of execute from SRAM switch in the sram_ctrl (see
                EXEC CSR). A kMultiBitBool8True value enables, while all
                other values disable.
                '''
              isdigest: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1728
            }
            {
              name: EN_CSRNG_SW_APP_READ
              size: 1
              ismubi: true
              inv_default: 105
              desc:
                '''
                Enablement of CSRNG software application interface. A
                kMultiBitBool8True value enables, while all other values
                disable. Enablement is required to extract output from
                CSRNG via software.
                '''
              isdigest: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1729
            }
            {
              name: DIS_RV_DM_LATE_DEBUG
              size: 1
              ismubi: true
              inv_default: 105
              desc:
                '''
                Disablement of RV_DM late debug feature (see rv_dm
                documentation). A kMultiBitBool8True disables the late debug
                feature and renders the rv_dm fully ungated in DEV lifecycle
                states. All other values gate rv_dm reachability based on
                the value of LATE_DEBUG_ENABLE CSR in the rv_dm block.
                '''
              isdigest: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1730
            }
            {
              name: HW_CFG1_DIGEST
              size: 8
              offset: 1736
              ismubi: false
              isdigest: true
              inv_default: 13543634046774891762
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Hardware configuration 1 partition.
            This contains several hardware feature switches.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 16
          offset: 1728
        }
        {
          name: SECRET0
          variant: Buffered
          secret: true
          sw_digest: false
          hw_digest: true
          write_lock: Digest
          read_lock: Digest
          key_sel: Secret0Key
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: TEST_UNLOCK_TOKEN
              inv_default: 241483977691757977923367841809339206658
              size: 16
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1744
            }
            {
              name: TEST_EXIT_TOKEN
              inv_default: 150353733052794565317978902093985221175
              size: 16
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1760
            }
            {
              name: SECRET0_DIGEST
              size: 8
              offset: 1776
              ismubi: false
              isdigest: true
              inv_default: 13698041678974836896
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Secret partition 0.
            This contains TEST lifecycle unlock tokens.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 40
          offset: 1744
        }
        {
          name: SECRET1
          variant: Buffered
          secret: true
          sw_digest: false
          hw_digest: true
          write_lock: Digest
          read_lock: Digest
          key_sel: Secret1Key
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: FLASH_ADDR_KEY_SEED
              inv_default: 99410155969389534278404680059562745406179175357375916509714598543499986721841
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1784
            }
            {
              name: FLASH_DATA_KEY_SEED
              inv_default: 7391079586881058628634247621478375370202976073106929415694865999470879218122
              size: 32
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1816
            }
            {
              name: SRAM_DATA_KEY_SEED
              inv_default: 297822815773166572715338675789917702294
              size: 16
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1848
            }
            {
              name: SECRET1_DIGEST
              size: 8
              offset: 1864
              ismubi: false
              isdigest: true
              inv_default: 14153060542995762600
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Secret partition 1.
            This contains SRAM and flash scrambling keys.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 88
          offset: 1784
        }
        {
          name: SECRET2
          variant: Buffered
          secret: true
          sw_digest: false
          hw_digest: true
          write_lock: Digest
          read_lock: Digest
          key_sel: Secret2Key
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: RMA_TOKEN
              inv_default: 197791420282250691661260177080212266122
              size: 16
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1872
            }
            {
              name: CREATOR_ROOT_KEY_SHARE0
              inv_default: 94411066183681302546622452158435937172067990320926238136744201607471434110567
              size: 32
              iskeymgr_creator: true
              isdigest: false
              ismubi: false
              iskeymgr_owner: false
              offset: 1888
            }
            {
              name: CREATOR_ROOT_KEY_SHARE1
              inv_default: 97043349937164487093045210023379701147105192659006254486994315071370236037145
              size: 32
              iskeymgr_creator: true
              isdigest: false
              ismubi: false
              iskeymgr_owner: false
              offset: 1920
            }
            {
              name: SECRET2_DIGEST
              size: 8
              offset: 1952
              ismubi: false
              isdigest: true
              inv_default: 10140889213198706984
              iskeymgr_creator: false
              iskeymgr_owner: false
            }
          ]
          desc:
            '''
            Secret partition 2.
            This contains RMA unlock token, creator root key, and creator seed.
            '''
          absorb: false
          iskeymgr_creator: true
          iskeymgr_owner: false
          size: 88
          offset: 1872
        }
        {
          name: LIFE_CYCLE
          variant: LifeCycle
          secret: false
          sw_digest: false
          hw_digest: false
          write_lock: None
          read_lock: None
          key_sel: NoKey
          integrity: true
          bkout_type: false
          items:
          [
            {
              name: LC_TRANSITION_CNT
              inv_default: 24752457638992396544754265753960069142084552974894085834358048399991475854089517042067373962426813673346557748670398
              size: 48
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 1960
            }
            {
              name: LC_STATE
              inv_default: 1232459460109293830193445129566839459062644876142083683633340923439827006874097651236687620186710
              size: 40
              isdigest: false
              ismubi: false
              iskeymgr_creator: false
              iskeymgr_owner: false
              offset: 2008
            }
          ]
          desc:
            '''
            Lifecycle partition.
            This contains lifecycle transition count and state. This partition
            cannot be locked since the life cycle state needs to advance to RMA
            in-field. Note that while this partition is not marked secret, it
            is not readable nor writeable via the DAI. Only the LC controller
            can access this partition, and even via the LC controller it is not
            possible to read the raw manufacturing life cycle state in encoded
            form, since that encoding is considered a netlist secret. The LC
            controller only exposes a decoded version of this state.
            '''
          absorb: false
          iskeymgr_creator: false
          iskeymgr_owner: false
          size: 88
          offset: 1960
        }
      ]
    }
    enable_flash_key: true
    topname: earlgrey
    uniquified_modules: {}
    module_instance_name: otp_ctrl
  }
}
