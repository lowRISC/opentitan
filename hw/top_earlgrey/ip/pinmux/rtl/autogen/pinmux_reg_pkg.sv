// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package pinmux_reg_pkg;

  // Param list
  parameter int NMioPeriphIn = 56;
  parameter int NMioPeriphOut = 69;
  parameter int NMioPads = 44;
  parameter int NDioPads = 21;
  parameter int NWkupDetect = 8;
  parameter int WkupCntWidth = 8;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    logic [5:0]  q;
  } pinmux_reg2hw_periph_insel_mreg_t;

  typedef struct packed {
    logic [6:0]  q;
  } pinmux_reg2hw_mio_outsel_mreg_t;

  typedef struct packed {
    logic [1:0]  q;
  } pinmux_reg2hw_mio_out_sleep_val_mreg_t;

  typedef struct packed {
    logic [1:0]  q;
    logic        qe;
  } pinmux_reg2hw_dio_out_sleep_val_mreg_t;

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_wkup_detector_en_mreg_t;

  typedef struct packed {
    struct packed {
      logic [2:0]  q;
    } mode;
    struct packed {
      logic        q;
    } filter;
    struct packed {
      logic        q;
    } miodio;
  } pinmux_reg2hw_wkup_detector_mreg_t;

  typedef struct packed {
    logic [7:0]  q;
  } pinmux_reg2hw_wkup_detector_cnt_th_mreg_t;

  typedef struct packed {
    logic [5:0]  q;
  } pinmux_reg2hw_wkup_detector_padsel_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } pinmux_reg2hw_wkup_cause_mreg_t;


  typedef struct packed {
    logic [1:0]  d;
  } pinmux_hw2reg_dio_out_sleep_val_mreg_t;

  typedef struct packed {
    logic        d;
  } pinmux_hw2reg_wkup_cause_mreg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    pinmux_reg2hw_periph_insel_mreg_t [55:0] periph_insel; // [970:635]
    pinmux_reg2hw_mio_outsel_mreg_t [43:0] mio_outsel; // [634:327]
    pinmux_reg2hw_mio_out_sleep_val_mreg_t [43:0] mio_out_sleep_val; // [326:239]
    pinmux_reg2hw_dio_out_sleep_val_mreg_t [20:0] dio_out_sleep_val; // [238:176]
    pinmux_reg2hw_wkup_detector_en_mreg_t [7:0] wkup_detector_en; // [175:168]
    pinmux_reg2hw_wkup_detector_mreg_t [7:0] wkup_detector; // [167:128]
    pinmux_reg2hw_wkup_detector_cnt_th_mreg_t [7:0] wkup_detector_cnt_th; // [127:64]
    pinmux_reg2hw_wkup_detector_padsel_mreg_t [7:0] wkup_detector_padsel; // [63:16]
    pinmux_reg2hw_wkup_cause_mreg_t [7:0] wkup_cause; // [15:0]
  } pinmux_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    pinmux_hw2reg_dio_out_sleep_val_mreg_t [20:0] dio_out_sleep_val; // [49:8]
    pinmux_hw2reg_wkup_cause_mreg_t [7:0] wkup_cause; // [7:0]
  } pinmux_hw2reg_t;

  // Register Address
  parameter logic [7:0] PINMUX_REGEN_OFFSET = 8'h 0;
  parameter logic [7:0] PINMUX_PERIPH_INSEL0_OFFSET = 8'h 4;
  parameter logic [7:0] PINMUX_PERIPH_INSEL1_OFFSET = 8'h 8;
  parameter logic [7:0] PINMUX_PERIPH_INSEL2_OFFSET = 8'h c;
  parameter logic [7:0] PINMUX_PERIPH_INSEL3_OFFSET = 8'h 10;
  parameter logic [7:0] PINMUX_PERIPH_INSEL4_OFFSET = 8'h 14;
  parameter logic [7:0] PINMUX_PERIPH_INSEL5_OFFSET = 8'h 18;
  parameter logic [7:0] PINMUX_PERIPH_INSEL6_OFFSET = 8'h 1c;
  parameter logic [7:0] PINMUX_PERIPH_INSEL7_OFFSET = 8'h 20;
  parameter logic [7:0] PINMUX_PERIPH_INSEL8_OFFSET = 8'h 24;
  parameter logic [7:0] PINMUX_PERIPH_INSEL9_OFFSET = 8'h 28;
  parameter logic [7:0] PINMUX_PERIPH_INSEL10_OFFSET = 8'h 2c;
  parameter logic [7:0] PINMUX_PERIPH_INSEL11_OFFSET = 8'h 30;
  parameter logic [7:0] PINMUX_MIO_OUTSEL0_OFFSET = 8'h 34;
  parameter logic [7:0] PINMUX_MIO_OUTSEL1_OFFSET = 8'h 38;
  parameter logic [7:0] PINMUX_MIO_OUTSEL2_OFFSET = 8'h 3c;
  parameter logic [7:0] PINMUX_MIO_OUTSEL3_OFFSET = 8'h 40;
  parameter logic [7:0] PINMUX_MIO_OUTSEL4_OFFSET = 8'h 44;
  parameter logic [7:0] PINMUX_MIO_OUTSEL5_OFFSET = 8'h 48;
  parameter logic [7:0] PINMUX_MIO_OUTSEL6_OFFSET = 8'h 4c;
  parameter logic [7:0] PINMUX_MIO_OUTSEL7_OFFSET = 8'h 50;
  parameter logic [7:0] PINMUX_MIO_OUTSEL8_OFFSET = 8'h 54;
  parameter logic [7:0] PINMUX_MIO_OUTSEL9_OFFSET = 8'h 58;
  parameter logic [7:0] PINMUX_MIO_OUTSEL10_OFFSET = 8'h 5c;
  parameter logic [7:0] PINMUX_MIO_OUT_SLEEP_VAL0_OFFSET = 8'h 60;
  parameter logic [7:0] PINMUX_MIO_OUT_SLEEP_VAL1_OFFSET = 8'h 64;
  parameter logic [7:0] PINMUX_MIO_OUT_SLEEP_VAL2_OFFSET = 8'h 68;
  parameter logic [7:0] PINMUX_DIO_OUT_SLEEP_VAL0_OFFSET = 8'h 6c;
  parameter logic [7:0] PINMUX_DIO_OUT_SLEEP_VAL1_OFFSET = 8'h 70;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR_EN_OFFSET = 8'h 74;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR0_OFFSET = 8'h 78;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR1_OFFSET = 8'h 7c;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR2_OFFSET = 8'h 80;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR3_OFFSET = 8'h 84;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR4_OFFSET = 8'h 88;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR5_OFFSET = 8'h 8c;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR6_OFFSET = 8'h 90;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR7_OFFSET = 8'h 94;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR_CNT_TH0_OFFSET = 8'h 98;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR_CNT_TH1_OFFSET = 8'h 9c;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR_PADSEL0_OFFSET = 8'h a0;
  parameter logic [7:0] PINMUX_WKUP_DETECTOR_PADSEL1_OFFSET = 8'h a4;
  parameter logic [7:0] PINMUX_WKUP_CAUSE_OFFSET = 8'h a8;


  // Register Index
  typedef enum int {
    PINMUX_REGEN,
    PINMUX_PERIPH_INSEL0,
    PINMUX_PERIPH_INSEL1,
    PINMUX_PERIPH_INSEL2,
    PINMUX_PERIPH_INSEL3,
    PINMUX_PERIPH_INSEL4,
    PINMUX_PERIPH_INSEL5,
    PINMUX_PERIPH_INSEL6,
    PINMUX_PERIPH_INSEL7,
    PINMUX_PERIPH_INSEL8,
    PINMUX_PERIPH_INSEL9,
    PINMUX_PERIPH_INSEL10,
    PINMUX_PERIPH_INSEL11,
    PINMUX_MIO_OUTSEL0,
    PINMUX_MIO_OUTSEL1,
    PINMUX_MIO_OUTSEL2,
    PINMUX_MIO_OUTSEL3,
    PINMUX_MIO_OUTSEL4,
    PINMUX_MIO_OUTSEL5,
    PINMUX_MIO_OUTSEL6,
    PINMUX_MIO_OUTSEL7,
    PINMUX_MIO_OUTSEL8,
    PINMUX_MIO_OUTSEL9,
    PINMUX_MIO_OUTSEL10,
    PINMUX_MIO_OUT_SLEEP_VAL0,
    PINMUX_MIO_OUT_SLEEP_VAL1,
    PINMUX_MIO_OUT_SLEEP_VAL2,
    PINMUX_DIO_OUT_SLEEP_VAL0,
    PINMUX_DIO_OUT_SLEEP_VAL1,
    PINMUX_WKUP_DETECTOR_EN,
    PINMUX_WKUP_DETECTOR0,
    PINMUX_WKUP_DETECTOR1,
    PINMUX_WKUP_DETECTOR2,
    PINMUX_WKUP_DETECTOR3,
    PINMUX_WKUP_DETECTOR4,
    PINMUX_WKUP_DETECTOR5,
    PINMUX_WKUP_DETECTOR6,
    PINMUX_WKUP_DETECTOR7,
    PINMUX_WKUP_DETECTOR_CNT_TH0,
    PINMUX_WKUP_DETECTOR_CNT_TH1,
    PINMUX_WKUP_DETECTOR_PADSEL0,
    PINMUX_WKUP_DETECTOR_PADSEL1,
    PINMUX_WKUP_CAUSE
  } pinmux_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] PINMUX_PERMIT [43] = '{
    4'b 0001, // index[ 0] PINMUX_REGEN
    4'b 1111, // index[ 1] PINMUX_PERIPH_INSEL0
    4'b 1111, // index[ 2] PINMUX_PERIPH_INSEL1
    4'b 1111, // index[ 3] PINMUX_PERIPH_INSEL2
    4'b 1111, // index[ 4] PINMUX_PERIPH_INSEL3
    4'b 1111, // index[ 5] PINMUX_PERIPH_INSEL4
    4'b 1111, // index[ 6] PINMUX_PERIPH_INSEL5
    4'b 1111, // index[ 7] PINMUX_PERIPH_INSEL6
    4'b 1111, // index[ 8] PINMUX_PERIPH_INSEL7
    4'b 1111, // index[ 9] PINMUX_PERIPH_INSEL8
    4'b 1111, // index[10] PINMUX_PERIPH_INSEL9
    4'b 1111, // index[11] PINMUX_PERIPH_INSEL10
    4'b 0001, // index[12] PINMUX_PERIPH_INSEL11
    4'b 1111, // index[13] PINMUX_MIO_OUTSEL0
    4'b 1111, // index[14] PINMUX_MIO_OUTSEL1
    4'b 1111, // index[15] PINMUX_MIO_OUTSEL2
    4'b 1111, // index[16] PINMUX_MIO_OUTSEL3
    4'b 1111, // index[17] PINMUX_MIO_OUTSEL4
    4'b 1111, // index[18] PINMUX_MIO_OUTSEL5
    4'b 1111, // index[19] PINMUX_MIO_OUTSEL6
    4'b 1111, // index[20] PINMUX_MIO_OUTSEL7
    4'b 1111, // index[21] PINMUX_MIO_OUTSEL8
    4'b 1111, // index[22] PINMUX_MIO_OUTSEL9
    4'b 1111, // index[23] PINMUX_MIO_OUTSEL10
    4'b 1111, // index[24] PINMUX_MIO_OUT_SLEEP_VAL0
    4'b 1111, // index[25] PINMUX_MIO_OUT_SLEEP_VAL1
    4'b 0111, // index[26] PINMUX_MIO_OUT_SLEEP_VAL2
    4'b 1111, // index[27] PINMUX_DIO_OUT_SLEEP_VAL0
    4'b 0011, // index[28] PINMUX_DIO_OUT_SLEEP_VAL1
    4'b 0001, // index[29] PINMUX_WKUP_DETECTOR_EN
    4'b 0001, // index[30] PINMUX_WKUP_DETECTOR0
    4'b 0001, // index[31] PINMUX_WKUP_DETECTOR1
    4'b 0001, // index[32] PINMUX_WKUP_DETECTOR2
    4'b 0001, // index[33] PINMUX_WKUP_DETECTOR3
    4'b 0001, // index[34] PINMUX_WKUP_DETECTOR4
    4'b 0001, // index[35] PINMUX_WKUP_DETECTOR5
    4'b 0001, // index[36] PINMUX_WKUP_DETECTOR6
    4'b 0001, // index[37] PINMUX_WKUP_DETECTOR7
    4'b 1111, // index[38] PINMUX_WKUP_DETECTOR_CNT_TH0
    4'b 1111, // index[39] PINMUX_WKUP_DETECTOR_CNT_TH1
    4'b 1111, // index[40] PINMUX_WKUP_DETECTOR_PADSEL0
    4'b 0111, // index[41] PINMUX_WKUP_DETECTOR_PADSEL1
    4'b 0001  // index[42] PINMUX_WKUP_CAUSE
  };
endpackage

