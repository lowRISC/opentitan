// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package alert_handler_reg_pkg;

  // Param list
  parameter int NAlerts = 28;
  parameter int NLpg = 14;
  parameter int NLpgWidth = 4;
  parameter logic [NAlerts-1:0][NLpgWidth-1:0] LpgMap = {
  4'd13,
  4'd13,
  4'd13,
  4'd13,
  4'd13,
  4'd11,
  4'd12,
  4'd12,
  4'd11,
  4'd10,
  4'd10,
  4'd10,
  4'd10,
  4'd10,
  4'd8,
  4'd7,
  4'd6,
  4'd6,
  4'd7,
  4'd7,
  4'd6,
  4'd5,
  4'd4,
  4'd3,
  4'd2,
  4'd1,
  4'd0,
  4'd0
};
  parameter int EscCntDw = 32;
  parameter int AccuCntDw = 16;
  parameter logic [NAlerts-1:0] AsyncOn = {
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1,
  1'b1
};
  parameter int N_CLASSES = 4;
  parameter int N_ESC_SEV = 4;
  parameter int N_PHASES = 4;
  parameter int N_LOC_ALERT = 7;
  parameter int PING_CNT_DW = 16;
  parameter int PHASE_DW = 2;
  parameter int CLASS_DW = 2;
  parameter int LOCAL_ALERT_ID_ALERT_PINGFAIL = 0;
  parameter int LOCAL_ALERT_ID_ESC_PINGFAIL = 1;
  parameter int LOCAL_ALERT_ID_ALERT_INTEGFAIL = 2;
  parameter int LOCAL_ALERT_ID_ESC_INTEGFAIL = 3;
  parameter int LOCAL_ALERT_ID_BUS_INTEGFAIL = 4;
  parameter int LOCAL_ALERT_ID_SHADOW_REG_UPDATE_ERROR = 5;
  parameter int LOCAL_ALERT_ID_SHADOW_REG_STORAGE_ERROR = 6;
  parameter int LOCAL_ALERT_ID_LAST = 6;

  // Address widths within the block
  parameter int BlockAw = 10;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
    } classd;
    struct packed {
      logic        q;
    } classc;
    struct packed {
      logic        q;
    } classb;
    struct packed {
      logic        q;
    } classa;
  } alert_handler_reg2hw_intr_state_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } classd;
    struct packed {
      logic        q;
    } classc;
    struct packed {
      logic        q;
    } classb;
    struct packed {
      logic        q;
    } classa;
  } alert_handler_reg2hw_intr_enable_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } classd;
    struct packed {
      logic        q;
      logic        qe;
    } classc;
    struct packed {
      logic        q;
      logic        qe;
    } classb;
    struct packed {
      logic        q;
      logic        qe;
    } classa;
  } alert_handler_reg2hw_intr_test_reg_t;

  typedef struct packed {
    logic [15:0] q;
  } alert_handler_reg2hw_ping_timeout_cyc_shadowed_reg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_ping_timer_en_shadowed_reg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_alert_regwen_mreg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_alert_en_shadowed_mreg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_alert_class_shadowed_mreg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_alert_cause_mreg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_loc_alert_en_shadowed_mreg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_loc_alert_class_shadowed_mreg_t;

  typedef struct packed {
    logic        q;
  } alert_handler_reg2hw_loc_alert_cause_mreg_t;

  typedef struct packed {
    struct packed {
      logic [1:0]  q;
    } map_e3;
    struct packed {
      logic [1:0]  q;
    } map_e2;
    struct packed {
      logic [1:0]  q;
    } map_e1;
    struct packed {
      logic [1:0]  q;
    } map_e0;
    struct packed {
      logic        q;
    } en_e3;
    struct packed {
      logic        q;
    } en_e2;
    struct packed {
      logic        q;
    } en_e1;
    struct packed {
      logic        q;
    } en_e0;
    struct packed {
      logic        q;
    } lock;
    struct packed {
      logic        q;
    } en;
  } alert_handler_reg2hw_classa_ctrl_shadowed_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } alert_handler_reg2hw_classa_clr_shadowed_reg_t;

  typedef struct packed {
    logic [15:0] q;
  } alert_handler_reg2hw_classa_accum_thresh_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classa_timeout_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_classa_crashdump_trigger_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classa_phase0_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classa_phase1_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classa_phase2_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classa_phase3_cyc_shadowed_reg_t;

  typedef struct packed {
    struct packed {
      logic [1:0]  q;
    } map_e3;
    struct packed {
      logic [1:0]  q;
    } map_e2;
    struct packed {
      logic [1:0]  q;
    } map_e1;
    struct packed {
      logic [1:0]  q;
    } map_e0;
    struct packed {
      logic        q;
    } en_e3;
    struct packed {
      logic        q;
    } en_e2;
    struct packed {
      logic        q;
    } en_e1;
    struct packed {
      logic        q;
    } en_e0;
    struct packed {
      logic        q;
    } lock;
    struct packed {
      logic        q;
    } en;
  } alert_handler_reg2hw_classb_ctrl_shadowed_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } alert_handler_reg2hw_classb_clr_shadowed_reg_t;

  typedef struct packed {
    logic [15:0] q;
  } alert_handler_reg2hw_classb_accum_thresh_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classb_timeout_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_classb_crashdump_trigger_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classb_phase0_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classb_phase1_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classb_phase2_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classb_phase3_cyc_shadowed_reg_t;

  typedef struct packed {
    struct packed {
      logic [1:0]  q;
    } map_e3;
    struct packed {
      logic [1:0]  q;
    } map_e2;
    struct packed {
      logic [1:0]  q;
    } map_e1;
    struct packed {
      logic [1:0]  q;
    } map_e0;
    struct packed {
      logic        q;
    } en_e3;
    struct packed {
      logic        q;
    } en_e2;
    struct packed {
      logic        q;
    } en_e1;
    struct packed {
      logic        q;
    } en_e0;
    struct packed {
      logic        q;
    } lock;
    struct packed {
      logic        q;
    } en;
  } alert_handler_reg2hw_classc_ctrl_shadowed_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } alert_handler_reg2hw_classc_clr_shadowed_reg_t;

  typedef struct packed {
    logic [15:0] q;
  } alert_handler_reg2hw_classc_accum_thresh_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classc_timeout_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_classc_crashdump_trigger_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classc_phase0_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classc_phase1_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classc_phase2_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classc_phase3_cyc_shadowed_reg_t;

  typedef struct packed {
    struct packed {
      logic [1:0]  q;
    } map_e3;
    struct packed {
      logic [1:0]  q;
    } map_e2;
    struct packed {
      logic [1:0]  q;
    } map_e1;
    struct packed {
      logic [1:0]  q;
    } map_e0;
    struct packed {
      logic        q;
    } en_e3;
    struct packed {
      logic        q;
    } en_e2;
    struct packed {
      logic        q;
    } en_e1;
    struct packed {
      logic        q;
    } en_e0;
    struct packed {
      logic        q;
    } lock;
    struct packed {
      logic        q;
    } en;
  } alert_handler_reg2hw_classd_ctrl_shadowed_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } alert_handler_reg2hw_classd_clr_shadowed_reg_t;

  typedef struct packed {
    logic [15:0] q;
  } alert_handler_reg2hw_classd_accum_thresh_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classd_timeout_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [1:0]  q;
  } alert_handler_reg2hw_classd_crashdump_trigger_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classd_phase0_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classd_phase1_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classd_phase2_cyc_shadowed_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } alert_handler_reg2hw_classd_phase3_cyc_shadowed_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } classa;
    struct packed {
      logic        d;
      logic        de;
    } classb;
    struct packed {
      logic        d;
      logic        de;
    } classc;
    struct packed {
      logic        d;
      logic        de;
    } classd;
  } alert_handler_hw2reg_intr_state_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_alert_cause_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_loc_alert_cause_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_classa_clr_regwen_reg_t;

  typedef struct packed {
    logic [15:0] d;
  } alert_handler_hw2reg_classa_accum_cnt_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } alert_handler_hw2reg_classa_esc_cnt_reg_t;

  typedef struct packed {
    logic [2:0]  d;
  } alert_handler_hw2reg_classa_state_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_classb_clr_regwen_reg_t;

  typedef struct packed {
    logic [15:0] d;
  } alert_handler_hw2reg_classb_accum_cnt_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } alert_handler_hw2reg_classb_esc_cnt_reg_t;

  typedef struct packed {
    logic [2:0]  d;
  } alert_handler_hw2reg_classb_state_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_classc_clr_regwen_reg_t;

  typedef struct packed {
    logic [15:0] d;
  } alert_handler_hw2reg_classc_accum_cnt_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } alert_handler_hw2reg_classc_esc_cnt_reg_t;

  typedef struct packed {
    logic [2:0]  d;
  } alert_handler_hw2reg_classc_state_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } alert_handler_hw2reg_classd_clr_regwen_reg_t;

  typedef struct packed {
    logic [15:0] d;
  } alert_handler_hw2reg_classd_accum_cnt_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } alert_handler_hw2reg_classd_esc_cnt_reg_t;

  typedef struct packed {
    logic [2:0]  d;
  } alert_handler_hw2reg_classd_state_reg_t;

  // Register -> HW type
  typedef struct packed {
    alert_handler_reg2hw_intr_state_reg_t intr_state; // [976:973]
    alert_handler_reg2hw_intr_enable_reg_t intr_enable; // [972:969]
    alert_handler_reg2hw_intr_test_reg_t intr_test; // [968:961]
    alert_handler_reg2hw_ping_timeout_cyc_shadowed_reg_t ping_timeout_cyc_shadowed; // [960:945]
    alert_handler_reg2hw_ping_timer_en_shadowed_reg_t ping_timer_en_shadowed; // [944:944]
    alert_handler_reg2hw_alert_regwen_mreg_t [27:0] alert_regwen; // [943:916]
    alert_handler_reg2hw_alert_en_shadowed_mreg_t [27:0] alert_en_shadowed; // [915:888]
    alert_handler_reg2hw_alert_class_shadowed_mreg_t [27:0] alert_class_shadowed; // [887:832]
    alert_handler_reg2hw_alert_cause_mreg_t [27:0] alert_cause; // [831:804]
    alert_handler_reg2hw_loc_alert_en_shadowed_mreg_t [6:0] loc_alert_en_shadowed; // [803:797]
    alert_handler_reg2hw_loc_alert_class_shadowed_mreg_t [6:0]
        loc_alert_class_shadowed; // [796:783]
    alert_handler_reg2hw_loc_alert_cause_mreg_t [6:0] loc_alert_cause; // [782:776]
    alert_handler_reg2hw_classa_ctrl_shadowed_reg_t classa_ctrl_shadowed; // [775:762]
    alert_handler_reg2hw_classa_clr_shadowed_reg_t classa_clr_shadowed; // [761:760]
    alert_handler_reg2hw_classa_accum_thresh_shadowed_reg_t
        classa_accum_thresh_shadowed; // [759:744]
    alert_handler_reg2hw_classa_timeout_cyc_shadowed_reg_t classa_timeout_cyc_shadowed; // [743:712]
    alert_handler_reg2hw_classa_crashdump_trigger_shadowed_reg_t
        classa_crashdump_trigger_shadowed; // [711:710]
    alert_handler_reg2hw_classa_phase0_cyc_shadowed_reg_t classa_phase0_cyc_shadowed; // [709:678]
    alert_handler_reg2hw_classa_phase1_cyc_shadowed_reg_t classa_phase1_cyc_shadowed; // [677:646]
    alert_handler_reg2hw_classa_phase2_cyc_shadowed_reg_t classa_phase2_cyc_shadowed; // [645:614]
    alert_handler_reg2hw_classa_phase3_cyc_shadowed_reg_t classa_phase3_cyc_shadowed; // [613:582]
    alert_handler_reg2hw_classb_ctrl_shadowed_reg_t classb_ctrl_shadowed; // [581:568]
    alert_handler_reg2hw_classb_clr_shadowed_reg_t classb_clr_shadowed; // [567:566]
    alert_handler_reg2hw_classb_accum_thresh_shadowed_reg_t
        classb_accum_thresh_shadowed; // [565:550]
    alert_handler_reg2hw_classb_timeout_cyc_shadowed_reg_t classb_timeout_cyc_shadowed; // [549:518]
    alert_handler_reg2hw_classb_crashdump_trigger_shadowed_reg_t
        classb_crashdump_trigger_shadowed; // [517:516]
    alert_handler_reg2hw_classb_phase0_cyc_shadowed_reg_t classb_phase0_cyc_shadowed; // [515:484]
    alert_handler_reg2hw_classb_phase1_cyc_shadowed_reg_t classb_phase1_cyc_shadowed; // [483:452]
    alert_handler_reg2hw_classb_phase2_cyc_shadowed_reg_t classb_phase2_cyc_shadowed; // [451:420]
    alert_handler_reg2hw_classb_phase3_cyc_shadowed_reg_t classb_phase3_cyc_shadowed; // [419:388]
    alert_handler_reg2hw_classc_ctrl_shadowed_reg_t classc_ctrl_shadowed; // [387:374]
    alert_handler_reg2hw_classc_clr_shadowed_reg_t classc_clr_shadowed; // [373:372]
    alert_handler_reg2hw_classc_accum_thresh_shadowed_reg_t
        classc_accum_thresh_shadowed; // [371:356]
    alert_handler_reg2hw_classc_timeout_cyc_shadowed_reg_t classc_timeout_cyc_shadowed; // [355:324]
    alert_handler_reg2hw_classc_crashdump_trigger_shadowed_reg_t
        classc_crashdump_trigger_shadowed; // [323:322]
    alert_handler_reg2hw_classc_phase0_cyc_shadowed_reg_t classc_phase0_cyc_shadowed; // [321:290]
    alert_handler_reg2hw_classc_phase1_cyc_shadowed_reg_t classc_phase1_cyc_shadowed; // [289:258]
    alert_handler_reg2hw_classc_phase2_cyc_shadowed_reg_t classc_phase2_cyc_shadowed; // [257:226]
    alert_handler_reg2hw_classc_phase3_cyc_shadowed_reg_t classc_phase3_cyc_shadowed; // [225:194]
    alert_handler_reg2hw_classd_ctrl_shadowed_reg_t classd_ctrl_shadowed; // [193:180]
    alert_handler_reg2hw_classd_clr_shadowed_reg_t classd_clr_shadowed; // [179:178]
    alert_handler_reg2hw_classd_accum_thresh_shadowed_reg_t
        classd_accum_thresh_shadowed; // [177:162]
    alert_handler_reg2hw_classd_timeout_cyc_shadowed_reg_t classd_timeout_cyc_shadowed; // [161:130]
    alert_handler_reg2hw_classd_crashdump_trigger_shadowed_reg_t
        classd_crashdump_trigger_shadowed; // [129:128]
    alert_handler_reg2hw_classd_phase0_cyc_shadowed_reg_t classd_phase0_cyc_shadowed; // [127:96]
    alert_handler_reg2hw_classd_phase1_cyc_shadowed_reg_t classd_phase1_cyc_shadowed; // [95:64]
    alert_handler_reg2hw_classd_phase2_cyc_shadowed_reg_t classd_phase2_cyc_shadowed; // [63:32]
    alert_handler_reg2hw_classd_phase3_cyc_shadowed_reg_t classd_phase3_cyc_shadowed; // [31:0]
  } alert_handler_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    alert_handler_hw2reg_intr_state_reg_t intr_state; // [289:282]
    alert_handler_hw2reg_alert_cause_mreg_t [27:0] alert_cause; // [281:226]
    alert_handler_hw2reg_loc_alert_cause_mreg_t [6:0] loc_alert_cause; // [225:212]
    alert_handler_hw2reg_classa_clr_regwen_reg_t classa_clr_regwen; // [211:210]
    alert_handler_hw2reg_classa_accum_cnt_reg_t classa_accum_cnt; // [209:194]
    alert_handler_hw2reg_classa_esc_cnt_reg_t classa_esc_cnt; // [193:162]
    alert_handler_hw2reg_classa_state_reg_t classa_state; // [161:159]
    alert_handler_hw2reg_classb_clr_regwen_reg_t classb_clr_regwen; // [158:157]
    alert_handler_hw2reg_classb_accum_cnt_reg_t classb_accum_cnt; // [156:141]
    alert_handler_hw2reg_classb_esc_cnt_reg_t classb_esc_cnt; // [140:109]
    alert_handler_hw2reg_classb_state_reg_t classb_state; // [108:106]
    alert_handler_hw2reg_classc_clr_regwen_reg_t classc_clr_regwen; // [105:104]
    alert_handler_hw2reg_classc_accum_cnt_reg_t classc_accum_cnt; // [103:88]
    alert_handler_hw2reg_classc_esc_cnt_reg_t classc_esc_cnt; // [87:56]
    alert_handler_hw2reg_classc_state_reg_t classc_state; // [55:53]
    alert_handler_hw2reg_classd_clr_regwen_reg_t classd_clr_regwen; // [52:51]
    alert_handler_hw2reg_classd_accum_cnt_reg_t classd_accum_cnt; // [50:35]
    alert_handler_hw2reg_classd_esc_cnt_reg_t classd_esc_cnt; // [34:3]
    alert_handler_hw2reg_classd_state_reg_t classd_state; // [2:0]
  } alert_handler_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] ALERT_HANDLER_INTR_STATE_OFFSET = 10'h 0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_INTR_ENABLE_OFFSET = 10'h 4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_INTR_TEST_OFFSET = 10'h 8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_PING_TIMER_REGWEN_OFFSET = 10'h c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_PING_TIMEOUT_CYC_SHADOWED_OFFSET = 10'h 10;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_PING_TIMER_EN_SHADOWED_OFFSET = 10'h 14;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_0_OFFSET = 10'h 18;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_1_OFFSET = 10'h 1c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_2_OFFSET = 10'h 20;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_3_OFFSET = 10'h 24;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_4_OFFSET = 10'h 28;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_5_OFFSET = 10'h 2c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_6_OFFSET = 10'h 30;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_7_OFFSET = 10'h 34;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_8_OFFSET = 10'h 38;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_9_OFFSET = 10'h 3c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_10_OFFSET = 10'h 40;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_11_OFFSET = 10'h 44;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_12_OFFSET = 10'h 48;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_13_OFFSET = 10'h 4c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_14_OFFSET = 10'h 50;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_15_OFFSET = 10'h 54;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_16_OFFSET = 10'h 58;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_17_OFFSET = 10'h 5c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_18_OFFSET = 10'h 60;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_19_OFFSET = 10'h 64;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_20_OFFSET = 10'h 68;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_21_OFFSET = 10'h 6c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_22_OFFSET = 10'h 70;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_23_OFFSET = 10'h 74;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_24_OFFSET = 10'h 78;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_25_OFFSET = 10'h 7c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_26_OFFSET = 10'h 80;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_REGWEN_27_OFFSET = 10'h 84;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_0_OFFSET = 10'h 88;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_1_OFFSET = 10'h 8c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_2_OFFSET = 10'h 90;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_3_OFFSET = 10'h 94;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_4_OFFSET = 10'h 98;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_5_OFFSET = 10'h 9c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_6_OFFSET = 10'h a0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_7_OFFSET = 10'h a4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_8_OFFSET = 10'h a8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_9_OFFSET = 10'h ac;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_10_OFFSET = 10'h b0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_11_OFFSET = 10'h b4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_12_OFFSET = 10'h b8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_13_OFFSET = 10'h bc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_14_OFFSET = 10'h c0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_15_OFFSET = 10'h c4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_16_OFFSET = 10'h c8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_17_OFFSET = 10'h cc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_18_OFFSET = 10'h d0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_19_OFFSET = 10'h d4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_20_OFFSET = 10'h d8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_21_OFFSET = 10'h dc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_22_OFFSET = 10'h e0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_23_OFFSET = 10'h e4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_24_OFFSET = 10'h e8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_25_OFFSET = 10'h ec;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_26_OFFSET = 10'h f0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_EN_SHADOWED_27_OFFSET = 10'h f4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_OFFSET = 10'h f8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_1_OFFSET = 10'h fc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_2_OFFSET = 10'h 100;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_3_OFFSET = 10'h 104;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_4_OFFSET = 10'h 108;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_5_OFFSET = 10'h 10c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_6_OFFSET = 10'h 110;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_7_OFFSET = 10'h 114;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_8_OFFSET = 10'h 118;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_9_OFFSET = 10'h 11c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_10_OFFSET = 10'h 120;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_11_OFFSET = 10'h 124;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_12_OFFSET = 10'h 128;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_13_OFFSET = 10'h 12c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_14_OFFSET = 10'h 130;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_15_OFFSET = 10'h 134;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_16_OFFSET = 10'h 138;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_17_OFFSET = 10'h 13c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_18_OFFSET = 10'h 140;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_19_OFFSET = 10'h 144;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_20_OFFSET = 10'h 148;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_21_OFFSET = 10'h 14c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_22_OFFSET = 10'h 150;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_23_OFFSET = 10'h 154;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_24_OFFSET = 10'h 158;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_25_OFFSET = 10'h 15c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_26_OFFSET = 10'h 160;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CLASS_SHADOWED_27_OFFSET = 10'h 164;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_0_OFFSET = 10'h 168;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_1_OFFSET = 10'h 16c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_2_OFFSET = 10'h 170;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_3_OFFSET = 10'h 174;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_4_OFFSET = 10'h 178;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_5_OFFSET = 10'h 17c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_6_OFFSET = 10'h 180;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_7_OFFSET = 10'h 184;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_8_OFFSET = 10'h 188;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_9_OFFSET = 10'h 18c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_10_OFFSET = 10'h 190;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_11_OFFSET = 10'h 194;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_12_OFFSET = 10'h 198;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_13_OFFSET = 10'h 19c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_14_OFFSET = 10'h 1a0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_15_OFFSET = 10'h 1a4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_16_OFFSET = 10'h 1a8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_17_OFFSET = 10'h 1ac;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_18_OFFSET = 10'h 1b0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_19_OFFSET = 10'h 1b4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_20_OFFSET = 10'h 1b8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_21_OFFSET = 10'h 1bc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_22_OFFSET = 10'h 1c0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_23_OFFSET = 10'h 1c4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_24_OFFSET = 10'h 1c8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_25_OFFSET = 10'h 1cc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_26_OFFSET = 10'h 1d0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_ALERT_CAUSE_27_OFFSET = 10'h 1d4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_0_OFFSET = 10'h 1d8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_1_OFFSET = 10'h 1dc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_2_OFFSET = 10'h 1e0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_3_OFFSET = 10'h 1e4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_4_OFFSET = 10'h 1e8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_5_OFFSET = 10'h 1ec;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_REGWEN_6_OFFSET = 10'h 1f0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_OFFSET = 10'h 1f4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_1_OFFSET = 10'h 1f8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_2_OFFSET = 10'h 1fc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_3_OFFSET = 10'h 200;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_4_OFFSET = 10'h 204;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_5_OFFSET = 10'h 208;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_6_OFFSET = 10'h 20c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_OFFSET = 10'h 210;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_1_OFFSET = 10'h 214;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_2_OFFSET = 10'h 218;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_3_OFFSET = 10'h 21c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_4_OFFSET = 10'h 220;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_5_OFFSET = 10'h 224;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_6_OFFSET = 10'h 228;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_0_OFFSET = 10'h 22c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_1_OFFSET = 10'h 230;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_2_OFFSET = 10'h 234;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_3_OFFSET = 10'h 238;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_4_OFFSET = 10'h 23c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_5_OFFSET = 10'h 240;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_LOC_ALERT_CAUSE_6_OFFSET = 10'h 244;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_REGWEN_OFFSET = 10'h 248;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_CTRL_SHADOWED_OFFSET = 10'h 24c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_CLR_REGWEN_OFFSET = 10'h 250;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_CLR_SHADOWED_OFFSET = 10'h 254;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_ACCUM_CNT_OFFSET = 10'h 258;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_ACCUM_THRESH_SHADOWED_OFFSET = 10'h 25c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_TIMEOUT_CYC_SHADOWED_OFFSET = 10'h 260;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_CRASHDUMP_TRIGGER_SHADOWED_OFFSET = 10'h 264;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED_OFFSET = 10'h 268;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_PHASE1_CYC_SHADOWED_OFFSET = 10'h 26c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_PHASE2_CYC_SHADOWED_OFFSET = 10'h 270;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_PHASE3_CYC_SHADOWED_OFFSET = 10'h 274;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_ESC_CNT_OFFSET = 10'h 278;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSA_STATE_OFFSET = 10'h 27c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_REGWEN_OFFSET = 10'h 280;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_CTRL_SHADOWED_OFFSET = 10'h 284;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_CLR_REGWEN_OFFSET = 10'h 288;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_CLR_SHADOWED_OFFSET = 10'h 28c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_ACCUM_CNT_OFFSET = 10'h 290;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_ACCUM_THRESH_SHADOWED_OFFSET = 10'h 294;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_TIMEOUT_CYC_SHADOWED_OFFSET = 10'h 298;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_CRASHDUMP_TRIGGER_SHADOWED_OFFSET = 10'h 29c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_PHASE0_CYC_SHADOWED_OFFSET = 10'h 2a0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_PHASE1_CYC_SHADOWED_OFFSET = 10'h 2a4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_PHASE2_CYC_SHADOWED_OFFSET = 10'h 2a8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_PHASE3_CYC_SHADOWED_OFFSET = 10'h 2ac;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_ESC_CNT_OFFSET = 10'h 2b0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSB_STATE_OFFSET = 10'h 2b4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_REGWEN_OFFSET = 10'h 2b8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_CTRL_SHADOWED_OFFSET = 10'h 2bc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_CLR_REGWEN_OFFSET = 10'h 2c0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_CLR_SHADOWED_OFFSET = 10'h 2c4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_ACCUM_CNT_OFFSET = 10'h 2c8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_ACCUM_THRESH_SHADOWED_OFFSET = 10'h 2cc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_TIMEOUT_CYC_SHADOWED_OFFSET = 10'h 2d0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_CRASHDUMP_TRIGGER_SHADOWED_OFFSET = 10'h 2d4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_PHASE0_CYC_SHADOWED_OFFSET = 10'h 2d8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_PHASE1_CYC_SHADOWED_OFFSET = 10'h 2dc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_PHASE2_CYC_SHADOWED_OFFSET = 10'h 2e0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_PHASE3_CYC_SHADOWED_OFFSET = 10'h 2e4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_ESC_CNT_OFFSET = 10'h 2e8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSC_STATE_OFFSET = 10'h 2ec;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_REGWEN_OFFSET = 10'h 2f0;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_CTRL_SHADOWED_OFFSET = 10'h 2f4;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_CLR_REGWEN_OFFSET = 10'h 2f8;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_CLR_SHADOWED_OFFSET = 10'h 2fc;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_ACCUM_CNT_OFFSET = 10'h 300;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_ACCUM_THRESH_SHADOWED_OFFSET = 10'h 304;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_TIMEOUT_CYC_SHADOWED_OFFSET = 10'h 308;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_CRASHDUMP_TRIGGER_SHADOWED_OFFSET = 10'h 30c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_PHASE0_CYC_SHADOWED_OFFSET = 10'h 310;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_PHASE1_CYC_SHADOWED_OFFSET = 10'h 314;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_PHASE2_CYC_SHADOWED_OFFSET = 10'h 318;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_PHASE3_CYC_SHADOWED_OFFSET = 10'h 31c;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_ESC_CNT_OFFSET = 10'h 320;
  parameter logic [BlockAw-1:0] ALERT_HANDLER_CLASSD_STATE_OFFSET = 10'h 324;

  // Reset values for hwext registers and their fields
  parameter logic [3:0] ALERT_HANDLER_INTR_TEST_RESVAL = 4'h 0;
  parameter logic [0:0] ALERT_HANDLER_INTR_TEST_CLASSA_RESVAL = 1'h 0;
  parameter logic [0:0] ALERT_HANDLER_INTR_TEST_CLASSB_RESVAL = 1'h 0;
  parameter logic [0:0] ALERT_HANDLER_INTR_TEST_CLASSC_RESVAL = 1'h 0;
  parameter logic [0:0] ALERT_HANDLER_INTR_TEST_CLASSD_RESVAL = 1'h 0;
  parameter logic [15:0] ALERT_HANDLER_CLASSA_ACCUM_CNT_RESVAL = 16'h 0;
  parameter logic [31:0] ALERT_HANDLER_CLASSA_ESC_CNT_RESVAL = 32'h 0;
  parameter logic [2:0] ALERT_HANDLER_CLASSA_STATE_RESVAL = 3'h 0;
  parameter logic [15:0] ALERT_HANDLER_CLASSB_ACCUM_CNT_RESVAL = 16'h 0;
  parameter logic [31:0] ALERT_HANDLER_CLASSB_ESC_CNT_RESVAL = 32'h 0;
  parameter logic [2:0] ALERT_HANDLER_CLASSB_STATE_RESVAL = 3'h 0;
  parameter logic [15:0] ALERT_HANDLER_CLASSC_ACCUM_CNT_RESVAL = 16'h 0;
  parameter logic [31:0] ALERT_HANDLER_CLASSC_ESC_CNT_RESVAL = 32'h 0;
  parameter logic [2:0] ALERT_HANDLER_CLASSC_STATE_RESVAL = 3'h 0;
  parameter logic [15:0] ALERT_HANDLER_CLASSD_ACCUM_CNT_RESVAL = 16'h 0;
  parameter logic [31:0] ALERT_HANDLER_CLASSD_ESC_CNT_RESVAL = 32'h 0;
  parameter logic [2:0] ALERT_HANDLER_CLASSD_STATE_RESVAL = 3'h 0;

  // Register index
  typedef enum int {
    ALERT_HANDLER_INTR_STATE,
    ALERT_HANDLER_INTR_ENABLE,
    ALERT_HANDLER_INTR_TEST,
    ALERT_HANDLER_PING_TIMER_REGWEN,
    ALERT_HANDLER_PING_TIMEOUT_CYC_SHADOWED,
    ALERT_HANDLER_PING_TIMER_EN_SHADOWED,
    ALERT_HANDLER_ALERT_REGWEN_0,
    ALERT_HANDLER_ALERT_REGWEN_1,
    ALERT_HANDLER_ALERT_REGWEN_2,
    ALERT_HANDLER_ALERT_REGWEN_3,
    ALERT_HANDLER_ALERT_REGWEN_4,
    ALERT_HANDLER_ALERT_REGWEN_5,
    ALERT_HANDLER_ALERT_REGWEN_6,
    ALERT_HANDLER_ALERT_REGWEN_7,
    ALERT_HANDLER_ALERT_REGWEN_8,
    ALERT_HANDLER_ALERT_REGWEN_9,
    ALERT_HANDLER_ALERT_REGWEN_10,
    ALERT_HANDLER_ALERT_REGWEN_11,
    ALERT_HANDLER_ALERT_REGWEN_12,
    ALERT_HANDLER_ALERT_REGWEN_13,
    ALERT_HANDLER_ALERT_REGWEN_14,
    ALERT_HANDLER_ALERT_REGWEN_15,
    ALERT_HANDLER_ALERT_REGWEN_16,
    ALERT_HANDLER_ALERT_REGWEN_17,
    ALERT_HANDLER_ALERT_REGWEN_18,
    ALERT_HANDLER_ALERT_REGWEN_19,
    ALERT_HANDLER_ALERT_REGWEN_20,
    ALERT_HANDLER_ALERT_REGWEN_21,
    ALERT_HANDLER_ALERT_REGWEN_22,
    ALERT_HANDLER_ALERT_REGWEN_23,
    ALERT_HANDLER_ALERT_REGWEN_24,
    ALERT_HANDLER_ALERT_REGWEN_25,
    ALERT_HANDLER_ALERT_REGWEN_26,
    ALERT_HANDLER_ALERT_REGWEN_27,
    ALERT_HANDLER_ALERT_EN_SHADOWED_0,
    ALERT_HANDLER_ALERT_EN_SHADOWED_1,
    ALERT_HANDLER_ALERT_EN_SHADOWED_2,
    ALERT_HANDLER_ALERT_EN_SHADOWED_3,
    ALERT_HANDLER_ALERT_EN_SHADOWED_4,
    ALERT_HANDLER_ALERT_EN_SHADOWED_5,
    ALERT_HANDLER_ALERT_EN_SHADOWED_6,
    ALERT_HANDLER_ALERT_EN_SHADOWED_7,
    ALERT_HANDLER_ALERT_EN_SHADOWED_8,
    ALERT_HANDLER_ALERT_EN_SHADOWED_9,
    ALERT_HANDLER_ALERT_EN_SHADOWED_10,
    ALERT_HANDLER_ALERT_EN_SHADOWED_11,
    ALERT_HANDLER_ALERT_EN_SHADOWED_12,
    ALERT_HANDLER_ALERT_EN_SHADOWED_13,
    ALERT_HANDLER_ALERT_EN_SHADOWED_14,
    ALERT_HANDLER_ALERT_EN_SHADOWED_15,
    ALERT_HANDLER_ALERT_EN_SHADOWED_16,
    ALERT_HANDLER_ALERT_EN_SHADOWED_17,
    ALERT_HANDLER_ALERT_EN_SHADOWED_18,
    ALERT_HANDLER_ALERT_EN_SHADOWED_19,
    ALERT_HANDLER_ALERT_EN_SHADOWED_20,
    ALERT_HANDLER_ALERT_EN_SHADOWED_21,
    ALERT_HANDLER_ALERT_EN_SHADOWED_22,
    ALERT_HANDLER_ALERT_EN_SHADOWED_23,
    ALERT_HANDLER_ALERT_EN_SHADOWED_24,
    ALERT_HANDLER_ALERT_EN_SHADOWED_25,
    ALERT_HANDLER_ALERT_EN_SHADOWED_26,
    ALERT_HANDLER_ALERT_EN_SHADOWED_27,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_0,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_1,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_2,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_3,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_4,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_5,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_6,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_7,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_8,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_9,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_10,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_11,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_12,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_13,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_14,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_15,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_16,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_17,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_18,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_19,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_20,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_21,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_22,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_23,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_24,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_25,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_26,
    ALERT_HANDLER_ALERT_CLASS_SHADOWED_27,
    ALERT_HANDLER_ALERT_CAUSE_0,
    ALERT_HANDLER_ALERT_CAUSE_1,
    ALERT_HANDLER_ALERT_CAUSE_2,
    ALERT_HANDLER_ALERT_CAUSE_3,
    ALERT_HANDLER_ALERT_CAUSE_4,
    ALERT_HANDLER_ALERT_CAUSE_5,
    ALERT_HANDLER_ALERT_CAUSE_6,
    ALERT_HANDLER_ALERT_CAUSE_7,
    ALERT_HANDLER_ALERT_CAUSE_8,
    ALERT_HANDLER_ALERT_CAUSE_9,
    ALERT_HANDLER_ALERT_CAUSE_10,
    ALERT_HANDLER_ALERT_CAUSE_11,
    ALERT_HANDLER_ALERT_CAUSE_12,
    ALERT_HANDLER_ALERT_CAUSE_13,
    ALERT_HANDLER_ALERT_CAUSE_14,
    ALERT_HANDLER_ALERT_CAUSE_15,
    ALERT_HANDLER_ALERT_CAUSE_16,
    ALERT_HANDLER_ALERT_CAUSE_17,
    ALERT_HANDLER_ALERT_CAUSE_18,
    ALERT_HANDLER_ALERT_CAUSE_19,
    ALERT_HANDLER_ALERT_CAUSE_20,
    ALERT_HANDLER_ALERT_CAUSE_21,
    ALERT_HANDLER_ALERT_CAUSE_22,
    ALERT_HANDLER_ALERT_CAUSE_23,
    ALERT_HANDLER_ALERT_CAUSE_24,
    ALERT_HANDLER_ALERT_CAUSE_25,
    ALERT_HANDLER_ALERT_CAUSE_26,
    ALERT_HANDLER_ALERT_CAUSE_27,
    ALERT_HANDLER_LOC_ALERT_REGWEN_0,
    ALERT_HANDLER_LOC_ALERT_REGWEN_1,
    ALERT_HANDLER_LOC_ALERT_REGWEN_2,
    ALERT_HANDLER_LOC_ALERT_REGWEN_3,
    ALERT_HANDLER_LOC_ALERT_REGWEN_4,
    ALERT_HANDLER_LOC_ALERT_REGWEN_5,
    ALERT_HANDLER_LOC_ALERT_REGWEN_6,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_1,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_2,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_3,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_4,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_5,
    ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_6,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_1,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_2,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_3,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_4,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_5,
    ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_6,
    ALERT_HANDLER_LOC_ALERT_CAUSE_0,
    ALERT_HANDLER_LOC_ALERT_CAUSE_1,
    ALERT_HANDLER_LOC_ALERT_CAUSE_2,
    ALERT_HANDLER_LOC_ALERT_CAUSE_3,
    ALERT_HANDLER_LOC_ALERT_CAUSE_4,
    ALERT_HANDLER_LOC_ALERT_CAUSE_5,
    ALERT_HANDLER_LOC_ALERT_CAUSE_6,
    ALERT_HANDLER_CLASSA_REGWEN,
    ALERT_HANDLER_CLASSA_CTRL_SHADOWED,
    ALERT_HANDLER_CLASSA_CLR_REGWEN,
    ALERT_HANDLER_CLASSA_CLR_SHADOWED,
    ALERT_HANDLER_CLASSA_ACCUM_CNT,
    ALERT_HANDLER_CLASSA_ACCUM_THRESH_SHADOWED,
    ALERT_HANDLER_CLASSA_TIMEOUT_CYC_SHADOWED,
    ALERT_HANDLER_CLASSA_CRASHDUMP_TRIGGER_SHADOWED,
    ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED,
    ALERT_HANDLER_CLASSA_PHASE1_CYC_SHADOWED,
    ALERT_HANDLER_CLASSA_PHASE2_CYC_SHADOWED,
    ALERT_HANDLER_CLASSA_PHASE3_CYC_SHADOWED,
    ALERT_HANDLER_CLASSA_ESC_CNT,
    ALERT_HANDLER_CLASSA_STATE,
    ALERT_HANDLER_CLASSB_REGWEN,
    ALERT_HANDLER_CLASSB_CTRL_SHADOWED,
    ALERT_HANDLER_CLASSB_CLR_REGWEN,
    ALERT_HANDLER_CLASSB_CLR_SHADOWED,
    ALERT_HANDLER_CLASSB_ACCUM_CNT,
    ALERT_HANDLER_CLASSB_ACCUM_THRESH_SHADOWED,
    ALERT_HANDLER_CLASSB_TIMEOUT_CYC_SHADOWED,
    ALERT_HANDLER_CLASSB_CRASHDUMP_TRIGGER_SHADOWED,
    ALERT_HANDLER_CLASSB_PHASE0_CYC_SHADOWED,
    ALERT_HANDLER_CLASSB_PHASE1_CYC_SHADOWED,
    ALERT_HANDLER_CLASSB_PHASE2_CYC_SHADOWED,
    ALERT_HANDLER_CLASSB_PHASE3_CYC_SHADOWED,
    ALERT_HANDLER_CLASSB_ESC_CNT,
    ALERT_HANDLER_CLASSB_STATE,
    ALERT_HANDLER_CLASSC_REGWEN,
    ALERT_HANDLER_CLASSC_CTRL_SHADOWED,
    ALERT_HANDLER_CLASSC_CLR_REGWEN,
    ALERT_HANDLER_CLASSC_CLR_SHADOWED,
    ALERT_HANDLER_CLASSC_ACCUM_CNT,
    ALERT_HANDLER_CLASSC_ACCUM_THRESH_SHADOWED,
    ALERT_HANDLER_CLASSC_TIMEOUT_CYC_SHADOWED,
    ALERT_HANDLER_CLASSC_CRASHDUMP_TRIGGER_SHADOWED,
    ALERT_HANDLER_CLASSC_PHASE0_CYC_SHADOWED,
    ALERT_HANDLER_CLASSC_PHASE1_CYC_SHADOWED,
    ALERT_HANDLER_CLASSC_PHASE2_CYC_SHADOWED,
    ALERT_HANDLER_CLASSC_PHASE3_CYC_SHADOWED,
    ALERT_HANDLER_CLASSC_ESC_CNT,
    ALERT_HANDLER_CLASSC_STATE,
    ALERT_HANDLER_CLASSD_REGWEN,
    ALERT_HANDLER_CLASSD_CTRL_SHADOWED,
    ALERT_HANDLER_CLASSD_CLR_REGWEN,
    ALERT_HANDLER_CLASSD_CLR_SHADOWED,
    ALERT_HANDLER_CLASSD_ACCUM_CNT,
    ALERT_HANDLER_CLASSD_ACCUM_THRESH_SHADOWED,
    ALERT_HANDLER_CLASSD_TIMEOUT_CYC_SHADOWED,
    ALERT_HANDLER_CLASSD_CRASHDUMP_TRIGGER_SHADOWED,
    ALERT_HANDLER_CLASSD_PHASE0_CYC_SHADOWED,
    ALERT_HANDLER_CLASSD_PHASE1_CYC_SHADOWED,
    ALERT_HANDLER_CLASSD_PHASE2_CYC_SHADOWED,
    ALERT_HANDLER_CLASSD_PHASE3_CYC_SHADOWED,
    ALERT_HANDLER_CLASSD_ESC_CNT,
    ALERT_HANDLER_CLASSD_STATE
  } alert_handler_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] ALERT_HANDLER_PERMIT [202] = '{
    4'b 0001, // index[  0] ALERT_HANDLER_INTR_STATE
    4'b 0001, // index[  1] ALERT_HANDLER_INTR_ENABLE
    4'b 0001, // index[  2] ALERT_HANDLER_INTR_TEST
    4'b 0001, // index[  3] ALERT_HANDLER_PING_TIMER_REGWEN
    4'b 0011, // index[  4] ALERT_HANDLER_PING_TIMEOUT_CYC_SHADOWED
    4'b 0001, // index[  5] ALERT_HANDLER_PING_TIMER_EN_SHADOWED
    4'b 0001, // index[  6] ALERT_HANDLER_ALERT_REGWEN_0
    4'b 0001, // index[  7] ALERT_HANDLER_ALERT_REGWEN_1
    4'b 0001, // index[  8] ALERT_HANDLER_ALERT_REGWEN_2
    4'b 0001, // index[  9] ALERT_HANDLER_ALERT_REGWEN_3
    4'b 0001, // index[ 10] ALERT_HANDLER_ALERT_REGWEN_4
    4'b 0001, // index[ 11] ALERT_HANDLER_ALERT_REGWEN_5
    4'b 0001, // index[ 12] ALERT_HANDLER_ALERT_REGWEN_6
    4'b 0001, // index[ 13] ALERT_HANDLER_ALERT_REGWEN_7
    4'b 0001, // index[ 14] ALERT_HANDLER_ALERT_REGWEN_8
    4'b 0001, // index[ 15] ALERT_HANDLER_ALERT_REGWEN_9
    4'b 0001, // index[ 16] ALERT_HANDLER_ALERT_REGWEN_10
    4'b 0001, // index[ 17] ALERT_HANDLER_ALERT_REGWEN_11
    4'b 0001, // index[ 18] ALERT_HANDLER_ALERT_REGWEN_12
    4'b 0001, // index[ 19] ALERT_HANDLER_ALERT_REGWEN_13
    4'b 0001, // index[ 20] ALERT_HANDLER_ALERT_REGWEN_14
    4'b 0001, // index[ 21] ALERT_HANDLER_ALERT_REGWEN_15
    4'b 0001, // index[ 22] ALERT_HANDLER_ALERT_REGWEN_16
    4'b 0001, // index[ 23] ALERT_HANDLER_ALERT_REGWEN_17
    4'b 0001, // index[ 24] ALERT_HANDLER_ALERT_REGWEN_18
    4'b 0001, // index[ 25] ALERT_HANDLER_ALERT_REGWEN_19
    4'b 0001, // index[ 26] ALERT_HANDLER_ALERT_REGWEN_20
    4'b 0001, // index[ 27] ALERT_HANDLER_ALERT_REGWEN_21
    4'b 0001, // index[ 28] ALERT_HANDLER_ALERT_REGWEN_22
    4'b 0001, // index[ 29] ALERT_HANDLER_ALERT_REGWEN_23
    4'b 0001, // index[ 30] ALERT_HANDLER_ALERT_REGWEN_24
    4'b 0001, // index[ 31] ALERT_HANDLER_ALERT_REGWEN_25
    4'b 0001, // index[ 32] ALERT_HANDLER_ALERT_REGWEN_26
    4'b 0001, // index[ 33] ALERT_HANDLER_ALERT_REGWEN_27
    4'b 0001, // index[ 34] ALERT_HANDLER_ALERT_EN_SHADOWED_0
    4'b 0001, // index[ 35] ALERT_HANDLER_ALERT_EN_SHADOWED_1
    4'b 0001, // index[ 36] ALERT_HANDLER_ALERT_EN_SHADOWED_2
    4'b 0001, // index[ 37] ALERT_HANDLER_ALERT_EN_SHADOWED_3
    4'b 0001, // index[ 38] ALERT_HANDLER_ALERT_EN_SHADOWED_4
    4'b 0001, // index[ 39] ALERT_HANDLER_ALERT_EN_SHADOWED_5
    4'b 0001, // index[ 40] ALERT_HANDLER_ALERT_EN_SHADOWED_6
    4'b 0001, // index[ 41] ALERT_HANDLER_ALERT_EN_SHADOWED_7
    4'b 0001, // index[ 42] ALERT_HANDLER_ALERT_EN_SHADOWED_8
    4'b 0001, // index[ 43] ALERT_HANDLER_ALERT_EN_SHADOWED_9
    4'b 0001, // index[ 44] ALERT_HANDLER_ALERT_EN_SHADOWED_10
    4'b 0001, // index[ 45] ALERT_HANDLER_ALERT_EN_SHADOWED_11
    4'b 0001, // index[ 46] ALERT_HANDLER_ALERT_EN_SHADOWED_12
    4'b 0001, // index[ 47] ALERT_HANDLER_ALERT_EN_SHADOWED_13
    4'b 0001, // index[ 48] ALERT_HANDLER_ALERT_EN_SHADOWED_14
    4'b 0001, // index[ 49] ALERT_HANDLER_ALERT_EN_SHADOWED_15
    4'b 0001, // index[ 50] ALERT_HANDLER_ALERT_EN_SHADOWED_16
    4'b 0001, // index[ 51] ALERT_HANDLER_ALERT_EN_SHADOWED_17
    4'b 0001, // index[ 52] ALERT_HANDLER_ALERT_EN_SHADOWED_18
    4'b 0001, // index[ 53] ALERT_HANDLER_ALERT_EN_SHADOWED_19
    4'b 0001, // index[ 54] ALERT_HANDLER_ALERT_EN_SHADOWED_20
    4'b 0001, // index[ 55] ALERT_HANDLER_ALERT_EN_SHADOWED_21
    4'b 0001, // index[ 56] ALERT_HANDLER_ALERT_EN_SHADOWED_22
    4'b 0001, // index[ 57] ALERT_HANDLER_ALERT_EN_SHADOWED_23
    4'b 0001, // index[ 58] ALERT_HANDLER_ALERT_EN_SHADOWED_24
    4'b 0001, // index[ 59] ALERT_HANDLER_ALERT_EN_SHADOWED_25
    4'b 0001, // index[ 60] ALERT_HANDLER_ALERT_EN_SHADOWED_26
    4'b 0001, // index[ 61] ALERT_HANDLER_ALERT_EN_SHADOWED_27
    4'b 0001, // index[ 62] ALERT_HANDLER_ALERT_CLASS_SHADOWED_0
    4'b 0001, // index[ 63] ALERT_HANDLER_ALERT_CLASS_SHADOWED_1
    4'b 0001, // index[ 64] ALERT_HANDLER_ALERT_CLASS_SHADOWED_2
    4'b 0001, // index[ 65] ALERT_HANDLER_ALERT_CLASS_SHADOWED_3
    4'b 0001, // index[ 66] ALERT_HANDLER_ALERT_CLASS_SHADOWED_4
    4'b 0001, // index[ 67] ALERT_HANDLER_ALERT_CLASS_SHADOWED_5
    4'b 0001, // index[ 68] ALERT_HANDLER_ALERT_CLASS_SHADOWED_6
    4'b 0001, // index[ 69] ALERT_HANDLER_ALERT_CLASS_SHADOWED_7
    4'b 0001, // index[ 70] ALERT_HANDLER_ALERT_CLASS_SHADOWED_8
    4'b 0001, // index[ 71] ALERT_HANDLER_ALERT_CLASS_SHADOWED_9
    4'b 0001, // index[ 72] ALERT_HANDLER_ALERT_CLASS_SHADOWED_10
    4'b 0001, // index[ 73] ALERT_HANDLER_ALERT_CLASS_SHADOWED_11
    4'b 0001, // index[ 74] ALERT_HANDLER_ALERT_CLASS_SHADOWED_12
    4'b 0001, // index[ 75] ALERT_HANDLER_ALERT_CLASS_SHADOWED_13
    4'b 0001, // index[ 76] ALERT_HANDLER_ALERT_CLASS_SHADOWED_14
    4'b 0001, // index[ 77] ALERT_HANDLER_ALERT_CLASS_SHADOWED_15
    4'b 0001, // index[ 78] ALERT_HANDLER_ALERT_CLASS_SHADOWED_16
    4'b 0001, // index[ 79] ALERT_HANDLER_ALERT_CLASS_SHADOWED_17
    4'b 0001, // index[ 80] ALERT_HANDLER_ALERT_CLASS_SHADOWED_18
    4'b 0001, // index[ 81] ALERT_HANDLER_ALERT_CLASS_SHADOWED_19
    4'b 0001, // index[ 82] ALERT_HANDLER_ALERT_CLASS_SHADOWED_20
    4'b 0001, // index[ 83] ALERT_HANDLER_ALERT_CLASS_SHADOWED_21
    4'b 0001, // index[ 84] ALERT_HANDLER_ALERT_CLASS_SHADOWED_22
    4'b 0001, // index[ 85] ALERT_HANDLER_ALERT_CLASS_SHADOWED_23
    4'b 0001, // index[ 86] ALERT_HANDLER_ALERT_CLASS_SHADOWED_24
    4'b 0001, // index[ 87] ALERT_HANDLER_ALERT_CLASS_SHADOWED_25
    4'b 0001, // index[ 88] ALERT_HANDLER_ALERT_CLASS_SHADOWED_26
    4'b 0001, // index[ 89] ALERT_HANDLER_ALERT_CLASS_SHADOWED_27
    4'b 0001, // index[ 90] ALERT_HANDLER_ALERT_CAUSE_0
    4'b 0001, // index[ 91] ALERT_HANDLER_ALERT_CAUSE_1
    4'b 0001, // index[ 92] ALERT_HANDLER_ALERT_CAUSE_2
    4'b 0001, // index[ 93] ALERT_HANDLER_ALERT_CAUSE_3
    4'b 0001, // index[ 94] ALERT_HANDLER_ALERT_CAUSE_4
    4'b 0001, // index[ 95] ALERT_HANDLER_ALERT_CAUSE_5
    4'b 0001, // index[ 96] ALERT_HANDLER_ALERT_CAUSE_6
    4'b 0001, // index[ 97] ALERT_HANDLER_ALERT_CAUSE_7
    4'b 0001, // index[ 98] ALERT_HANDLER_ALERT_CAUSE_8
    4'b 0001, // index[ 99] ALERT_HANDLER_ALERT_CAUSE_9
    4'b 0001, // index[100] ALERT_HANDLER_ALERT_CAUSE_10
    4'b 0001, // index[101] ALERT_HANDLER_ALERT_CAUSE_11
    4'b 0001, // index[102] ALERT_HANDLER_ALERT_CAUSE_12
    4'b 0001, // index[103] ALERT_HANDLER_ALERT_CAUSE_13
    4'b 0001, // index[104] ALERT_HANDLER_ALERT_CAUSE_14
    4'b 0001, // index[105] ALERT_HANDLER_ALERT_CAUSE_15
    4'b 0001, // index[106] ALERT_HANDLER_ALERT_CAUSE_16
    4'b 0001, // index[107] ALERT_HANDLER_ALERT_CAUSE_17
    4'b 0001, // index[108] ALERT_HANDLER_ALERT_CAUSE_18
    4'b 0001, // index[109] ALERT_HANDLER_ALERT_CAUSE_19
    4'b 0001, // index[110] ALERT_HANDLER_ALERT_CAUSE_20
    4'b 0001, // index[111] ALERT_HANDLER_ALERT_CAUSE_21
    4'b 0001, // index[112] ALERT_HANDLER_ALERT_CAUSE_22
    4'b 0001, // index[113] ALERT_HANDLER_ALERT_CAUSE_23
    4'b 0001, // index[114] ALERT_HANDLER_ALERT_CAUSE_24
    4'b 0001, // index[115] ALERT_HANDLER_ALERT_CAUSE_25
    4'b 0001, // index[116] ALERT_HANDLER_ALERT_CAUSE_26
    4'b 0001, // index[117] ALERT_HANDLER_ALERT_CAUSE_27
    4'b 0001, // index[118] ALERT_HANDLER_LOC_ALERT_REGWEN_0
    4'b 0001, // index[119] ALERT_HANDLER_LOC_ALERT_REGWEN_1
    4'b 0001, // index[120] ALERT_HANDLER_LOC_ALERT_REGWEN_2
    4'b 0001, // index[121] ALERT_HANDLER_LOC_ALERT_REGWEN_3
    4'b 0001, // index[122] ALERT_HANDLER_LOC_ALERT_REGWEN_4
    4'b 0001, // index[123] ALERT_HANDLER_LOC_ALERT_REGWEN_5
    4'b 0001, // index[124] ALERT_HANDLER_LOC_ALERT_REGWEN_6
    4'b 0001, // index[125] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0
    4'b 0001, // index[126] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_1
    4'b 0001, // index[127] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_2
    4'b 0001, // index[128] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_3
    4'b 0001, // index[129] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_4
    4'b 0001, // index[130] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_5
    4'b 0001, // index[131] ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_6
    4'b 0001, // index[132] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0
    4'b 0001, // index[133] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_1
    4'b 0001, // index[134] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_2
    4'b 0001, // index[135] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_3
    4'b 0001, // index[136] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_4
    4'b 0001, // index[137] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_5
    4'b 0001, // index[138] ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_6
    4'b 0001, // index[139] ALERT_HANDLER_LOC_ALERT_CAUSE_0
    4'b 0001, // index[140] ALERT_HANDLER_LOC_ALERT_CAUSE_1
    4'b 0001, // index[141] ALERT_HANDLER_LOC_ALERT_CAUSE_2
    4'b 0001, // index[142] ALERT_HANDLER_LOC_ALERT_CAUSE_3
    4'b 0001, // index[143] ALERT_HANDLER_LOC_ALERT_CAUSE_4
    4'b 0001, // index[144] ALERT_HANDLER_LOC_ALERT_CAUSE_5
    4'b 0001, // index[145] ALERT_HANDLER_LOC_ALERT_CAUSE_6
    4'b 0001, // index[146] ALERT_HANDLER_CLASSA_REGWEN
    4'b 0011, // index[147] ALERT_HANDLER_CLASSA_CTRL_SHADOWED
    4'b 0001, // index[148] ALERT_HANDLER_CLASSA_CLR_REGWEN
    4'b 0001, // index[149] ALERT_HANDLER_CLASSA_CLR_SHADOWED
    4'b 0011, // index[150] ALERT_HANDLER_CLASSA_ACCUM_CNT
    4'b 0011, // index[151] ALERT_HANDLER_CLASSA_ACCUM_THRESH_SHADOWED
    4'b 1111, // index[152] ALERT_HANDLER_CLASSA_TIMEOUT_CYC_SHADOWED
    4'b 0001, // index[153] ALERT_HANDLER_CLASSA_CRASHDUMP_TRIGGER_SHADOWED
    4'b 1111, // index[154] ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED
    4'b 1111, // index[155] ALERT_HANDLER_CLASSA_PHASE1_CYC_SHADOWED
    4'b 1111, // index[156] ALERT_HANDLER_CLASSA_PHASE2_CYC_SHADOWED
    4'b 1111, // index[157] ALERT_HANDLER_CLASSA_PHASE3_CYC_SHADOWED
    4'b 1111, // index[158] ALERT_HANDLER_CLASSA_ESC_CNT
    4'b 0001, // index[159] ALERT_HANDLER_CLASSA_STATE
    4'b 0001, // index[160] ALERT_HANDLER_CLASSB_REGWEN
    4'b 0011, // index[161] ALERT_HANDLER_CLASSB_CTRL_SHADOWED
    4'b 0001, // index[162] ALERT_HANDLER_CLASSB_CLR_REGWEN
    4'b 0001, // index[163] ALERT_HANDLER_CLASSB_CLR_SHADOWED
    4'b 0011, // index[164] ALERT_HANDLER_CLASSB_ACCUM_CNT
    4'b 0011, // index[165] ALERT_HANDLER_CLASSB_ACCUM_THRESH_SHADOWED
    4'b 1111, // index[166] ALERT_HANDLER_CLASSB_TIMEOUT_CYC_SHADOWED
    4'b 0001, // index[167] ALERT_HANDLER_CLASSB_CRASHDUMP_TRIGGER_SHADOWED
    4'b 1111, // index[168] ALERT_HANDLER_CLASSB_PHASE0_CYC_SHADOWED
    4'b 1111, // index[169] ALERT_HANDLER_CLASSB_PHASE1_CYC_SHADOWED
    4'b 1111, // index[170] ALERT_HANDLER_CLASSB_PHASE2_CYC_SHADOWED
    4'b 1111, // index[171] ALERT_HANDLER_CLASSB_PHASE3_CYC_SHADOWED
    4'b 1111, // index[172] ALERT_HANDLER_CLASSB_ESC_CNT
    4'b 0001, // index[173] ALERT_HANDLER_CLASSB_STATE
    4'b 0001, // index[174] ALERT_HANDLER_CLASSC_REGWEN
    4'b 0011, // index[175] ALERT_HANDLER_CLASSC_CTRL_SHADOWED
    4'b 0001, // index[176] ALERT_HANDLER_CLASSC_CLR_REGWEN
    4'b 0001, // index[177] ALERT_HANDLER_CLASSC_CLR_SHADOWED
    4'b 0011, // index[178] ALERT_HANDLER_CLASSC_ACCUM_CNT
    4'b 0011, // index[179] ALERT_HANDLER_CLASSC_ACCUM_THRESH_SHADOWED
    4'b 1111, // index[180] ALERT_HANDLER_CLASSC_TIMEOUT_CYC_SHADOWED
    4'b 0001, // index[181] ALERT_HANDLER_CLASSC_CRASHDUMP_TRIGGER_SHADOWED
    4'b 1111, // index[182] ALERT_HANDLER_CLASSC_PHASE0_CYC_SHADOWED
    4'b 1111, // index[183] ALERT_HANDLER_CLASSC_PHASE1_CYC_SHADOWED
    4'b 1111, // index[184] ALERT_HANDLER_CLASSC_PHASE2_CYC_SHADOWED
    4'b 1111, // index[185] ALERT_HANDLER_CLASSC_PHASE3_CYC_SHADOWED
    4'b 1111, // index[186] ALERT_HANDLER_CLASSC_ESC_CNT
    4'b 0001, // index[187] ALERT_HANDLER_CLASSC_STATE
    4'b 0001, // index[188] ALERT_HANDLER_CLASSD_REGWEN
    4'b 0011, // index[189] ALERT_HANDLER_CLASSD_CTRL_SHADOWED
    4'b 0001, // index[190] ALERT_HANDLER_CLASSD_CLR_REGWEN
    4'b 0001, // index[191] ALERT_HANDLER_CLASSD_CLR_SHADOWED
    4'b 0011, // index[192] ALERT_HANDLER_CLASSD_ACCUM_CNT
    4'b 0011, // index[193] ALERT_HANDLER_CLASSD_ACCUM_THRESH_SHADOWED
    4'b 1111, // index[194] ALERT_HANDLER_CLASSD_TIMEOUT_CYC_SHADOWED
    4'b 0001, // index[195] ALERT_HANDLER_CLASSD_CRASHDUMP_TRIGGER_SHADOWED
    4'b 1111, // index[196] ALERT_HANDLER_CLASSD_PHASE0_CYC_SHADOWED
    4'b 1111, // index[197] ALERT_HANDLER_CLASSD_PHASE1_CYC_SHADOWED
    4'b 1111, // index[198] ALERT_HANDLER_CLASSD_PHASE2_CYC_SHADOWED
    4'b 1111, // index[199] ALERT_HANDLER_CLASSD_PHASE3_CYC_SHADOWED
    4'b 1111, // index[200] ALERT_HANDLER_CLASSD_ESC_CNT
    4'b 0001  // index[201] ALERT_HANDLER_CLASSD_STATE
  };

endpackage
