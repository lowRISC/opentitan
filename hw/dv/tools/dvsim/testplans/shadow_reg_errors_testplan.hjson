// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  testpoints: [
    {
      // this testplan should be imported by all IPs containing shadowed CSRs
      name: shadow_reg_errors
      desc: '''Verify shadowed registers' update and storage errors.

            For all shadow registers in the DUT:
            - Randomly pick a shadowed register.
            - Write it twice with different values, verify that the update error alert is triggered
              and the register value remains unchanged.
            - Write it once and read it back to clear the staged value.
            - Then write it twice with the same new value (but different from the previous step).
            - Read it back to verify the new value and ensure that the update error alert did not
              trigger.
            - Backdoor write to shadowed or committed flops to create a storage fatal alert.
            - Check if fatal alert continuously fires until reset.
            - Verify that all other frontdoor write attempts are blocked during the storage error.
            - Reset the DUT.
            - Read all CSRs to ensure the DUT is properly reset.
            - Repeat the above steps a bunch of times.
            '''
      milestone: V1
      tests: ["{name}_shadow_reg_errors"]
    }
  ]
}
