// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
{
  flow:             formal
  formal_root:      "{proj_root}/hw/formal"
  flow_makefile:    "{formal_root}/tools/dvsim/formal.mk"

  import_cfgs:      [// common server configuration for results upload
                     "{proj_root}/hw/data/common_project_cfg.hjson",
                     "{formal_root}/tools/{tool}/{tool}.hjson"]

  tool:             "jaspergold"

  // Default directory structure for the output
  build_dir:        "{scratch_path}/{build_mode}"
  build_log:        "{build_dir}/{sub_flow}.log"

  // we rely on Fusesoc to generate the filelist for formal
  sv_flist_gen_cmd:  fusesoc

  // TODO: switch the tool to formal once the corresponding edalize backend is avaiable

  fusesoc_target:    formal
  sv_flist_gen_opts: ["--cores-root {proj_root}",
                      "run",
                       "{sv_flist_gen_flags}",
                      "--tool=icarus",
                      "--target={fusesoc_target}",
                      "--build-root={build_dir}",
                      "--setup {fusesoc_core}"]
  sv_flist_gen_dir:  "{build_dir}/{fusesoc_target}-icarus"
  sv_flist_gen_flags: ["--flag=fileset_{design_level}"]

  report_cmd:  "python3 {formal_root}/tools/{tool}/parse-formal-report.py"
  report_opts: ["--logpath={build_log}",
                "--reppath={build_dir}/results.hjson",
                "--cov={cov}",
                "--dut={dut}"]

  // Common pass or fail patterns.
  build_fail_patterns: [// FuseSoC build error
                        "^ERROR:.*$"]

  defines: ""
  bbox_cmd: ""

  // Vars that need to exported to the env
  exports: [
    { DUT_TOP:     "{dut}" },
    { COV:         "{cov}" },
    { sub_flow:    "{sub_flow}"},
    { FPV_DEFINES: "{defines}"},
    { BBOX_CMD:    "'{bbox_cmd}'"},
  ]

  overrides: [
    // Add formal sub_flow to the scratch path
    {
      name:  scratch_path
      value: "{scratch_base_path}/{name}-{flow}-{sub_flow}-{tool}"
    }
  ]
}
