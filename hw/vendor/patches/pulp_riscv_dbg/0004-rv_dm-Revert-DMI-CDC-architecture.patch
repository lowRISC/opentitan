From 2af16e14a7716591adab22f75502ef38faa02d86 Mon Sep 17 00:00:00 2001
From: Michael Schaffner <msf@opentitan.org>
Date: Wed, 10 May 2023 23:58:32 -0700
Subject: [PATCH] [rv_dm] Revert DMI CDC architecture

Signed-off-by: Michael Schaffner <msf@opentitan.org>
---
 src/dmi_cdc.sv | 63 +++++++++++++------------
 1 file changed, 33 insertions(+), 30 deletions(-)

diff --git a/src/dmi_cdc.sv b/src/dmi_cdc.sv
index ec7a755b2..debb070cc 100644
--- a/src/dmi_cdc.sv
+++ b/src/dmi_cdc.sv
@@ -83,40 +83,43 @@ module dmi_cdc (
     .clk_o(combined_rstn)
   );
 
-  prim_fifo_async_simple #(
-    .Width($bits(dm::dmi_req_t)),
-    // Use the RZ protocol so that the two sides can be reset independently without getting
-    // out of sync due to EVEN/ODD states.
-    .EnRzHs(1)
+
+  prim_fifo_async #(
+    .Width       ( $bits(dm::dmi_req_t) ),
+    .Depth       ( 1 )
   ) i_cdc_req (
-    .clk_wr_i (tck_i),
-    .rst_wr_ni(trst_ni),
-    .wvalid_i (jtag_dmi_valid_i),
-    .wready_o (jtag_dmi_ready_o),
-    .wdata_i  (jtag_dmi_req_i),
-    .clk_rd_i (clk_i),
-    .rst_rd_ni(combined_rstn),
-    .rvalid_o (core_dmi_valid_o),
-    .rready_i (core_dmi_ready_i),
-    .rdata_o  (core_dmi_req_o)
+    .clk_wr_i    ( tck_i            ),
+    .rst_wr_ni   ( trst_ni          ),
+    .wvalid_i    ( jtag_dmi_valid_i ),
+    .wready_o    ( jtag_dmi_ready_o ), // wrclk
+    .wdata_i     ( jtag_dmi_req_i   ),
+    .wdepth_o    (                  ),
+
+    .clk_rd_i    ( clk_i            ),
+    .rst_rd_ni   ( combined_rstn    ),
+    .rvalid_o    ( core_dmi_valid_o ),
+    .rready_i    ( core_dmi_ready_i ),
+    .rdata_o     ( core_dmi_req_o   ),
+    .rdepth_o    (                  )
   );
 
-  prim_fifo_async_simple #(
-    .Width($bits(dm::dmi_resp_t)),
-    // Use the RZ protocol so that the two sides can be reset independently without getting
-    // out of sync due to EVEN/ODD states.
-    .EnRzHs(1)
+  prim_fifo_async #(
+    .Width       ( $bits(dm::dmi_resp_t) ),
+    .Depth       ( 1 )
   ) i_cdc_resp (
-    .clk_wr_i (clk_i),
-    .rst_wr_ni(combined_rstn),
-    .wvalid_i (core_dmi_valid_i),
-    .wready_o (core_dmi_ready_o),
-    .wdata_i  (core_dmi_resp_i),
-    .clk_rd_i (tck_i),
-    .rst_rd_ni(trst_ni),
-    .rvalid_o (jtag_dmi_valid_o),
-    .rready_i (jtag_dmi_ready_i),
-    .rdata_o  (jtag_dmi_resp_o)
+    .clk_wr_i    ( clk_i            ),
+    .rst_wr_ni   ( rst_ni           ),
+    .wvalid_i    ( core_dmi_valid_i ),
+    .wready_o    ( core_dmi_ready_o ), // wrclk
+    .wdata_i     ( core_dmi_resp_i  ),
+    .wdepth_o    (                  ),
+
+    .clk_rd_i    ( tck_i            ),
+    .rst_rd_ni   ( combined_rstn    ),
+    .rvalid_o    ( jtag_dmi_valid_o ),
+    .rready_i    ( jtag_dmi_ready_i ),
+    .rdata_o     ( jtag_dmi_resp_o  ),
+    .rdepth_o    (                  )
   );
 
   assign core_dmi_rst_no = combined_rstn;
-- 
2.34.1

