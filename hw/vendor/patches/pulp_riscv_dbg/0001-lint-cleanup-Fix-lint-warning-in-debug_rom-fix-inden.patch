From dc97d912f2ef11e88dec383be65ea07f36a6514c Mon Sep 17 00:00:00 2001
From: Michael Schaffner <msf@google.com>
Date: Thu, 17 Oct 2019 19:01:49 -0700
Subject: [PATCH 01/11] [lint/cleanup] Fix lint warning in debug_rom, fix
 indentation

---
 debug_rom/debug_rom.sv | 75 +++++++++++++++++++++++-------------------
 debug_rom/gen_rom.py   | 39 +++++++++++++---------
 2 files changed, 64 insertions(+), 50 deletions(-)

diff --git a/debug_rom/debug_rom.sv b/debug_rom/debug_rom.sv
index 1c6727c..d8e8913 100644
--- a/debug_rom/debug_rom.sv
+++ b/debug_rom/debug_rom.sv
@@ -15,44 +15,51 @@
 
 // Auto-generated code
 module debug_rom (
-   input  logic         clk_i,
-   input  logic         req_i,
-   input  logic [63:0]  addr_i,
-   output logic [63:0]  rdata_o
+  input  logic         clk_i,
+  input  logic         req_i,
+  input  logic [63:0]  addr_i,
+  output logic [63:0]  rdata_o
 );
-    localparam int RomSize = 19;
 
-    const logic [RomSize-1:0][63:0] mem = {
-        64'h00000000_7b200073,
-        64'h7b302573_7b202473,
-        64'h10852423_f1402473,
-        64'ha85ff06f_7b302573,
-        64'h7b202473_10052223,
-        64'h00100073_7b302573,
-        64'h10052623_00c51513,
-        64'h00c55513_00000517,
-        64'h7b351073_fd5ff06f,
-        64'hfa041ce3_00247413,
-        64'h40044403_00a40433,
-        64'hf1402473_02041c63,
-        64'h00147413_40044403,
-        64'h00a40433_10852023,
-        64'hf1402473_00c51513,
-        64'h00c55513_00000517,
-        64'h7b351073_7b241073,
-        64'h0ff0000f_04c0006f,
-        64'h07c0006f_00c0006f
-    };
+  localparam int RomSize = 19;
 
-    logic [$clog2(RomSize)-1:0] addr_q;
+  const logic [RomSize-1:0][63:0] mem = {
+    64'h00000000_7b200073,
+    64'h7b302573_7b202473,
+    64'h10852423_f1402473,
+    64'ha85ff06f_7b302573,
+    64'h7b202473_10052223,
+    64'h00100073_7b302573,
+    64'h10052623_00c51513,
+    64'h00c55513_00000517,
+    64'h7b351073_fd5ff06f,
+    64'hfa041ce3_00247413,
+    64'h40044403_00a40433,
+    64'hf1402473_02041c63,
+    64'h00147413_40044403,
+    64'h00a40433_10852023,
+    64'hf1402473_00c51513,
+    64'h00c55513_00000517,
+    64'h7b351073_7b241073,
+    64'h0ff0000f_04c0006f,
+    64'h07c0006f_00c0006f
+  };
 
-    always_ff @(posedge clk_i) begin
-        if (req_i) begin
-            addr_q <= addr_i[$clog2(RomSize)-1+3:3];
-        end
+  logic [$clog2(RomSize)-1:0] addr_q;
+
+  always_ff @(posedge clk_i) begin
+    if (req_i) begin
+      addr_q <= addr_i[$clog2(RomSize)-1+3:3];
+    end
+  end
+
+  // this prevents spurious Xes from propagating into
+  // the speculative fetch stage of the core
+  always_comb begin : p_outmux
+    rdata_o = '0;
+    if (addr_q < RomSize) begin
+        rdata_o = mem[addr_q];
     end
+  end
 
-    // this prevents spurious Xes from propagating into
-    // the speculative fetch stage of the core
-    assign rdata_o = (addr_q < RomSize) ? mem[addr_q] : '0;
 endmodule
diff --git a/debug_rom/gen_rom.py b/debug_rom/gen_rom.py
index bb2abc3..e701c52 100755
--- a/debug_rom/gen_rom.py
+++ b/debug_rom/gen_rom.py
@@ -42,28 +42,35 @@ license = """\
 
 module = """\
 module $filename (
-   input  logic         clk_i,
-   input  logic         req_i,
-   input  logic [63:0]  addr_i,
-   output logic [63:0]  rdata_o
+  input  logic         clk_i,
+  input  logic         req_i,
+  input  logic [63:0]  addr_i,
+  output logic [63:0]  rdata_o
 );
-    localparam int RomSize = $size;
 
-    const logic [RomSize-1:0][63:0] mem = {
+  localparam int RomSize = $size;
+
+  const logic [RomSize-1:0][63:0] mem = {
 $content
-    };
+  };
 
-    logic [$$clog2(RomSize)-1:0] addr_q;
+  logic [$$clog2(RomSize)-1:0] addr_q;
 
-    always_ff @(posedge clk_i) begin
-        if (req_i) begin
-            addr_q <= addr_i[$$clog2(RomSize)-1+3:3];
-        end
+  always_ff @(posedge clk_i) begin
+    if (req_i) begin
+      addr_q <= addr_i[$$clog2(RomSize)-1+3:3];
+    end
+  end
+
+  // this prevents spurious Xes from propagating into
+  // the speculative fetch stage of the core
+  always_comb begin : p_outmux
+    rdata_o = '0;
+    if (addr_q < RomSize) begin
+        rdata_o = mem[addr_q];
     end
+  end
 
-    // this prevents spurious Xes from propagating into
-    // the speculative fetch stage of the core
-    assign rdata_o = (addr_q < RomSize) ? mem[addr_q] : '0;
 endmodule
 """
 
@@ -116,7 +123,7 @@ with open(filename + ".sv", "w") as f:
     rom_str = ""
     # process in junks of 64 bit (8 byte)
     for i in reversed(range(int(len(rom)/8))):
-        rom_str += "        64'h" + "".join(rom[i*8+4:i*8+8][::-1]) + "_" + "".join(rom[i*8:i*8+4][::-1]) + ",\n"
+        rom_str += "    64'h" + "".join(rom[i*8+4:i*8+8][::-1]) + "_" + "".join(rom[i*8:i*8+4][::-1]) + ",\n"
 
     # remove the trailing comma
     rom_str = rom_str[:-2]
-- 
2.17.1

