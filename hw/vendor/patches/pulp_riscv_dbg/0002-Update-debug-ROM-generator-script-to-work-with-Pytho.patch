From 6fc79ea206486e5d9a3ac460afe5d5cfa29251c0 Mon Sep 17 00:00:00 2001
From: Michael Schaffner <msf@google.com>
Date: Tue, 25 Oct 2022 19:38:16 -0700
Subject: [PATCH 2/4] Update debug ROM generator script to work with Python3

Signed-off-by: Michael Schaffner <msf@google.com>

diff --git a/debug_rom/Makefile b/debug_rom/Makefile
index b23370a..931e253 100644
--- a/debug_rom/Makefile
+++ b/debug_rom/Makefile
@@ -5,7 +5,7 @@ debug_rom = debug_rom.sv debug_rom_one_scratch.sv
 GCC?=riscv64-unknown-elf-gcc
 OBJCOPY?=riscv64-unknown-elf-objcopy
 OBJDUMP?=riscv64-unknown-elf-objdump
-PYTHON?=python
+PYTHON?=python3
 
 all: $(debug_rom)
 
diff --git a/debug_rom/debug_rom.sv b/debug_rom/debug_rom.sv
index 407157e..a045f4c 100644
--- a/debug_rom/debug_rom.sv
+++ b/debug_rom/debug_rom.sv
@@ -60,7 +60,7 @@ module debug_rom (
   always_comb begin : p_outmux
     rdata_o = '0;
     if (addr_q < $clog2(RomSize)'(RomSize)) begin
-        rdata_o = mem[addr_q];
+      rdata_o = mem[addr_q];
     end
   end
 
diff --git a/debug_rom/debug_rom_one_scratch.sv b/debug_rom/debug_rom_one_scratch.sv
index 1fe3850..98efb7c 100644
--- a/debug_rom/debug_rom_one_scratch.sv
+++ b/debug_rom/debug_rom_one_scratch.sv
@@ -54,7 +54,7 @@ module debug_rom_one_scratch (
   always_comb begin : p_outmux
     rdata_o = '0;
     if (addr_q < $clog2(RomSize)'(RomSize)) begin
-        rdata_o = mem[addr_q];
+      rdata_o = mem[addr_q];
     end
   end
 
diff --git a/debug_rom/gen_rom.py b/debug_rom/gen_rom.py
index b8cb60b..d78ce46 100755
--- a/debug_rom/gen_rom.py
+++ b/debug_rom/gen_rom.py
@@ -68,7 +68,7 @@ $content
   always_comb begin : p_outmux
     rdata_o = '0;
     if (addr_q < $$clog2(RomSize)'(RomSize)) begin
-        rdata_o = mem[addr_q];
+      rdata_o = mem[addr_q];
     end
   end
 
@@ -88,9 +88,8 @@ $content
 def read_bin():
 
     with open(filename + ".img", 'rb') as f:
-        rom = binascii.hexlify(f.read())
-        rom = map(''.join, zip(rom[::2], rom[1::2]))
-
+        rom = bytes.hex(f.read())
+        rom = list(map(''.join, zip(rom[::2], rom[1::2])))
 
     # align to 64 bit
     align = (int((len(rom) + 7) / 8 )) * 8;
