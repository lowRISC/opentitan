# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0
#
# waiver file for top_darjeeling

# dedicated reset drivers / muxes
set_reset_drivers prim_clock_mux2 prim_flop_2sync prim_flop
set_clock_drivers prim_clock_buf prim_clock_mux2

# TODO #25411: remove these waivers later when the USB clock was removed from the integrated system
# in a clean way. Right now there are some dangling signals that we have to keep in order
# to not disrupt the RTL structure and associated DV.
waive -rules {HIER_BRANCH_NOT_READ INPUT_NOT_READ} -location {xbar_main.sv} \
      -regexp {'(clk_usb_i|rst_usb_ni)' is not read from in module 'xbar_main'} \
      -comment "Temporary waiver for dangling USB clocks and resets."

# All leaf resets have a reset multiplex
waive -rules RESET_MUX -location {top_darjeeling.sv} -regexp {Asynchronous reset .*rstmgr_aon_resets\.rst.* is driven by a multiplexer} \
      -comment "This is dedicated reset infrastructure, and hence permissible"

# scan reset is a legal asynchronous reset
waive -rules RESET_USE -location {top_darjeeling.sv} -regexp {'scan_rst_ni' is connected to .* port 'scan_rst_ni', and used as an asynchronous reset or set 'rst_.*ni' at} \
      -comment "Scan reset is a legal asynchronous reset"

# TODO: Remove waiver when #25410 is resolved
waive -rules {HIER_BRANCH_NOT_READ} -location {pinmux.sv} \
      -msg {Net 'rst_sys_ni' is not read from in module 'pinmux'} \
      -comment "This signal is unused but cannot yet be gated in ipgen"

# TODO: Remove waiver when #25410 is resolved
waive -rules {HIER_BRANCH_NOT_READ} -location {pinmux.sv} \
      -msg {Net 'scanmode_i' is not read from in module 'pinmux'} \
      -comment "This signal is unused but cannot yet be gated in ipgen"

waive -rules INPUT_NOT_READ -location {pinmux.sv} -regexp {Input port '(rst_sys_ni|scanmode_i)' is not read from} \
      -comment "This signal is unused but cannot yet be gated in ipgen."

waive -rules CLOCK_MUX -location {clkmgr.sv top_darjeeling.sv} -regexp {.*clk_io_div.* is driven by a multiplexer here} \
      -comment "Divided clocks go through prim_clock_div, which use muxes for scan bypass and clock step down"

waive -rules CLOCK_MUX -location {top_darjeeling.sv} -regexp {Clock 'spi_device_passthrough_req.sck' reaches a multiplexer here, used as a clock} \
      -comment "In passthrough mode, spi_host muxes 'spi_device_passthrough_req.sck' to the `cio_sck_o` output."

# Most SAME_NAME_TYPE issues have been fixed. There are however some that overlap due to similar terminology.
# Since these functions / parameters / signals live in different scopes, this is acceptable, and we can waive them.
waive -rules SAME_NAME_TYPE -location {spi_device.sv rstmgr_pkg.sv} -regexp {'spi_device' is used as a (module|reg) here, and as a (reg|module) at } \
      -comment {This is acceptable, since these are used in different hierarchies.}
waive -rules SAME_NAME_TYPE -location {tlul_socket_m1.sv otbn_pkg.sv} -regexp {'M' is used as a (parameter|reg) here, and as a (reg|parameter) at} \
      -comment {This is acceptable, since these are used in different hierarchies.}
waive -rules SAME_NAME_TYPE -location {prim_trivium.sv prim_xoshiro256pp.sv} -regexp {'state_update' is used as a (reg|function) here, and as a (function|reg) at} \
      -comment {This is acceptable, since these are used in different hierarchies.}
