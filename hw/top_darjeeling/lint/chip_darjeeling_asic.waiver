# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0
#
# waiver file for chip_darjeeling_asic

# TODO: remove these waivers later when the USB clock was removed from the integrated system
# in a clean way. Right now there are some dangling signals that we have to keep in order
# to not disrupt the RTL structure and associated DV.
waive -rules {HIER_BRANCH_NOT_READ INPUT_NOT_READ} -location {xbar_main.sv} \
      -regexp {'(clk_usb_i|rst_usb_ni)' is not read from in module 'xbar_main'} \
      -comment "Temporary waiver for dangling USB clocks and resets."

waive -rules {MULTI_DRIVEN} -location {chip_darjeeling_asic.sv} -regexp {'(IOA2|IOA3)' has 2 drivers, also driven at} \
      -comment "These two pads are shorted to AST, hence this multiple driver warning is OK."

waive -rules {COMBO_LOOP} -location {chip_darjeeling_asic.sv} \
      -regexp {port 'u_passthrough.host_s_i.*' driven in module 'spi_device'} \
      -comment "In the passthrough mode, SPI 4 lines are connected from pads to pads."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'mio_in_raw[11]' is driven by instance 'u_padring' of module 'padring', and used as a clock} \
      -comment "This is due to the external clock input pin."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'dio_in[42]' is driven by instance 'u_padring' of module 'padring', and used as a clock} \
      -comment "This is the SPI SCK."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'dio_in[43]' is driven by instance 'u_padring' of module 'padring', and used as a clock} \
      -comment "The SPI CSB acts as a clock in some cases."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'manual_in_jtag_tck' is driven by instance 'u_padring' of module 'padring', and used as a clock} \
      -comment "This is due to the JTAG TCK clock."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'mio_in_raw[11]' driven in module 'padring' by port 'gen_mio_pads[11].u_mio_pad.in_raw_o' at padring} \
      -comment "This is due to the external clock input pin."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'in_raw_o' driven in module 'prim_pad_wrapper' by port 'gen_.*.u_impl_.*.in_raw_o' at prim_pad_wrapper} \
      -comment "This is due to the external clock input pin."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'in_raw_o' driven in module 'prim_.*_pad_wrapper' by port} \
      -comment "This is due to the external clock input pin."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'ast_base_clks.clk_io' is driven by instance 'u_ast' of module 'ast', and used as a clock} \
      -comment "This is a clock source."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'clk_src_io_o' driven in module 'ast' by port 'u_ast_dft.clk_src_io_o' at ast} \
      -comment "This is a clock source."

waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'clk_src_io_o' driven in module 'ast_dft' at ast_dft} \
      -comment "This is a clock source."

waive -rules {CLOCK_USE} -location {chip_darjeeling_asic.sv} \
      -msg {'mio_in_raw[11]' is used for some other purpose, and as clock 'clk_ast_ext_i' at ast_dft} \
      -comment "This is due to the external clock input pin."

waive -rules {RESET_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'scan_rst_n' is driven by instance 'u_ast' of module 'ast', and used as an asynchronous reset} \
      -comment "This is a valid reset signal."

waive -rules {RESET_DRIVER} -location {chip_darjeeling_asic.sv} \
      -msg {'scan_reset_no' driven in module 'ast' at ast} \
      -comment "This is a valid reset signal."

waive -rules {RESET_USE} -location {chip_darjeeling_asic.sv} \
      -msg {'scan_rst_n' is connected to 'tlul_jtag_dtm' port} \
      -comment "This is a valid reset signal."

waive -rules {RESET_DRIVER} -location {ast.sv} \
      -msg {'rst_sys_clk_n' is driven here, and used as an asynchronous reset 'rst_ni' at prim_generic_flop.sv} \
      -comment "This is a valid reset signal."

waive -rules {RESET_DRIVER} -location {ast.sv} \
      -msg {'rst_io_clk_n' is driven here, and used as an asynchronous reset 'rst_ni' at prim_generic_flop.sv} \
      -comment "This is a valid reset signal."

# Combo loops through uart loopback can be ignored
waive -rules {COMBO_LOOP} -location {chip_darjeeling_asic.sv} -regexp {'tx' driven in module 'uart_core' by 'rx' at uart_core.sv} \
      -comment "there is technically a loopback path through uart, however RX / TX should never be configured to the same pin"

# External clock
waive -rules {CLOCK_DRIVER} -location {chip_darjeeling_asic.sv}  -regexp {'(attr_padring_o|mio_attr)\[11\].pull_select' driven in module} \
      -comment "MioPadMio11 at index 11 may serve as an external clock input, hence the warnings"

waive -rules {CLOCK_USE} -location {pinmux.sv}  -msg {'hw2reg.mio_pad_attr[11].pull_select.d' is connected to 'pinmux_reg_top'} \
      -comment "MioPadMio11 at index 11 may serve as an external clock input, hence the warnings"

waive -rules {CLOCK_USE} -location {pinmux.sv}  -regexp {'dio_wkup_mux\[(42|43)\]' is used for some other purpose, and as clock} \
      -comment "DioSpiDeviceSck and DioSpiDeviceCsb at indices 42 and 43 both can act as clocks"

waive -rules {CLOCK_USE} -location {chip_darjeeling_asic.sv} -msg {'sck_monitor' is connected to 'ast' port 'sns_spi_ext_clk_i', and used as a clock 'clk_src_i' at prim_pulse_sync} \
      -comment "This is a a clock signal that is fed back into AST."

waive -rules {CLOCK_USE} -location {chip_darjeeling_asic.sv} -regexp {'clkmgr_aon_clocks..*' is connected to 'ast' port 'sns_clks_i..*', and used as a clock} \
      -comment "This is a clock struct that is fed back into AST."

waive -rules {CLOCK_USE} -location {chip_darjeeling_asic.sv}  -msg {'mio_in_raw[11]' is used for some other purpose, and as clock} \
      -comment "MioPadMio11 at index 11 may serve as an external clock input, hence the warnings"

waive -rules {CLOCK_USE} -location {prim_generic_pad_wrapper.sv}  -msg {'in_raw_o' is used for some other purpose, and as clock 'clk_ast_ext_scn'} \
      -comment "This warning pops up due to clock signals going through some of the pads"

waive -rules {CLOCK_USE} -location {prim_generic_pad_wrapper.sv}  -msg {'gen_bidir.out' is used for some other purpose, and as clock 'clk_ast_ext_scn'} \
      -comment "This warning pops up due to clock signals going through some of the pads"

waive -rules {INV_CLOCK} -location {prim_generic_pad_wrapper.sv}  -msg {'gen_bidir.out' is inverted, used as clock 'clk_ast_ext_scn'} \
      -comment "This warning pops up due to clock signals going through some of the pads"

# Unused power OK signals
waive -rules {HIER_NET_NOT_READ NOT_READ} -location {chip_darjeeling_asic.sv} -regexp {(Signal|Net) 'ast_pwst(\.vcc_pok|_h\.io_pok|_h\.main_pok|_h\.vcc_pok)' is not read from in module 'chip_darjeeling_asic'} \
      -comment "Not all POK signals are used inside top_darjeeling"

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -regexp {Clock 'ast_base_clks.clk_io' reaches a multiplexer here, used as a clock 'clk_i' at} \
      -comment "This is a clock signal that is fed back into AST."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -regexp {Clock 'clkmgr_aon_clocks.clk_io_div4_secure' is driven by a multiplexer here, used as a clock 'clk_i' at} \
      -comment "This is a clock signal that is fed back into AST."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -regexp {Clock 'clkmgr_aon_clocks.clk_io_div4_infra' is driven by a multiplexer here, used as a clock 'clk_i' at} \
      -comment "This is a clock signal that is fed back into AST."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -regexp {Clock '(rv|lc)_jtag_req.tck' is driven by a multiplexer here, used as a clock 'tck_i'} \
      -comment "The JTAG clocks are muxed due to TAP selection logic."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -msg {Clock 'mio_in[4]' reaches a multiplexer here, used as a clock 'tck_i'} \
      -comment "The JTAG clocks are muxed due to TAP selection logic."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -regexp {Clock 'clkmgr_aon_clocks.clk_io_div4_powerup' is driven by a multiplexer here} \
      -comment "Divided clocks have multiplexers at their roots to enable scan controllability."

waive -rules {CLOCK_MUX} -location {chip_darjeeling_asic.sv} -msg {Clock 'dio_in[42]' reaches a multiplexer here, used as a clock 'clk_src_i'} \
      -comment "This is the SPI device clock input."

waive -rules {RESET_USE} -location {chip_darjeeling_asic.sv} -regexp {'rstmgr_aon_resets..*' is connected to 'ast' port 'sns_rsts_i..*', and used as an asynchronous reset or set} \
      -comment "This is a reset struct that is fed back into AST."

waive -rules {RESET_MUX} -location {chip_darjeeling_asic.sv} -regexp {Asynchronous reset 'rstmgr_aon_resets..*' is driven by a multiplexer here, used as a reset} \
      -comment "This is a reset struct that is fed back into AST."

# REMOVE FOR PRODUCTION, see https://github.com/lowRISC/opentitan/issues/15674
waive -rules {LHS_TOO_SHORT} -location {aes_prng_masking.sv} \
      -regexp {Bitlength mismatch between 'unused_assert_static_lint_error' length 1 and 'AesSecAllowForcingMasksNonDefault'\(1'b1\)' length 2} \
      -comment "For ES we want to be able to switch off the masking inside AES, see https://github.com/lowRISC/opentitan/issues/14240. REMOVE FOR PRODUCTION!"
