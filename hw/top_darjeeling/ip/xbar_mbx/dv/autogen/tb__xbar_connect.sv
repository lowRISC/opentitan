// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// tb__xbar_connect generated by `tlgen.py` tool

xbar_mbx dut();

`DRIVE_CLK(clk_mbx_i)

initial force dut.clk_mbx_i = clk_mbx_i;

// TODO, all resets tie together
initial force dut.rst_mbx_ni = rst_n;

// Host TileLink interface connections
`CONNECT_TL_HOST_IF(mbx, dut, clk_mbx_i, rst_n)

// Device TileLink interface connections
`CONNECT_TL_DEVICE_IF(mbx0__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx1__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx2__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx3__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx4__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx5__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx6__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx_pcie0__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx_pcie1__soc, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(racl_ctrl, dut, clk_mbx_i, rst_n)
`CONNECT_TL_DEVICE_IF(ac_range_check, dut, clk_mbx_i, rst_n)
