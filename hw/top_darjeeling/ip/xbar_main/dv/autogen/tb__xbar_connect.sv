// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// tb__xbar_connect generated by `tlgen.py` tool

xbar_main dut();

`DRIVE_CLK(clk_main_i)
`DRIVE_CLK(clk_fixed_i)

initial force dut.clk_main_i = clk_main_i;
initial force dut.clk_fixed_i = clk_fixed_i;

// TODO, all resets tie together
initial force dut.rst_main_ni = rst_n;
initial force dut.rst_fixed_ni = rst_n;

// Host TileLink interface connections
`CONNECT_TL_HOST_IF(rv_core_ibex__corei, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(rv_core_ibex__cored, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(rv_dm__sba, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(dma__host, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx0__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx1__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx2__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx3__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx4__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx5__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx6__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx_jtag__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx_pcie0__sram, dut, clk_main_i, rst_n)
`CONNECT_TL_HOST_IF(mbx_pcie1__sram, dut, clk_main_i, rst_n)

// Device TileLink interface connections
`CONNECT_TL_DEVICE_IF(rv_dm__regs, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rv_dm__mem, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rom_ctrl0__rom, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rom_ctrl0__regs, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rom_ctrl1__rom, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rom_ctrl1__regs, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(peri, dut, clk_fixed_i, rst_n)
`CONNECT_TL_DEVICE_IF(soc_proxy__ctn, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(hmac, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(kmac, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(aes, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(entropy_src, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(csrng, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(edn0, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(edn1, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rv_plic, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(otbn, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(keymgr_dpe, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(rv_core_ibex__cfg, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(sram_ctrl_main__regs, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(sram_ctrl_main__ram, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(sram_ctrl_mbox__regs, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(sram_ctrl_mbox__ram, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(dma, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx0__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx1__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx2__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx3__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx4__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx5__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx6__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx_jtag__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx_pcie0__core, dut, clk_main_i, rst_n)
`CONNECT_TL_DEVICE_IF(mbx_pcie1__core, dut, clk_main_i, rst_n)
