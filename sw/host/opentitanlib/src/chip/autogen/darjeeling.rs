// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// This file was generated automatically.
// Please do not modify content of this file directly.
// File generated by using template: "host_toplevel.rs.tpl"
// To regenerate this file follow OpenTitan topgen documentations.

#![allow(dead_code)]

use crate::with_unknown;

with_unknown! {
    pub enum PinmuxPeripheralIn: u32 [default = Self::End] {
        SocProxySocGpi12 = 0,
        SocProxySocGpi13 = 1,
        SocProxySocGpi14 = 2,
        SocProxySocGpi15 = 3,
        End = 4,
    }

    pub enum PinmuxInsel: u32 [default = Self::End] {
        ConstantZero = 0,
        ConstantOne = 1,
        Mio0 = 2,
        Mio1 = 3,
        Mio2 = 4,
        Mio3 = 5,
        Mio4 = 6,
        Mio5 = 7,
        Mio6 = 8,
        Mio7 = 9,
        Mio8 = 10,
        Mio9 = 11,
        Mio10 = 12,
        Mio11 = 13,
        End = 14,
    }

    pub enum PinmuxMioOut: u32 [default = Self::End] {
        Mio0 = 0,
        Mio1 = 1,
        Mio2 = 2,
        Mio3 = 3,
        Mio4 = 4,
        Mio5 = 5,
        Mio6 = 6,
        Mio7 = 7,
        Mio8 = 8,
        Mio9 = 9,
        Mio10 = 10,
        Mio11 = 11,
        End = 12,
    }

    pub enum PinmuxOutsel: u32 [default = Self::End] {
        ConstantZero = 0,
        ConstantOne = 1,
        ConstantHighZ = 2,
        SocProxySocGpo12 = 3,
        SocProxySocGpo13 = 4,
        SocProxySocGpo14 = 5,
        SocProxySocGpo15 = 6,
        OtpMacroTest0 = 7,
        End = 8,
    }

    pub enum DirectPads: u32 [default = Self::End] {
        SpiHost0Sd0 = 0,
        SpiHost0Sd1 = 1,
        SpiHost0Sd2 = 2,
        SpiHost0Sd3 = 3,
        SpiDeviceSd0 = 4,
        SpiDeviceSd1 = 5,
        SpiDeviceSd2 = 6,
        SpiDeviceSd3 = 7,
        I2c0Scl = 8,
        I2c0Sda = 9,
        GpioGpio0 = 10,
        GpioGpio1 = 11,
        GpioGpio2 = 12,
        GpioGpio3 = 13,
        GpioGpio4 = 14,
        GpioGpio5 = 15,
        GpioGpio6 = 16,
        GpioGpio7 = 17,
        GpioGpio8 = 18,
        GpioGpio9 = 19,
        GpioGpio10 = 20,
        GpioGpio11 = 21,
        GpioGpio12 = 22,
        GpioGpio13 = 23,
        GpioGpio14 = 24,
        GpioGpio15 = 25,
        GpioGpio16 = 26,
        GpioGpio17 = 27,
        GpioGpio18 = 28,
        GpioGpio19 = 29,
        GpioGpio20 = 30,
        GpioGpio21 = 31,
        GpioGpio22 = 32,
        GpioGpio23 = 33,
        GpioGpio24 = 34,
        GpioGpio25 = 35,
        GpioGpio26 = 36,
        GpioGpio27 = 37,
        GpioGpio28 = 38,
        GpioGpio29 = 39,
        GpioGpio30 = 40,
        GpioGpio31 = 41,
        SpiDeviceSck = 42,
        SpiDeviceCsb = 43,
        SpiDeviceTpmCsb = 44,
        Uart0Rx = 45,
        SocProxySocGpi0 = 46,
        SocProxySocGpi1 = 47,
        SocProxySocGpi2 = 48,
        SocProxySocGpi3 = 49,
        SocProxySocGpi4 = 50,
        SocProxySocGpi5 = 51,
        SocProxySocGpi6 = 52,
        SocProxySocGpi7 = 53,
        SocProxySocGpi8 = 54,
        SocProxySocGpi9 = 55,
        SocProxySocGpi10 = 56,
        SocProxySocGpi11 = 57,
        SpiHost0Sck = 58,
        SpiHost0Csb = 59,
        Uart0Tx = 60,
        SocProxySocGpo0 = 61,
        SocProxySocGpo1 = 62,
        SocProxySocGpo2 = 63,
        SocProxySocGpo3 = 64,
        SocProxySocGpo4 = 65,
        SocProxySocGpo5 = 66,
        SocProxySocGpo6 = 67,
        SocProxySocGpo7 = 68,
        SocProxySocGpo8 = 69,
        SocProxySocGpo9 = 70,
        SocProxySocGpo10 = 71,
        SocProxySocGpo11 = 72,
        End = 73,
    }

    pub enum MuxedPads: u32 [default = Self::End] {
        Mio0 = 0,
        Mio1 = 1,
        Mio2 = 2,
        Mio3 = 3,
        Mio4 = 4,
        Mio5 = 5,
        Mio6 = 6,
        Mio7 = 7,
        Mio8 = 8,
        Mio9 = 9,
        Mio10 = 10,
        Mio11 = 11,
        End = 12,
    }
}

#[allow(non_camel_case_types)]
pub mod ujson_alias {
    use super::*;
    // Create aliases for the C names of these types so that the ujson
    // created structs can access these structures by their C names.
    pub type pinmux_peripheral_in_t = PinmuxPeripheralIn;
    pub type pinmux_insel_t = PinmuxInsel;
    pub type pinmux_mio_out_t = PinmuxMioOut;
    pub type pinmux_outsel_t = PinmuxOutsel;
}
