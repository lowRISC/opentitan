diff --git a/compiler-rt/lib/profile/InstrProfiling.c b/compiler-rt/lib/profile/InstrProfiling.c
index 6df65f66d..5d20a762f 100644
--- a/compiler-rt/lib/profile/InstrProfiling.c
+++ b/compiler-rt/lib/profile/InstrProfiling.c
@@ -10,15 +10,13 @@
 // with freestanding compilation. See `darwin_add_builtin_libraries`.
 
 #include <limits.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
 
 #include "InstrProfiling.h"
 #include "InstrProfilingInternal.h"
+#include "sw/device/lib/base/memory.h"
 
 #define INSTR_PROF_VALUE_PROF_DATA
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 
 COMPILER_RT_VISIBILITY uint64_t __llvm_profile_get_magic(void) {
   return sizeof(void *) == sizeof(uint64_t) ? (INSTR_PROF_RAW_MAGIC_64)
diff --git a/compiler-rt/lib/profile/InstrProfiling.h b/compiler-rt/lib/profile/InstrProfiling.h
index 237acb33f..9e37253b3 100644
--- a/compiler-rt/lib/profile/InstrProfiling.h
+++ b/compiler-rt/lib/profile/InstrProfiling.h
@@ -10,32 +10,31 @@
 #define PROFILE_INSTRPROFILING_H_
 
 #include "InstrProfilingPort.h"
-#include <stdio.h>
 
 #define INSTR_PROF_VISIBILITY COMPILER_RT_VISIBILITY
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 
 enum ValueKind {
 #define VALUE_PROF_KIND(Enumerator, Value, Descr) Enumerator = Value,
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 };
 
 typedef void *IntPtrT;
 typedef struct COMPILER_RT_ALIGNAS(INSTR_PROF_DATA_ALIGNMENT)
     __llvm_profile_data {
 #define INSTR_PROF_DATA(Type, LLVMType, Name, Initializer) Type Name;
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 } __llvm_profile_data;
 
 typedef struct __llvm_profile_header {
 #define INSTR_PROF_RAW_HEADER(Type, Name, Initializer) Type Name;
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 } __llvm_profile_header;
 
 typedef struct ValueProfNode * PtrToNodeT;
 typedef struct ValueProfNode {
 #define INSTR_PROF_VALUE_NODE(Type, LLVMType, Name, Initializer) Type Name;
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 } ValueProfNode;
 
 /*!
@@ -129,7 +128,7 @@ int __llvm_profile_check_compatibility(const char *Profile,
  */
 void INSTR_PROF_VALUE_PROF_FUNC(
 #define VALUE_PROF_FUNC_PARAM(ArgType, ArgName, ArgLLVMType) ArgType ArgName
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
     );
 
 void __llvm_profile_instrument_target_value(uint64_t TargetValue, void *Data,
@@ -219,7 +218,7 @@ void __llvm_profile_set_filename(const char *Name);
  * program initialization time. Support for transferring the mmap'd profile
  * counts to a new file has not been implemented.
  */
-void __llvm_profile_set_file_object(FILE *File, int EnableMerge);
+//void __llvm_profile_set_file_object(FILE *File, int EnableMerge);
 
 /*! \brief Register to write instrumentation data to file at exit. */
 int __llvm_profile_register_write_file_atexit(void);
diff --git a/compiler-rt/lib/profile/InstrProfilingMerge.c b/compiler-rt/lib/profile/InstrProfilingMerge.c
index 16ebc2f8b..9ef47a06d 100644
--- a/compiler-rt/lib/profile/InstrProfilingMerge.c
+++ b/compiler-rt/lib/profile/InstrProfilingMerge.c
@@ -11,10 +11,9 @@
 
 #include "InstrProfiling.h"
 #include "InstrProfilingInternal.h"
-#include "InstrProfilingUtil.h"
 
 #define INSTR_PROF_VALUE_PROF_DATA
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 
 COMPILER_RT_VISIBILITY
 void (*VPMergeHook)(ValueProfData *, __llvm_profile_data *);
diff --git a/compiler-rt/lib/profile/InstrProfilingPlatformOther.c b/compiler-rt/lib/profile/InstrProfilingPlatformOther.c
index 0e59148e2..4fd2a5170 100644
--- a/compiler-rt/lib/profile/InstrProfilingPlatformOther.c
+++ b/compiler-rt/lib/profile/InstrProfilingPlatformOther.c
@@ -10,8 +10,7 @@
     !(defined(__sun__) && defined(__svr4__)) && !defined(__NetBSD__) &&        \
     !defined(_WIN32)
 
-#include <stdlib.h>
-#include <stdio.h>
+#include <stddef.h>
 
 #include "InstrProfiling.h"
 #include "InstrProfilingInternal.h"
diff --git a/compiler-rt/lib/profile/InstrProfilingPort.h b/compiler-rt/lib/profile/InstrProfilingPort.h
index ed0905cc5..ddc1f408f 100644
--- a/compiler-rt/lib/profile/InstrProfilingPort.h
+++ b/compiler-rt/lib/profile/InstrProfilingPort.h
@@ -88,7 +88,6 @@
   (DomType *)__sync_fetch_and_add((long *)&PtrVar, sizeof(DomType) * PtrIncr)
 #endif
 #else /* COMPILER_RT_HAS_ATOMICS != 1 */
-#include "InstrProfilingUtil.h"
 #define COMPILER_RT_BOOL_CMPXCHG(Ptr, OldV, NewV)                              \
   lprofBoolCmpXchg((void **)Ptr, OldV, NewV)
 #define COMPILER_RT_PTR_FETCH_ADD(DomType, PtrVar, PtrIncr)                    \
@@ -117,17 +116,11 @@ static inline size_t getpagesize() {
   return S.dwPageSize;
 }
 #else /* defined(_WIN32) */
-#include <unistd.h>
 #endif /* defined(_WIN32) */
 
-#define PROF_ERR(Format, ...)                                                  \
-  fprintf(stderr, "LLVM Profile Error: " Format, __VA_ARGS__);
-
-#define PROF_WARN(Format, ...)                                                 \
-  fprintf(stderr, "LLVM Profile Warning: " Format, __VA_ARGS__);
-
-#define PROF_NOTE(Format, ...)                                                 \
-  fprintf(stderr, "LLVM Profile Note: " Format, __VA_ARGS__);
+#define PROF_ERR(Format, ...)
+#define PROF_WARN(Format, ...)
+#define PROF_NOTE(Format, ...)
 
 #ifndef MAP_FILE
 #define MAP_FILE 0
@@ -144,7 +137,7 @@ static inline size_t getpagesize() {
 
 #else /* defined(__FreeBSD__) */
 
-#include <inttypes.h>
+#include <stddef.h>
 #include <stdint.h>
 
 #endif /* defined(__FreeBSD__) && defined(__i386__) */
diff --git a/compiler-rt/lib/profile/InstrProfilingWriter.c b/compiler-rt/lib/profile/InstrProfilingWriter.c
index 25f630293..730262250 100644
--- a/compiler-rt/lib/profile/InstrProfilingWriter.c
+++ b/compiler-rt/lib/profile/InstrProfilingWriter.c
@@ -13,14 +13,14 @@
 /* For _alloca */
 #include <malloc.h>
 #endif
-#include <string.h>
+#include "sw/device/lib/base/memory.h"
 
 #include "InstrProfiling.h"
 #include "InstrProfilingInternal.h"
 #include "InstrProfilingPort.h"
 
 #define INSTR_PROF_VALUE_PROF_DATA
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 
 COMPILER_RT_VISIBILITY void (*FreeHook)(void *) = NULL;
 static ProfBufferIO TheBufferIO;
@@ -281,7 +281,7 @@ lprofWriteDataImpl(ProfDataWriter *Writer, const __llvm_profile_data *DataBegin,
 
 /* Initialize header structure.  */
 #define INSTR_PROF_RAW_HEADER(Type, Name, Init) Header.Name = Init;
-#include "profile/InstrProfData.inc"
+#include "sw/vendor/llvm_clang_rt_profile/compiler-rt/include/profile/InstrProfData.inc"
 
   /* Write the profile header. */
   ProfDataIOVec IOVec[] = {{&Header, sizeof(__llvm_profile_header), 1, 0}};
