// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

#ifndef OPENTITAN_SW_DEVICE_SILICON_CREATOR_MANUF_KEYS_FAKE_RMA_UNLOCK_TOKEN_EXPORT_KEY_PK_HSM_H_
#define OPENTITAN_SW_DEVICE_SILICON_CREATOR_MANUF_KEYS_FAKE_RMA_UNLOCK_TOKEN_EXPORT_KEY_PK_HSM_H_

/**
 * These constants / macros were manually created from an ECDH P256 keypair
 * generated using OpenSSL and the following commands.
 *
 * Generate the curve:
 * `openssl ecparam -out curve.der -name prime256v1 -outform DER`
 *
 * Generate the ECDH private key:
 * `openssl ecparam -in curve.der -genkey -out sk_hsm.der -param_enc explicit \
 * -outform DER`
 *
 * Generate the ECDH public key:
 * `openssl pkey -in sk_hsm.der -pubout -out pk_hsm.der -outform DER`
 *
 * It has been formatted to allow loading an ECC public key in the crypto lib.
 *
 * TODO: update opentitantool to generate the macro below directly using a
 * public key DER file generated by OpenSSL, or an HSM.
 */

enum {
  kEcdhPrivateKeySizeInBytes = 32,
  kEcdhPrivateKeySizeIn32BitWords =
      kEcdhPrivateKeySizeInBytes / sizeof(uint32_t),
};

uint32_t kRmaUnlockTokenEcdhPkHsmX[kEcdhPrivateKeySizeIn32BitWords] = {
    0x2dd4e679, 0xe90b3d77, 0x892537c0, 0x3f0ad56d,
    0x844c02ca, 0x8c199534, 0x5b3dd882, 0xd8c4a73b,
};
uint32_t kRmaUnlockTokenEcdhPkHsmY[kEcdhPrivateKeySizeIn32BitWords] = {
    0x5330cf7b, 0xfcec6892, 0x8cb4d215, 0xc7f6d634,
    0xb5fbbf91, 0x197090a0, 0xcd841874, 0xf669ffcf,
};

// TODO: update the .checksum fields once cryptolib uses this field.
#define RMA_UNLOCK_TOKEN_EXPORT_KEY_PK_HSM    \
  {                                           \
    .x =                                      \
        {                                     \
            .key_mode = kKeyModeEcdh,         \
            .key_length = 32,                 \
            .key = kRmaUnlockTokenEcdhPkHsmX, \
            .checksum = 0,                    \
        },                                    \
    .y = {                                    \
        .key_mode = kKeyModeEcdh,             \
        .key_length = 32,                     \
        .key = kRmaUnlockTokenEcdhPkHsmY,     \
        .checksum = 0,                        \
    },                                        \
  }

#endif  // OPENTITAN_SW_DEVICE_SILICON_CREATOR_MANUF_KEYS_FAKE_RMA_UNLOCK_TOKEN_EXPORT_KEY_PK_HSM_H_
