// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// The earlgrey keys were generated by the following command:
// hsmtool -t <token> -u user -p <pin> exec earlgrey_keygen.hjson

[
  ////////////////////////////////////////////////////////////
  //
  // There are 3 prod keys named earlgrey_a0_prod_{0,1,2}
  //
  ////////////////////////////////////////////////////////////
  {
    command: "rsa-generate",
    label: "earlgrey_a0_prod_0",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is not extractable from the HSM.
          CKA_EXTRACTABLE: false,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The key may not be revealed in plaintext outside the HSM.
          CKA_SENSITIVE: true,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  {
    command: "rsa-generate",
    label: "earlgrey_a0_prod_1",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is not extractable from the HSM.
          CKA_EXTRACTABLE: false,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The key may not be revealed in plaintext outside the HSM.
          CKA_SENSITIVE: true,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  {
    command: "rsa-generate",
    label: "earlgrey_a0_prod_2",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is not extractable from the HSM.
          CKA_EXTRACTABLE: false,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The key may not be revealed in plaintext outside the HSM.
          CKA_SENSITIVE: true,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  ////////////////////////////////////////////////////////////
  //
  // There are 2 dev keys named earlgrey_a0_dev_{0,1}
  //
  ////////////////////////////////////////////////////////////
  {
    command: "rsa-generate",
    label: "earlgrey_a0_dev_0",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is extractable as required for importing into signing fobs.
          CKA_EXTRACTABLE: true,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The dev keys may be exported in plaintext so that they can be
          // imported onto personal tokens such as the NitroKey.
          CKA_SENSITIVE: false,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  {
    command: "rsa-generate",
    label: "earlgrey_a0_dev_1",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is extractable as required for importing into signing fobs.
          CKA_EXTRACTABLE: true,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The dev keys may be exported in plaintext so that they can be
          // imported onto personal tokens such as the NitroKey.
          CKA_SENSITIVE: false,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  ////////////////////////////////////////////////////////////
  //
  // There are 2 test keys named earlgrey_a0_test_{0,1}
  //
  ////////////////////////////////////////////////////////////
  {
    command: "rsa-generate",
    label: "earlgrey_a0_test_0",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is extractable as required for importing into signing fobs.
          CKA_EXTRACTABLE: true,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The test keys may be exported in plaintext so that they can be
          // imported onto personal tokens such as the NitroKey.
          CKA_SENSITIVE: false,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
  {
    command: "rsa-generate",
    label: "earlgrey_a0_test_1",
    key_length: 3072,
    wrapping: false,
    extractable: false,
    public_exponent: 65537,
    public_template: {
          CKA_CLASS: "CKO_PUBLIC_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          CKA_ENCRYPT: false,
          CKA_VERIFY: true
    },
    private_template: {
          CKA_CLASS: "CKO_PRIVATE_KEY",
          CKA_KEY_TYPE: "CKK_RSA",
          CKA_TOKEN: true,
          // The key is valid for signing, but not decryption or unwrapping.
          CKA_SIGN: true
          CKA_DECRYPT: false,
          CKA_UNWRAP: false,
          // The key is extractable as required for importing into signing fobs.
          CKA_EXTRACTABLE: true,
          // The key may not be accessed until the user has authenticated
          // to the HSM.
          CKA_PRIVATE: true,
          // The test keys may be exported in plaintext so that they can be
          // imported onto personal tokens such as the NitroKey.
          CKA_SENSITIVE: false,
          CKA_MODIFIABLE: true,
          CKA_DESTROYABLE: false,
    },
  },
]
