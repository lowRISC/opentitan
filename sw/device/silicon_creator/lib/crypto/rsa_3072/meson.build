# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Create otbn sources dictionary
sw_lib_crypto_rsa_3072_otbn_sources = {
  'rsa_3072_verify': files(
    'rsa_3072_verify.s',
    'rsa_3072.s',
  ),
  'rsa_3072_modexp': files(
    'rsa_3072_modexp.s',
    'rsa_3072.s',
  ),
}

# OTBN BUILD procedure
sw_lib_crypto_rsa_3072_otbn = {}
foreach app_name, app_sources : sw_lib_crypto_rsa_3072_otbn_sources
  # Output files generated by the otbn_build.py script.
  app_output_files = [
    app_name + '.rv32embed.o',
    app_name + '.elf',
  ]

  # Target calling otbn_build.py
  target = custom_target(
    'sw_lib_crypto_otbn_apps_' + app_name + '_target',
    input: app_sources,
    output: app_output_files,
    command: otbn_build_command,
    depend_files: [otbn_build_depend_files,],
  )

  # A library containing the OTBN application in a form embeddable into device
  # (Ibex) software (the *.rv32embed.o file).
  embedded_lib = static_library(
    app_name,
    [target[0]] # == app_output_files[0], i.e. *.rv32embed.o
  )

  # A dependency on the application as embeddable library, to be used if
  # device (Ibex) software wants to include an OTBN application in its binary.
  app_dependency = declare_dependency(
    link_with: embedded_lib,
  )

  sw_lib_crypto_rsa_3072_otbn += {
    app_name: {
      'elf': target[1],
      'rv32embed_lib': embedded_lib,
      'rv32embed_dependency': app_dependency,
    }
  }

  custom_target(
    'sw_lib_crypto_rsa_3072_otbn_app_export_' + app_name,
    command: export_target_command,
    depend_files: [export_target_depend_files,],
    input: [target[1]],
    output: 'sw_lib_crypto_rsa_3072_otbn_app_export_' + app_name,
    build_always_stale: true,
    build_by_default: true,
  )

endforeach

# C wrapper for RSA-3072 modexp
sw_silicon_creator_lib_crypto_rsa_3072_verify = declare_dependency(
  link_with: static_library(
    'sw_silicon_creator_lib_crypto_rsa_3072_modexp',
    sources: [
      'rsa_3072_modexp.c',
    ],
    dependencies: [
      sw_silicon_creator_lib_otbn_util,
      sw_lib_crypto_rsa_3072_otbn['rsa_3072_modexp']['rv32embed_dependency'],
    ],
  ),
)

# C wrapper for RSA-3072 verify
sw_silicon_creator_lib_crypto_rsa_3072_verify = declare_dependency(
  link_with: static_library(
    'sw_silicon_creator_lib_crypto_rsa_3072_verify',
    sources: [
      'rsa_3072_verify.c',
    ],
    dependencies: [
      sw_silicon_creator_lib_otbn_util,
      sw_lib_crypto_rsa_3072_otbn['rsa_3072_verify']['rv32embed_dependency'],
    ],
  ),
)
